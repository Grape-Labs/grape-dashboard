{"version":3,"sources":["components/Tools/WalletAddress.tsx","views/Home/Home.jsx","models/UserServer.ts","views/Servers/Servers.jsx","views/Settings/TwitterSettings.tsx","models/User.ts","components/StaticIcons/DiscordIcon.tsx","views/Settings/Settings.tsx","views/Confirmation/Confirmation.tsx","views/Register/Register.tsx","views/News/News.tsx","views/GrapePartners/GrapePartners.jsx","views/Membership/Membership.tsx","views/Governance/Governance.tsx","components/Header/Header.tsx","components/ConfirmDialog/ConfirmDialog.tsx","config/theme.tsx","App.tsx","reportWebVitals.ts","index.tsx","views/Feed/TwitterFeed.tsx","utils/token/safe-math.ts","views/SendToken/SendToken.tsx","views/OrcaSwap/OrcaSwap.tsx","views/Summary/Summary.tsx","utils/ftx-pay.tsx","views/TopHolders/TopHolders.tsx","utils/wallet/NakedWallet.ts","components/WalletAdapterMui/useWalletDialog.ts","components/WalletAdapterMui/WalletIcon.tsx","components/WalletAdapterMui/WalletConnectButton.tsx","components/WalletAdapterMui/WalletListItem.tsx","components/WalletAdapterMui/WalletDialog.tsx","components/WalletAdapterMui/WalletDialogButton.tsx","components/WalletAdapterMui/WalletDialogProvider.tsx","components/WalletAdapterMui/WalletMultiButton.tsx","components/ConnectDialog/ConnectDialog.tsx","models/Session.ts","components/StaticIcons/GrapeIcon.tsx","views/TransactionHistory/TransactionHistory.tsx","components/StaticIcons/SolIcon.tsx","components/Tools/constants.ts","views/Portfolio/Portfolio.jsx","contexts/session.tsx","views/Contribute/Contribute.jsx","views/Farms/Farms.jsx","views/Payments/Payments.tsx","views/Portfolio/PortfolioTable.jsx","components/StaticIcons/SolCurrencyIcon.tsx","views/Contribute/ContributeTable.jsx","views/Farms/FarmsTable.jsx","utils/token/ids.ts","utils/token/tokens.ts","utils/token/farms.ts","components/Tools/PretifyCommaNumber.tsx"],"names":["Alert","React","forwardRef","props","ref","elevation","variant","ValidateAddress","address","length","PublicKey","isOnCurve","toBuffer","ValidateCurve","e","console","log","MakeLinkableAddress","addr","trim","hasextlink","hascopy","fontsize","permalink","isDNS","stri_addr","useState","open_snackbar","setSnackbarState","handleCopyClick","handleCloseSnackbar","event","reason","ClipboardAction","size","text","onCopy","sx","fontSize","mr","open","autoHideDuration","message","onClose","severity","width","Fragment","PermalinkAction","window","location","href","ml","start","substring","end","trimAddress","component","target","ConnectedWalletComponet","BasicComponent","Portfolio","GovernanceView","RenderDashboardComponents","useWallet","session","publicKey","wallet","isConnected","isWallet","HomeView","useSession","setSession","callstopk","setCallToPk","useEffect","style","height","overflow","Grid","container","spacing","item","xs","Paper","class","align","justify","direction","Typography","UserServer","data","userServerId","userId","serverId","name","logo","twitter","this","Error","token","signature","fromTransaction","JSON","stringify","fetch","GRAPE_APP_API_URL","method","headers","body","response","json","userServer","StyledTable","styled","Table","theme","background","minHeight","lineHeight","padding","borderBottom","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","TablePaginationActions","useTheme","count","page","rowsPerPage","onPageChange","Box","flexShrink","IconButton","onClick","disabled","Math","ceil","max","ServerRow","setOpen","labelId","server","indexus","unregister","TableRow","TableCell","Avatar","alt","src","bgcolor","id","Button","color","url","Tooltip","title","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","margin","TableHead","TwitterFeed","twitterhandle","twitterheight","twitterelements","componentTwitterFeed","ServersView","orderT1","setOrderT1","orderByT1","setOrderByT1","tab","setTab","servers","setServers","userServers","setUserServers","rowsPerPageT1","setRowsPerPageT1","rowsPerPageT2","pageT1","setPageT1","pageT2","emptyRowsT1","min","register","push","splice","userServerIds","Map","forEach","set","newServers","registered","get","property","servercolumns","label","options","filter","display","customBodyRender","value","tableMeta","updateValue","alignItems","rowData","setCellProps","setCellHeaderProps","md","lg","m","position","gutterBottom","borderColor","Tabs","onChange","_event","newValue","Tab","TableContainer","minWidth","sortDirection","TableSortLabel","active","handleRequestSortT1","visuallyHidden","TableBody","slice","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","columns","responsive","selectableRows","download","print","viewColumns","BootstrapDialog","Dialog","backgroundColor","justifyContent","marginRight","palette","grey","boxShadow","flexGrow","borderRadius","undefined","fontWeight","TwitterBoardingDialog","open_dialog","setOpenPKDialog","twitter_url","setTwitterURL","twitter_handle","setTwitterHandle","connected","sendTransaction","disconnect","autoConnect","signTransaction","connection","signMessage","useConnection","loading_registration","setLoadingRegistration","new_twitter_registration","enqueueSnackbar","useSnackbar","postTwitterRegistrarRequest","useCallback","error","transaction","userPubkey","twitterLink","twitterHandle","transactionBuffer","serialize","requireAllSignatures","verifySignatures","payload","pubkey","toBase58","BONFIDA_TWITTER_REGISTRAR_URL","Headers","catch","result","registerWithConnectedWallet","twitterUrl","createVerifiedTwitterRegistry","instruction","Transaction","add","getRecentBlockhash","recentBlockhash","blockhash","feePayer","adapter","then","result_response","setTimeout","setNewTwitterRegistration","action","key","steps","description","handleClickOpenDialog","WalletNotConnectedError","handleReset","handleCloseDialog","activeStep","setActiveStep","VerifyLastStepWallet","handleNext","prevActiveStep","alert","handleCopyNext","navigator","clipboard","writeText","toString","handleBack","TwitterRegistrationLastStep","p","CircularProgress","maxWidth","PaperProps","border","borderTop","DialogTitle","DialogContent","Stepper","orientation","step","Step","StepLabel","optional","StepContent","mb","mt","TextField","fullWidth","replace","setTwitterHandleRegEx","Snackbar","TwitterSettings","newTwitterRegistration","twitterRegistration","setTwitterRegistry","twitterRegistryKey","setTwitterRegistryKey","loadingTwitter","setLoadingRPC","setTwitterOnChainRegistry","endpoint","deregisterTwitterWithConnectedWallet","deleteTwitterRegistry","confirmTransaction","checkTwitterRegistration","unlinkTwitter","getTwitterHandleandRegistryKeyViaFilters","scope","User","discordId","twitterId","DiscordIcon","SvgIcon","d","SettingsView","discord","setDiscord","wallets","userWallets","unlinkDiscord","updateUser","disconnectWallet","className","marginLeft","mapwallet","getParam","param","URLSearchParams","document","search","ConfirmationView","str","avatar","provider","rowSpacing","charAt","toUpperCase","AvatarGroup","Link","to","parameter","hash","RegisterView","discordUrl","tokenParam","decodeURIComponent","serverName","serverLogo","isAlreadyRegistered","redirect","disconnectSession","flexDirection","flexWrap","textAlign","ButtonGroup","ConnectDialog","menuId","menuWalletId","handleProfileMenuOpen","buttonText","nakedWallet","login","NewsView","twitterFeedHandle","twitterFeedHeight","twitterFeedElements","componentExpanded","tableLayout","borderCollapse","borderSpacing","boxSizing","textTransform","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","numberFormater","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","formatNumber","val","format","LinearProgressWithLabel","pr","LinearProgress","round","GrapePartnersView","partnercolumns","whiteSpace","MembershipView","flex","marginBottom","mode","typography","body2","secondary","Container","sm","Stack","List","dense","ListItem","ListItemAvatar","ListItemText","primary","loading","setLoading","Array","tokenOwnerRecords","setOwnerRecords","getGovernance","programId","realmId","governingTokenMint","governingTokenOwner","getTokenOwnerRecordForRealm","ownerRecords","getGovernanceAccounts","TokenOwnerRecord","pubkeyFilter","Skeleton","overflowX","verticalAlign","account","governingTokenDepositAmount","Header","open_menu","providers","open_wallet","setOpenWallet","anchorEl","setAnchorEl","isWalletOpen","Boolean","useLocation","currPath","pathname","searchParams","handleMenuClose","SimpleDialog","selectedValue","button","Toolbar","noWrap","NavLink","currentTarget","handleClickOpen","type","callback","Menu","keepMounted","MenuItem","useConfirmDialogStore","create","onSubmit","close","ConfirmDialog","Close","DialogActions","createTheme","default","paper","Copyright","MuiDrawer","shouldForwardProp","prop","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","breakpoints","up","DashboardContent","network","WalletAdapterNetwork","Mainnet","GRAPE_RPC_ENDPOINT","useMemo","getPhantomWallet","getSolflareWallet","getSlopeWallet","getSolletWallet","getSolletExtensionWallet","getTorusWallet","clientId","Helmet","content","ThemeProvider","grapeTheme","ConnectionProvider","WalletProvider","CssBaseline","AppBar","toggleDrawer","path","element","NotFound","alignContent","Dashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","ShowTwitterFeed","dataSource","sourceType","screenName","chrome","TwitterFeedComponent","componetExpanded","expanded","TransitionProps","TokenAmount","wei","decimals","isWei","_decimals","BigNumber","exponentiatedBy","multipliedBy","dividedBy","vaule","toFormat","isInteger","toFixed","isNaN","isZero","BootstrapDialogTitle","children","other","right","top","SendToken","amounttosend","setTokensToSend","showTokenName","toaddress","setToAddress","userTokenBalanceInput","setTokenBalanceInput","convertedAmountValue","setConvertedAmountValue","mint","logoURI","balance","conversionrate","sendtype","sendType","memotype","setMemoType","memoref","setMemoRef","memonotes","setMemoNotes","memoText","setMemoText","freeconnection","Connection","FREE_RPC_ENDPOINT","closeSnackbar","GRAPE_TREASURY","handleClose","tokenMintAddress","amount","fromWallet","toWallet","mintPubkey","amountToSend","tokenAccount","GRAPE_TT_MEMO","status","notes","adjustedAmountToSend","pow","SystemProgram","transfer","fromPubkey","toPubkey","lamports","TransactionInstruction","keys","isSigner","isWritable","Buffer","from","cnfrmkey","persist","getParsedAccountInfo","accountInfo","accountParsed","parse","parsed","info","Token","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","TOKEN_PROGRAM_ID","fromAta","toAta","getAccountInfo","createAssociatedTokenAccountInstruction","createTransferInstruction","preventDefault","transferTokens","dividers","placeholder","autoComplete","InputProps","OrcaSwap","tokenSwapAvailableBalance","setPortfolioSwapTokenAvailableBalance","portfolioPositions","amounttoswap","setTokensToSwap","setTokenA","setTokenB","lpFees","setLPFees","networkFees","setNetworkFees","minimumOutputAmount","setMinimumOutputAmount","priceImpact","setPriceImpact","rate","setRate","swapfrom","setSwapFrom","swapto","tokenmap","orca","getOrca","getPortfolioTokenBalance","swapingfrom","withmint","portfolio","swapTokens","tokenPoolA","tokenPoolB","amountToSwap","tokenPairA","getTokenB","tokenAmount","Decimal","getQuote","quote","convertedAmount","getMinOutputAmount","swap","swapPayload","toNumber","getTokenA","signers","signedTransaction","tokenPairB","tokenAmountB","quoteB","convertedAmountB","swapPayloadB","getConvertedValue","tokenPair","lpfees","getLPFees","networkfees","getNetworkFees","expectedoutputamount","getExpectedOutputAmount","priceimpact","getPriceImpact","getRate","lpfeesB","expectedoutputamountB","priceimpactB","rateB","getPool","OrcaPoolConfig","GRAPE_USDC","SOL_USDC","ORCA_USDC","FormControl","InputLabel","Select","inputRef","input","focus","defaultValue","web3","Summary","subtitle","showtimestamp","tstamp","swaptoken","tokenMap","swaptomint","ftxurl","setFtxUrl","TopHolders","largestAccounts","setLargestAccounts","tokenSupply","setTokenSupply","GetLargestTokenAccounts","jsonrpc","params","resultValues","GetTokenSupply","fetchTokenAccountData","Promise","all","flargestTokenAccounts","fetchTokenSupply","ftokenSupply","number","parseFloat","uiAmountString","NakedWallet","walletid","Session","warn","WalletDialogContext","createContext","useWalletDialog","useContext","useStyles","makeStyles","root","WalletIcon","styles","icon","WalletConnectButton","connect","connecting","handleClick","defaultPrevented","startIcon","WalletListItem","endIcon","WalletDialog","featuredWallets","select","setExpanded","featured","more","handleWalletClick","walletName","handleExpandClick","WalletDialogButton","WalletDialogProvider","Provider","StyledMenu","WalletMultiButton","anchor","setAnchor","base58","marginThreshold","TransitionComponent","Fade","transitionDuration","ListItemIcon","require","WalletNavigation","sleep","milliseconds","date","Date","now","currentDate","createNakedSession","cnsPublicKey","confirmWalletWithTransaction","sm_signature","VerifyWallet","sent_publicKey","smessage","TextEncoder","encode","confirm","sign","detached","verify","toBytes","bs58_address","bs58","decode","Object","values","err","response2","session2","WalletButton","ManualWalletForm","walletId","setInputValue","autoFocus","wallet_connect_body","Divider","GrapeIcon","formatBlockTime","epoch","time","date_str","toLocaleDateString","toLocaleString","TransactionHistory","transactionHistory","setTransactionHistory","setTransactionArray","setTransactionRecentHistory","fetchTransactionHistoryData","getSignaturesForAddress","tarray","tmemo","ttime","x","memo","blockTime","getParsedTransactions","transactionDetails","details","arrtransactional","tvalue","ipos","instructions","ivalue","ival_str","ival_json","authority","destination","SolIcon","process","struct","u64","TabPanel","role","hidden","a11yProps","PortfolioView","initPortfolio","setInitPortfolio","initCGPriceData","setInitCGPriceData","initNewPriceData","setInitNewPriceData","setPorfolioBalances","setTokenMap","grapeTicker","setGrapeTicker","solTicker","setSolTicker","setTickerTimestamp","setTabValue","profilePictureUrl","setProfilePicutureUrl","hasProfilePicture","setHasProfilePicture","setSuccess","fetchBalances","encoding","commitment","fetchSOLBalance","fetchNSWPriceList","fetchCoinGeckoPriceList","fetchLegacyPriceList","fetchTokenMap","TokenListProvider","resolve","tokens","tokenList","filterByClusterSlug","getList","reduce","getBalances","cgPriceData","sol","newPriceData","legacyPriceData","tmint","smint","grapeTokenReference","solTokenReference","priceData","prices","hasOwnProperty","find","price","collectibles","uiAmount","tmapitem","extensions","coingeckoId","usd","usd_24h_change","symbol","updatedAt","tokenInfo","getProfilePicture","resize","isAvailable","portfolioTotal","portfolioChange","portfolioPercentageChange","handleDeleteChange","acc","left","marginTop","balances","calltoaction","hasrefresh","deleteIcon","onDelete","animation","LOCAL_STORAGE_KEY","initialState","localState","localStorage","getItem","reducer","newSession","removeItem","SessionContext","SessionProvider","useReducer","setItem","ContributeView","USER_STAKE_INFO_ACCOUNT_LAYOUT","FarmsView","porftolioPositions","initTokenMap","fetchStakedRaydium","decoded","executable","owner","fetchPairsRaydium","fetchAdditionalFarmPools","staked","pairsDataRaydium","other_stakes","farms","additional","farmTokenMint","assets","lp","asset","atmapitem","pendingReward","lpprice","apr","farmInfo","farmName","farmPoolId","stakedInfo","farmLogoURI","farmPendingReward","platform","y","rewardAssets","rasset","stakeAccountInfo","userStakeInfo","poolId","farm","stakerOwner","getFarmByPoolId","pair","shift","coin","depositBalance","shiftedBy","rewardDebt","stupid_balance","stupid_pendingReward","farmValue","farmApr","isFarm","Input","PaymentsView","setColumns","setData","transactionSignature","setTransactionSignature","grapeMemberBalance","setGrapeMemberBalance","setGrapeGovernanceBalance","executeTransactions","transactions","transferTokenInstruction","sum","batchtx","grapecheck","tokentouse","singletx","fetchTokenAccountOwnerHoldings","getGovernanceBalance","portfolio_rsp","governance_rsp","gov_balance","htmlFor","accept","file","files","reader","FileReader","onload","evt","bstr","wb","XLSX","wsname","SheetNames","ws","Sheets","dataString","dataStringLines","split","list","i","row","obj","j","c","selector","processData","sheet_to_csv","readAsBinaryString","TokenIcon","tokenLogo","tokenName","TokenFixPrice","tokenFormatValue","defaultFixed","PortfolioRow","mintdecimals","PortfolioTableView","setPage","setRowsPerPage","emptyRows","portfolioTableCols","SolCurrencyIcon","ContributeTableView","FarmStake","stake","farmStake","FarmIcon","FarmsTableView","STAKE_PROGRAM_ID","STAKE_PROGRAM_ID_V4","STAKE_PROGRAM_ID_V5","TOKENS_TAGS","raydium","mustShow","show","outName","userAdd","solana","unofficial","NATIVE_SOL","mintAddress","tags","TOKENS","WSOL","referrer","BTC","ETH","USDT","WUSDT","USDC","WUSDC","YFI","LINK","XRP","SUSHI","ALEPH","SXP","HGET","CREAM","UNI","SRM","FTT","MSRM","TOMO","KARMA","LUA","MATH","KEEP","SWAG","FIDA","KIN","MAPS","OXY","RAY","xCOPE","COPE","STEP","MEDIA","docs","website","whitepaper","socials","Twitter","Telegram","Medium","ROPE","MER","TULIP","SNY","detailLink","SLRS","WOO","BOP","SAMO","renBTC","renDOGE","LIKE","Discord","DXL","mSOL","PAI","PORT","MNGO","CRP","ATLAS","Twitch","Youtube","POLIS","GRAPE","GENE","DFL","CHEEMS","stSOL","LARIX","RIN","APEX","MNDE","LIQ","WAG","wLDO","SLIM","PRT","SBR","FAB","ABR","IVN","CYS","FRKT","AURY","SYP","WOOF","ORCA","SLND","weWETH","weUNI","weSUSHI","GOFX","IN","weDYDX","STARS","weAXS","weSHIB","OXS","CWAR","UPS","weSAND","weMANA","CAVE","JSOL","APT","SONAR","SHILL","TTT","BOKU","MIMO","wbWBNB","wePEOPLE","XTAG","KKO","VI","SOLC","STR","SPWN","ISOLA","RUN","REAL","CRWNY","BLOCK","SOLAR","BASIS","SOLX","CHICKS","GST","MBS","PRISM","MEAN","TINY","SHDW","SCY","SLC","$WOOD","AART","SVT","BOT","FANT","NOS","SB","PRMS","FCON","CMFI","ATS","PSY","GARI","FLWR","ROLL","OOGI","DOGO","SEEDED","LP_TOKENS","pc","BLACK_LIST","blockBlackList","includes","notUseSolanaPicMint","flushTokenIcon","itemToken","picUrl","addTokensSolanaFunc","picToken","addSolanaCoin","itemMint","FARMS","cloneDeep","localMintStr","user_add_coin_mint","localMintList","floor","addUserLocalCoinMint","myJson","spl","userSelectSourceList","userSelectSource","itemSource","updateTokenTagsChange","reward","isStake","fusion","legacy","dual","version","poolAuthority","poolLpTokenAccount","poolRewardTokenAccount","rewardB","poolRewardTokenAccountB","PretifyCommaNumber","numberWithCommasDecimal"],"mappings":"2lBAaMA,EAAQC,IAAMC,YAAuC,SACvDC,EACAC,GAEA,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,OAa3D,SAASI,EAAgBC,GAC5B,IACI,GAAIA,EAEA,OAAKA,EAAQC,QAAU,IAClBD,EAAQC,QAAU,IAT5B,SAAuBD,GAC1B,OAAOE,YAAUC,UAAU,IAAID,YAAUF,GAASI,YAS3BC,CAAcL,GAInC,MAAMM,GAAGC,QAAQC,IAAI,QAAQF,IAG5B,SAASG,EAAoBd,GAChC,IAAMe,GAAY,OAALf,QAAK,IAALA,OAAA,EAAAA,EAAOe,OAAQ,GACtBC,EAAI,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAOgB,KACdC,GAAkB,OAALjB,QAAK,IAALA,OAAA,EAAAA,EAAOiB,cAAc,EAClCC,GAAe,OAALlB,QAAK,IAALA,OAAA,EAAAA,EAAOkB,WAAW,EAC5BC,GAAgB,OAALnB,QAAK,IAALA,OAAA,EAAAA,EAAOmB,WAAY,OAC9BC,GAAiB,OAALpB,QAAK,IAALA,OAAA,EAAAA,EAAOoB,aAAa,EAChCC,GAAa,OAALrB,QAAK,IAALA,OAAA,EAAAA,EAAOqB,QAAS,KAE1BC,EAAYP,EAChB,EAA0CjB,IAAMyB,UAAS,GAAzD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAkB,WACpBD,GAAiB,IAGfE,EAAsB,SAACC,EAA8BC,GACxC,cAAXA,GAGJJ,GAAiB,IAQrB,SAASK,IACL,OAAIZ,EAEI,eAAC,IAAD,CAAQa,KAAK,QAAQ5B,QAAQ,OAA7B,UACI,cAAC,kBAAD,CACA6B,KAAMjB,EACNkB,OAAQP,EAFR,SAII,cAAC,IAAD,CAAiBQ,GAAI,CAACC,SAAShB,EAAUiB,GAAG,OAEhD,cAAC,IAAD,CAAUC,KAAMb,EAAec,iBAAkB,IAAMC,QAAQ,SAA/D,SACI,cAAC1C,EAAD,CAAO2C,QAASb,EAAqBc,SAAS,UAAUP,GAAI,CAAEQ,MAAO,QAArE,0BAOL,cAAC,IAAMC,SAAP,IAIf,SAASC,IACL,OAAIxB,EAEI,eAAC,IAAD,CAAQW,KAAK,QAAQ5B,QAAQ,OAA7B,UACI,cAAC,kBAAD,CACA6B,KAAMa,OAAOC,SAASC,KACtBd,OAAQP,EAFR,SAII,cAAC,IAAD,CAAgBQ,GAAI,CAACC,SAAShB,EAAU6B,GAAG,OAE/C,cAAC,IAAD,CAAUX,KAAMb,EAAec,iBAAkB,IAAMC,QAAQ,SAA/D,SACI,cAAC1C,EAAD,CAAO2C,QAASb,EAAqBc,SAAS,UAAUP,GAAI,CAAEQ,MAAO,QAArE,0BAOL,cAAC,IAAMC,SAAP,IAIf,OAjDI5B,EAAKT,OAAS,GACVU,EAAK,IACLM,EAhDL,SAAqBP,EAAWC,GACnC,IAAIiC,EAAQlC,EAAKmC,UAAU,EAAGlC,GAC1BmC,EAAMpC,EAAKmC,UAAUnC,EAAKT,OAASU,GACvC,MAAM,GAAN,OAAUiC,EAAV,cAAqBE,GA6CDC,CAAYrC,EAAMC,IA+ClCD,EAAKT,OAAS,EACVW,EAEI,eAAC,IAAM0B,SAAP,WACI,cAACb,EAAD,IACA,eAAC,IAAD,CAAQC,KAAK,QAAQ5B,QAAQ,OAAOkD,UAAU,IAAIN,KAAI,8CAAyChC,GAAQuC,OAAO,SAA9G,UAAwHhC,EAAxH,IAAmI,cAAC,IAAD,CAAeY,GAAI,CAACC,SAAShB,EAAU6B,GAAG,QAC7K,cAACJ,EAAD,OAKJ,eAAC,IAAMD,SAAP,WACI,cAACb,EAAD,IACCT,EACG,mCAAGN,IAEP,cAAC,IAAD,CAAQgB,KAAK,QAAQ5B,QAAQ,OAAOkD,UAAU,IAAIN,KAAI,8CAAyChC,GAAQuC,OAAO,SAA9G,SAAwHhC,IAExH,cAACsB,EAAD,OAMR,cAAC,IAAMD,SAAP,M,8mBC/HZ,SAASY,EAAwBvD,GAC/B,OACE,eAAC,IAAM2C,SAAP,WACE,cAAC,GAAD,IACA,cAAC,GAAD,OAKN,SAASa,EAAexD,GACtB,OACE,eAAC,IAAM2C,SAAP,WACE,cAACc,GAAA,EAAD,IACA,cAACC,GAAD,OAKN,IAAMC,EAA4B,SAAC3D,GACjC,MAA8B4D,cACxBC,GADN,EAAQC,UAAR,EAAmBC,OACH/D,EAAM6D,SAOlB,OALgBA,GAAWA,EAAQG,gBACtBH,GAAWA,EAAQI,UAMvB,eAAC,IAAMtB,SAAP,WAAgB,cAACa,EAAD,IAAkB,cAACD,EAAD,OAElC,cAACC,EAAD,KAKFU,EAAW,SAAClE,GACvB,MAAgCmE,cAAxBN,EAAR,EAAQA,QAER,GAFA,EAAiBO,WACGP,GAAWA,EAAQG,YACTJ,eAAtBE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,EAAiCjE,IAAMyB,SAAS,GAAhD,mBAAO8C,EAAP,KAAkBC,EAAlB,KAgBA,OAdAxE,IAAMyE,WAAU,WAEdD,EAAYD,EAAU,KAUrB,CAACR,EAASC,IAGH,qBAAKU,MAAO,CAAEC,OAAQ,OAAQC,SAAU,QAAxC,SACGX,EACC,cAACY,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACA,cAAC,EAAD,CACEhB,QAASA,MAIb,cAACc,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAOC,MAAM,yBAAb,SACE,cAACN,EAAA,EAAD,CACEM,MAAM,cACNL,WAAS,EACTC,QAAS,EACTK,MAAM,SACNC,QAAQ,SACRC,UAAU,SANZ,SAOE,cAACT,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CACEH,MAAM,SACN/E,QAAQ,KAFV,SAGG,6B,uDCvFnBmF,E,WAQF,WAAYC,GAAW,yBAPvBC,kBAOsB,OANtBC,YAMsB,OALtBC,cAKsB,OAJtBC,UAIsB,OAHtBC,UAGsB,OAFtBC,aAEsB,EAClBC,KAAKN,aAAeD,EAAKC,aACzBM,KAAKL,OAASF,EAAKE,OACnBK,KAAKJ,SAAWH,EAAKG,SACrBI,KAAKH,KAAOJ,EAAKI,KACjBG,KAAKF,KAAOL,EAAKK,KACjBE,KAAKD,QAAUN,EAAKM,Q,wFAGxB,WAAsBhC,EAAkB6B,GAAxC,iGAEa7B,EAFb,sBAE4B,IAAIkC,MAAM,mBAFtC,cAIcC,EAAQnC,EAAQmC,MAChBC,EAAYD,EAAMC,UAClB5F,EAAU2F,EAAM3F,QAChByD,EAAYD,EAAQC,UACpB2B,EAAS5B,EAAQ4B,OACjBS,EAAkBrC,EAAQqC,gBAEhCtF,QAAQC,IAAI,mBACZD,QAAQC,IAAIsF,KAAKC,UAAU,CACvB/F,UACAyD,YACAmC,YACAR,SACAS,qBAjBZ,UAoB+BG,MAAM,GAAD,OAAIC,IAAJ,mBAAgCZ,EAAhC,aAAqD,CAC7Ea,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMN,KAAKC,UAAU,CACjB/F,UACAyD,YACAmC,YACAR,SACAS,sBA9BhB,eAoBcQ,EApBd,iBAiCiCA,EAASC,OAjC1C,eAiCcC,EAjCd,yBAkCe,IAAItB,EAAWsB,IAlC9B,kCAqCQhG,QAAQC,IAAR,MArCR,0D,wHAyCA,WAAwBgD,EAAkB6B,GAA1C,6FAEa7B,EAFb,sBAE4B,IAAIkC,MAAM,mBAFtC,cAIcC,EAAQnC,EAAQmC,MAChBC,EAAYD,EAAMC,UAClB5F,EAAU2F,EAAM3F,QAChByD,EAAYD,EAAQC,UACpB2B,EAAS5B,EAAQ4B,OACjBS,EAAkBrC,EAAQqC,gBATxC,UAW+BG,MAAM,GAAD,OAAIC,IAAJ,mBAAgCZ,EAAhC,eAAuD,CAC/Ea,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMN,KAAKC,UAAU,CACjB/F,UACAyD,YACAmC,YACAR,SACAS,sBArBhB,yCAyBe,GAzBf,kCA2BQtF,QAAQC,IAAR,MA3BR,0D,gEAgCWyE,I,0WClDTuB,GAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAChD,mBAAoB,CAClBC,WAAY,QAEd,mBAAoB,CAClBA,WAAY,QAEd,qBAAsB,CACpBxC,OAAO,OACPyC,UAAU,kBAEZ,sBAAuB,CACrBzC,OAAQ,QAEV,sCAAuC,CACrCwC,WAAY,QAEd,yCAA0C,CACxCE,WAAW,SACXC,QAAQ,GAEV,yCAA0C,CACxCD,WAAW,SACXC,QAAQ,GAEV,uBAAwB,CACtBH,WAAY,OACZI,aAAc,wCAIlB,SAASC,GAAqBC,EAAGC,EAAGC,GAClC,OAAID,EAAEC,GAAWF,EAAEE,IACT,EAEND,EAAEC,GAAWF,EAAEE,GACV,EAEF,EAGT,SAASC,GAAcC,EAAOF,GAC5B,MAAiB,SAAVE,EACH,SAACJ,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGC,IACrC,SAACF,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGC,IAK5C,SAASG,GAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMG,KAAI,SAACC,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAQrD,OAPAH,EAAeI,MAAK,SAACZ,EAAGC,GACtB,IAAMG,EAAQG,EAAWP,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVG,EACKA,EAEFJ,EAAE,GAAKC,EAAE,MAEXO,EAAeC,KAAI,SAACC,GAAD,OAAQA,EAAG,MAGvC,SAASG,GAAuBpI,GAC9B,IAAMgH,EAAQqB,cACNC,EAA2CtI,EAA3CsI,MAAOC,EAAoCvI,EAApCuI,KAAMC,EAA8BxI,EAA9BwI,YAAaC,EAAiBzI,EAAjByI,aAkBlC,OACI,eAACC,EAAA,EAAD,CAAKxG,GAAI,CAAEyG,WAAY,EAAG3F,GAAI,KAA9B,UACI,cAAC4F,GAAA,EAAD,CACIC,QAnBuB,SAACjH,GAClC6G,EAAa7G,EAAO,IAmBVkH,SAAmB,IAATP,EACV,aAAW,aAHf,SAKyB,QAApBvB,EAAM5B,UAAsB,cAAC,KAAD,IAAmB,cAAC,KAAD,MAEpD,cAACwD,GAAA,EAAD,CACIC,QAtBkB,SAACjH,GAC7B6G,EAAa7G,EAAO2G,EAAO,IAsBjBO,SAAmB,IAATP,EACV,aAAW,gBAHf,SAKyB,QAApBvB,EAAM5B,UACH,cAAC,KAAD,IAEA,cAAC,KAAD,MAGR,cAACwD,GAAA,EAAD,CACIC,QA7BkB,SAACjH,GAC7B6G,EAAa7G,EAAO2G,EAAO,IA6BjBO,SAAUP,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHf,SAKyB,QAApBxB,EAAM5B,UACH,cAAC,KAAD,IAEA,cAAC,KAAD,MAGR,cAACwD,GAAA,EAAD,CACIC,QApCsB,SAACjH,GACjC6G,EAAa7G,EAAOmH,KAAKE,IAAI,EAAGF,KAAKC,KAAKV,EAAQE,GAAe,KAoCvDM,SAAUP,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHf,SAKyB,QAApBxB,EAAM5B,UAAsB,cAAC,KAAD,IAAoB,cAAC,KAAD,SAa/D,SAAS8D,GAAUlJ,GACQA,EAAjBgG,MAAiBhG,EAAVkI,MAAf,IACA,EAAwBpI,YAAe,GAAvC,mBAAOuC,EAAP,KAAa8G,EAAb,KACMC,EAAUpJ,EAAMoJ,QAChBC,EAASrJ,EAAMqJ,OACfC,EAAUtJ,EAAMsJ,QAChBC,EAAavJ,EAAMuJ,WAEzB,OACI,eAAC,WAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWvE,MAAM,OAAjB,SACI,cAACwE,EAAA,EAAD,CAAQrG,UAAW2B,IACf9E,UAAW,EACXyJ,IAAKN,EAAO1D,KACZiE,IAAG,wBAAmBP,EAAOzD,MAC7B1D,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,YAG9C,eAACJ,EAAA,EAAD,CAAWK,GAAIV,EAAf,UACE,cAACW,EAAA,EAAD,CAAQC,MAAM,YAAYjH,KAAI,UAAKsG,EAAOY,KAAO3G,OAAO,SAAxD,SAAkE+F,EAAO1D,QAClE,OAAN0D,QAAM,IAANA,OAAA,EAAAA,EAAQxD,UACP,cAAC+C,GAAA,EAAD,CACI,aAAW,aACX7G,KAAK,QACL8G,QAAS,kBAAMM,GAAS9G,IAH5B,SAKKA,EAAO,cAAC,IAAD,IAA0B,cAAC,IAAD,SAI1C,cAACoH,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SACE,cAACgF,EAAA,EAAD,CAASC,MAAK,qBAAgBd,EAAO1D,MAArC,SAA6C,cAACoE,EAAA,EAAD,CAAQC,MAAM,QAAQjI,KAAK,QAAQ5B,QAAQ,WAAW0I,QAAS,kBAAMU,EAAWF,EAAO3D,SAAU4D,IAAjG,SAA2G,cAAC,KAAD,YAtB7ID,EAAO1D,OAyBf,OAAN0D,QAAM,IAANA,OAAA,EAAAA,EAAQxD,UACP,cAAC2D,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAWjF,MAAO,CAAE4F,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACI,cAACC,EAAA,EAAD,CAAUC,GAAInI,EAAMoI,QAAQ,OAAOC,eAAa,EAAhD,SACI,cAAChC,EAAA,EAAD,CAAKxG,GAAI,CAAEyI,OAAQ,GAAnB,SAMI,cAAC5D,EAAA,EAAD,CAAOhF,KAAK,QAAQ,aAAW,YAA/B,SACI,cAAC6I,EAAA,EAAD,UACI,cAACpB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAWvE,MAAM,SAAShD,GAAI,CAACmF,aAAa,QAA5C,sBACYgC,EAAOxD,QACjB,cAACgF,EAAA,EAAD,CAAaV,MAAK,UAAKd,EAAO1D,KAAZ,SAAyBmF,cAAezB,EAAOxD,QAASkF,cAAe,IAAKC,gBAAiB,EAAGC,sBAAsB,wBAczK,IAAMC,GAAc,SAAClL,GAC1B,MAA8BF,WAAe,OAA7C,mBAAOqL,EAAP,KAAgBC,EAAhB,KACA,EAAkCtL,WAAe,eAAjD,mBAAOuL,EAAP,KAAkBC,EAAlB,KACA,EAA0BxL,WAAe,OAAzC,mBACA,GADA,UAC8BA,WAAe,gBAA7C,mBACA,GADA,UACsByB,mBAAS,IAA/B,mBAAOgK,EAAP,KAAYC,EAAZ,KACA,EAAgCrH,cAAxBN,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,WACjB,EAAgC7C,mBAAS,IAAzC,mBAEA,GAFA,UAE8BA,mBAAS,KAAvC,mBAAOkK,EAAP,KAAgBC,EAAhB,KACA,GAAsCnK,mBAAS,IAA/C,qBAAOoK,GAAP,MAAoBC,GAApB,MAEA,GAA0C9L,WAAe,GAAzD,qBAAO+L,GAAP,MAAsBC,GAAtB,MACA,GAA0ChM,WAAe,IAAzD,qBAAOiM,GAAP,MACA,IADA,MAC4BjM,WAAe,IAA3C,qBAAOkM,GAAP,MAAeC,GAAf,MACA,GAA4BnM,WAAe,GAA3C,qBAAOoM,GAAP,MACMC,IADN,MACoBN,GAAgB9C,KAAKqD,IAAIP,GAAeF,GAAYrL,OAAS0L,GAASH,KAuBpFQ,IAtB8BtD,KAAKqD,IAAIL,GAAeN,EAAQnL,OAAS4L,GAASH,IAoBlElI,GAAWA,EAAQG,YAEzB,uCAAG,WAAO0B,GAAP,eAAA6B,EAAA,sEAIQjC,EAAW+G,SAASxI,EAAS6B,GAJrC,OAIXkB,EAJW,OAKf/C,EAAQ8H,YAAYW,KAAK1F,GACzBxC,EAAWP,GACX2H,EAAO,GAPQ,2CAAH,uDAuBRjC,GAAU,uCAAG,WAAO7D,EAAUwC,GAAjB,eAAAX,EAAA,sEACIjC,EAAWiE,WAAW1F,EAAS6B,GADnC,iBAGXiG,EADQ,YACU9H,EAAQ8H,cAClBY,OAAOrE,EAAO,GAC1BrE,EAAQ8H,YAAcA,EACtBvH,EAAWP,GACX+H,GAAeD,GACfD,EAAW7H,EAAQ4H,UARJ,2CAAH,wDAmChBlH,qBAAU,WACR,IAAIkH,EAAU5H,GAAWA,EAAQ4H,QAC3BE,EAAc9H,GAAWA,EAAQ8H,YAEvC,GAAIF,GAAWE,EAAa,CAC1B,IAAIa,EAAgB,IAAIC,IAExBd,EAAYe,SAAQ,SAAA9F,GAClB4F,EAAcG,IAAI/F,EAAWlB,UAAU,MAGzC,IAAIkH,EAAanB,EAAQzD,KAAI,SAAAqB,GAG3B,OAFAA,EAAOwD,WAAaL,EAAcM,IAAIzD,EAAO3D,YAAa,EAEnD2D,KAGTqC,EAAWkB,GACXhB,GAAeD,MAGhB,CAAC9H,IAGJ,IA/B6BkJ,GA+BvBC,GAAgB,CACpB,CACErH,KAAK,OACLsH,MAAM,WACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,IAIb,CACEzH,KAAK,OACLsH,MAAM,WACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,IAGb,CACEzH,KAAK,MACLsH,MAAM,UACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,IAGb,CACEzH,KAAM,OACNsH,MAAM,OACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNkF,iBAAkB,SAACC,EAAOC,EAAWC,GAEjC,OACE,eAAC7I,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAA3C,UACE,cAAC9I,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC4E,EAAA,EAAD,CAAQrG,UAAW2B,IACf9E,UAAW,EACXyJ,IAAK4D,EAAUG,QAAQ,GACvB9D,IAAG,wBAAmB2D,EAAUG,QAAQ,IACxCxL,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,OAAQzH,GAAG,OAGvD,cAACuC,EAAA,EAAD,CAAMG,MAAI,EAAV,SACA,cAACiF,EAAA,EAAD,CAAQC,MAAM,YAAYjH,KAAI,UAAKwK,EAAUG,QAAQ,IAAMpK,OAAO,SAAlE,SAA4EiK,EAAUG,QAAQ,aAO1G,CACE/H,KAAK,WACLsH,MAAM,UACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNjD,MAAO,QACPmI,iBAAkB,SAACC,EAAOC,EAAWC,GACnC,OACE,cAACtD,EAAA,EAAD,CAASC,MAAK,mBAAcoD,EAAUG,QAAQ,IAA9C,SAAoD,cAAC3D,EAAA,EAAD,CAAQC,MAAM,UAAUjI,KAAK,QAAQ5B,QAAQ,YAAY0I,QAAS,kBAAMwD,GAASiB,IAAjF,SAAyF,cAAC,IAAD,SAGjJK,aAAc,iBAAO,CACnBzI,MAAO,UAET0I,mBAAoB,iBAAO,CACzB1I,MAAO,aAaf,OACE,cAAC,WAAD,UACE,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI8I,GAAI,GAAIC,GAAI,GAA/B,SACE,cAAC9I,EAAA,EAAD,CAAOC,MAAM,yBAAb,SACI,eAACyD,EAAA,EAAD,CACEzD,MAAM,cADR,UAGA,cAACyD,EAAA,EAAD,CAAKxG,GAAI,CAAEkL,QAAS,OAAQK,WAAY,UAAxC,SACE,cAAC/E,EAAA,EAAD,CAAKzD,MAAM,mCAAmC/C,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAApE,SACE,cAAC3I,EAAA,EAAD,CAAY4I,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,yBAKJ,eAAC,WAAD,WACE,cAACtF,EAAA,EAAD,CAAKxG,GAAI,CAAEmF,aAAc,EAAG6G,YAAa,WAAzC,SACE,eAACC,EAAA,EAAD,CAAMb,MAAO/B,EAAK6C,SAnJX,SAACC,EAAQC,GAC5B9C,EAAO8C,IAkJ+C,aAAW,cAArD,UACE,cAACC,EAAA,EAAD,CAAKtB,MAAM,eACX,cAACsB,EAAA,EAAD,CAAKtB,MAAM,aA+BN,IAAR1B,GACC,cAAC,WAAD,UACE,cAACiD,EAAA,EAAD,UACE,eAAC3H,GAAD,CAAa3E,GAAI,CAAEuM,SAAU,KAAO1M,KAAK,QAAQ,aAAW,gBAA5D,UACE,cAAC6I,EAAA,EAAD,UACE,eAACpB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACIvE,MAAM,OACNhD,GAAI,CAAEQ,MAAO,MAIbgM,cAA6B,UAAdrD,GAAwBF,EAN3C,SAQI,eAACwD,EAAA,EAAD,CACEC,OAAsB,SAAdvD,EACRjG,UAAyB,SAAdiG,EAAuBF,EAAU,MAC5CtC,SArLDkE,GAqL8B,OArLjB,SAACnL,IAZf,SAACA,EAAOmL,GAElC3B,EADcC,IAAc0B,GAAwB,QAAZ5B,EACrB,OAAS,OAC5BG,EAAayB,GAUb8B,CAAoBjN,EAAOmL,MAiLD,UAKE,cAAC1H,EAAA,EAAD,CAAYlF,QAAQ,UAApB,kBACe,UAAdkL,EACC,cAAC3C,EAAA,EAAD,CAAKrF,UAAU,OAAOnB,GAAI4M,IAA1B,SACe,SAAZ3D,EAAqB,oBAAsB,qBAE5C,SAfD,QAkBT,cAAC1B,EAAA,EAAD,CAAWvE,MAAM,OAAOhD,GAAI,CAAEQ,MAAO,SACrC,cAAC+G,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SAAyB,cAACG,EAAA,EAAD,CAAYlF,QAAQ,UAApB,4BAG7B,eAAC4O,EAAA,EAAD,YACIlD,GAAgB,EAEhBjE,GAAW+D,GAAajE,GAAcyD,EAASE,IAAY2D,MAAMhD,GAASH,GAAeG,GAASH,GAAgBA,IAEhHF,IACF3D,KAAI,SAACqB,EAAOC,GACZ,IAAMF,EAAO,kCAA8BE,GAC3C,OACE,cAACJ,GAAD,CAAWG,OAAQA,EAAQC,QAASA,EAASF,QAASA,EAASG,WAAYA,QAEhF4C,GAAc,GACX,cAAC3C,EAAA,EAAD,CAAUhF,MAAO,CAAEC,OAAQ,GAAK0H,IAAhC,SACI,cAAC1C,EAAA,EAAD,CAAWa,QAAS,SAI5B,cAAC2E,EAAA,EAAD,UACE,cAACzF,EAAA,EAAD,UACE,cAAC0F,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,KACpC7E,QAAS,EACThC,MAAOqD,GAAYrL,OACnBkI,YAAaqD,GACbtD,KAAMyD,GACNoD,YAAa,CACXC,WAAY,CACV,aAAc,iBAEhBC,QAAQ,GAEV7G,aAzSC,SAAC7G,EAAO2N,GACjCtD,GAAUsD,IAyScC,oBAtSQ,SAAC5N,GACjCkK,GAAiB2D,SAAS7N,EAAM0B,OAAOgK,MAAO,KAC9CrB,GAAU,IAqScyD,iBAAkBtH,gBAQrB,IAARmD,GACC,cAAC1E,GAAD,CAAa9E,KAAK,QAAQ,aAAW,oBAArC,SACE,cAAC,IAAD,CACEoI,MAAO,GACP5E,KAAMkG,EACNkE,QAAS3C,GACTE,QAxIE,CACpB0C,WAAW,SACXC,gBAAgB,EAChBC,UAAS,EACTC,OAAM,EACNC,aAAY,EACZ7C,QAAO,oB,iRClYLtN,GAAQC,IAAMC,YAAuC,SACzDC,EACAC,GAEA,OAAO,cAAC,KAAD,cAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,OAG1DiQ,GAAkBnJ,YAAOoJ,KAAPpJ,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,qBAAsB,CAClBtE,MAAOsE,EAAMnC,QAAQ,IACrB8F,OAAQ,GAEZ,yBAA0B,CAGtBwF,gBAAiB,mBACjB,wBAAyB,CACrB/C,QAAS,OACTgD,eAAgB,gBAChBjJ,WAAYH,EAAMnC,QAAQ,GAAK,MAEnC,wBAAyB,CACrB8D,WAAY,EACZvB,QAASJ,EAAMnC,UACfwL,YAAarJ,EAAMnC,QAAQ,GAC3BmF,MAAOhD,EAAMsJ,QAAQC,KAAK,OAGlC,2BAA4B,CACxBnJ,QAAS,EACT,sBAAuB,CACnB,kBAAmB,CACfH,WAAYD,EAAMsJ,QAAQC,KAAK,OAGvC,kBAAmB,CACftJ,WAAYD,EAAMsJ,QAAQC,KAAK,KAC/BnJ,QAAS,GAEb,sBAAuB,CACnBoJ,UAAW,2CACX,UAAW,CACPA,UACI,iFAERpJ,QAAS,EACT,uBAAwB,CACpBuD,OAAQ,GAEZ,oBAAqB,CACjB8F,SAAU,EACVL,eAAgB,gBAChBhJ,QAASJ,EAAMnC,QAAQ,EAAG,GAC1B6L,kBAAcC,EACdxO,SAAU,OACVyO,WAAY,KAEhB,qBAAsB,CAClB5G,MAAOhD,EAAMsJ,QAAQC,KAAK,YAuCjC,SAASM,GAAsB7Q,GAEpC,MAAuCF,IAAMyB,UAAS,GAAtD,mBAAOuP,EAAP,KAAoBC,EAApB,KACA,EAAsCjR,IAAMyB,SAAS,IAArD,mBACA,GADA,UAC0CzB,IAAMyB,UAAS,IAAzD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAqC3B,IAAMyB,SAAS,MAApD,mBAAOyP,EAAP,KAAoBC,EAApB,KACA,EAA2CnR,IAAMyB,SAAS,MAA1D,mBAAO2P,EAAP,KAAuBC,EAAvB,KACA,EAAgChN,cAChC,GADA,EAAQN,QAAR,EAAiBO,WACgGR,eAAzGE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQqN,EAA3B,EAA2BA,UAAoCC,GAA/D,EAAsCC,WAAtC,EAAkDC,YAAlD,EAA+DF,iBAAiBG,EAAhF,EAAgFA,gBACxEC,GADR,EAAiGC,YAC1EC,eAAfF,YACR,EAAuD3R,IAAMyB,UAAS,GAAtE,mBAAOqQ,EAAP,KAA6BC,EAA7B,KACA,EAA2D/R,IAAMyB,SAAS,MAA1E,mBAAOuQ,EAAP,KACQC,GADR,KAC4BC,cAApBD,iBAaFE,GAZUC,uBACd,SAACC,GACGJ,EAAgBI,EAAM5P,QAAN,UAAmB4P,EAAMxM,KAAzB,aAAkCwM,EAAM5P,SAAY4P,EAAMxM,KAAM,CAAExF,QAAS,UAC3FS,QAAQuR,MAAMA,KAElB,CAACJ,IAO8B,uCAAG,WAClCK,EACAC,EACAC,EACAC,GAJkC,mBAAAhL,EAAA,yDAM5BiL,EAAoBJ,EAAYK,UAAU,CAC9CC,sBAAsB,EACtBC,kBAAkB,IAGdC,EAAU,CACdR,YAAajM,KAAKC,UAAUoM,GAC5BK,OAAQR,EAAWS,WACnBR,YAAaA,EACbC,cAAeA,IAGbQ,IAlB8B,gCAmBX1M,MAAM0M,IAA+B,CACxDxM,OAAQ,OACRC,QAAS,IAAIwM,QAAQ,CACjB,eAAgB,qBAEpBvM,KAAMN,KAAKC,UAAUwM,KAEpBK,OAAM,SAACd,GACRvR,QAAQC,IAAI,wCA3BkB,cAmB1BqS,EAnB0B,yBA6BzBA,GA7ByB,gCA+BzB,MA/ByB,4CAAH,6DAzBa,SA4D/BC,EA5D+B,gFA4D9C,WAA2CZ,EAAsBa,GAAjE,qBAAA7L,EAAA,yDAEgB,KAEVxD,EAJN,wBAKI8N,GAAuB,GACvBE,EAAgB,wCAAwC,CAAE5R,QAAS,YANvE,SAO8BkT,yCACxB5B,EACAc,EACAzO,EARU,IAUVA,GAZN,UAOUwP,EAPV,OAeI1S,QAAQC,IAAI,yBACZkR,EAAgB,2BAA2B,CAAE5R,QAAS,cAChDiS,GAAc,MAAImB,gBAAcC,IAAlB,oBAAyBF,KAjBjD,kCAoBc7B,EAAWgC,mBAAmB,aApB5C,eAmBMrB,EAAYsB,gBAnBlB,OAqBQC,UAEFvB,EAAYwB,SAAW9P,EAvB7B,UA0BQlD,QAAQC,IAAI,0BACZkR,EAAgB,sBAAsB,CAAE5R,QAAS,YAEjDS,QAAQC,KAAU,OAANkD,QAAM,IAANA,OAAA,EAAAA,EAAQ8P,QAAQlO,MAAK,KAAKyL,GA7B9C,UAiCgCI,EAAgBY,GAEvCa,OAAM,SAACd,GAEN,MADAN,GAAuB,GACjB,IAAI9L,MAAM,8BAA8BoM,MArCxD,WAiCclM,EAjCd,OAyCQ8L,EAAgB,qBAAqB,CAAE5R,QAAS,YAE3C8F,EA3Cb,uBA4CU4L,GAAuB,GACjB,IAAI9L,MAAM,sBA7C1B,eAkDQgM,EAAgB,kCAAD,OAAmCjO,EAAnC,eAAmDyO,GAAgB,CAAEpS,QAAS,YAlDrG,UAmD6B8R,EACnBG,EACAtO,EACAsP,EACAb,GAEDuB,MAAK,SAASC,GACb,GAAIA,EAAgB,CAElBhC,EAAgB,gCAAgC,CAAE5R,QAAS,YAC3DS,QAAQC,IAAI,oBAAoBsF,KAAKC,UAAU2N,IAC/BC,YAAW,WACzBhU,EAAMiU,0BAA0B1B,KAC/B,SAEC,CAMJR,EAAgB,+FAA+F,CAAE5R,QAAS,QAAS+T,OALpH,SAACC,GAAD,OACX,cAACpK,EAAA,EAAD,CAAQhH,KAAI,oDAAuDO,OAAO,SAASpB,GAAI,CAAC8H,MAAM,SAA9F,0BAKJ6H,GAAuB,OAG1BoB,OAAM,SAACd,GAEN,MADAN,GAAuB,GACjB,IAAI9L,MAAM,8BAA8BoM,MA9ExD,wEAiFQN,GAAuB,GACvBjR,QAAQC,IAAI,QAAQ,EAAR,IACN,IAAIkF,MAAM,UAAU,EAAV,IAnFxB,sCAsFM8L,GAAuB,GACvBjR,QAAQC,IAAI,wBACN,IAAIkF,MAAM,wBAxFtB,sCA2FI8L,GAAuB,GACvBjR,QAAQC,IAAI,yBACN,IAAIkF,MAAM,yBA7FpB,4DA5D8C,sBA6J9C,IAOMqO,GAAQ,CACZ,CACEnH,MAAO,2BACPoH,YAAY,wHAAD,OAA0HvQ,IAEvI,CACEmJ,MAAO,4BACPoH,YACE,wHAEJ,CACEpH,MAAO,iCACPoH,YAAY,iJAKVC,GAAwBpC,sBAAW,sBAAC,sBAAA3K,EAAA,yDACnCzD,EADmC,sBAClB,IAAIyQ,KADc,OAExCC,KACAzD,GAAgB,GAHwB,2CAIvC,CAACjN,EAAWuN,EAAiBI,IAE1BgD,GAAoB,WACtB1D,GAAgB,IAGpB,GAAoCjR,IAAMyB,SAAS,GAAnD,qBAAOmT,GAAP,MAAmBC,GAAnB,MAEMC,GAAuB1C,sBAAW,uCAAC,WAAOhB,EAAuBF,GAA9B,SAAAzJ,EAAA,sDACvC4L,EAA4BjC,EAAgBF,GAC3CiC,OAAM,SAAUd,GACfvR,QAAQC,IAAI,kCAAkCiD,EAAU,MAAMqO,MAHzB,2CAAD,wDAKrC,CAACrO,EAAWuN,EAAiBI,IAE1BoD,GAAa,WACE,IAAfH,GAEG1D,GACAE,GACEF,EAAY1Q,OAAS,IACrB4Q,EAAe5Q,OAAS,GACvBsU,GAAqB1D,EAAgBF,GACrC2D,IAAc,SAACG,GAAD,OAAoBA,EAAiB,MAMzDC,MAAM,iBAGRJ,IAAc,SAACG,GAAD,OAAoBA,EAAiB,MAIjDE,GAAiB,WACrBvT,GAAiB,GACjBwT,UAAUC,UAAUC,UAAUrR,EAAUsR,YACxCP,MAGIQ,GAAa,WACjBV,IAAc,SAACG,GAAD,OAAoBA,EAAiB,MAG/CN,GAAc,WAClBG,GAAc,IAOhB,IAAMW,GAA8B,WAQlC,OANIxD,EACFC,EAAgB,sCAAD,OAAuCb,GAAiB,CAAE/Q,QAAS,YACzEyR,GAAyBE,IAClCC,EAAgB,iCAAiC,CAAE5R,QAAS,UAC5DsU,MAGA,cAAC9P,EAAA,EAAD,CACEC,WAAS,EACTQ,UAAU,SACVqI,WAAW,SACX2C,eAAe,SACflO,GAAI,CAAEqT,EAAG,GALX,SAMI,cAAC5Q,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACC6M,EACG,eAACvM,EAAA,EAAD,CAAYH,MAAM,SAAlB,yDACE,cAACsQ,GAAA,EAAD,CAAkBxL,MAAM,eAG9B,8BACG8H,EACC,eAACzM,EAAA,EAAD,CAAYH,MAAM,SAAlB,mCAAkD4M,EAAlD,OAEA,cAACzM,EAAA,EAAD,CAAYH,MAAM,SAAlB,yCASZ,OACE,eAAC,IAAMvC,SAAP,WAEE,cAACuH,EAAA,EAAD,CAASC,MAAK,eAAd,SAAgC,eAACJ,EAAA,EAAD,CAE9BjB,UAAWhF,EAEXkG,MAAM,UAAUjI,KAAK,QAAQ5B,QAAQ,YAAY0I,QAASyL,GAAuBnK,MAAM,eAJzD,UAIwE,cAAC,KAAD,CAAUjI,GAAI,CAACE,GAAG,KAJ1F,qBAM9B,eAAC6N,GAAD,CACE5N,KAAMyO,EACNtO,QAASiS,GAETgB,SAAU,KACVC,WAAY,CACVlR,MAAO,CACHyC,WAAY,8CACZuJ,UAAW,IACXmF,OAAQ,mCACRC,UAAW,kCACXlF,aAAc,OACdtJ,QAAQ,MAZhB,UAiBE,cAACyO,GAAA,EAAD,UACA,cAACxQ,EAAA,EAAD,CAAYlF,QAAQ,KAApB,SACI,eAACwE,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAA3C,UACE,cAAC9I,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,KAAD,CAAc5C,GAAI,CAACE,GAAG,OAExB,cAACuC,EAAA,EAAD,CAAMG,MAAI,EAAV,8DAKN,cAACgR,GAAA,EAAD,UACI,eAACpN,EAAA,EAAD,CAAKxG,GAAI,CAAEuT,SAAU,IAAKF,EAAG,GAA7B,UACE,cAACQ,GAAA,EAAD,CAASrB,WAAYA,GAAYsB,YAAY,WAA7C,SACG5B,GAAMpM,KAAI,SAACiO,EAAM/N,GAAP,OACT,eAACgO,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,SACY,IAAVlO,EACE,cAAC7C,EAAA,EAAD,CAAYlF,QAAQ,UAApB,uBACE,KAJR,SAOG8V,EAAKhJ,QAER,eAACoJ,GAAA,EAAD,WACE,cAAChR,EAAA,EAAD,UAAa4Q,EAAK5B,cAClB,cAAC3L,EAAA,EAAD,CAAKxG,GAAI,CAAEoU,GAAI,GAAf,SACE,gCACa,IAAVpO,EAEC,eAAC6B,EAAA,EAAD,CACI5J,QAAQ,WAER4C,KAAI,iDAA4Ce,GAChDR,OAAO,SACPpB,GAAI,CAAEqU,GAAI,EAAGnU,GAAI,GALrB,UAOI,cAAC,KAAD,CAAaF,GAAI,CAACE,GAAG,KAPzB,YASA,KAGD8F,IAAUkM,GAAM9T,OAAS,EACxB,eAAC,IAAMqC,SAAP,WACI,cAAC6T,GAAA,EAAD,CACEC,WAAS,EACT3M,GAAG,uBACHmD,MAAM,iBACN9M,QAAQ,WACRwK,OAAO,SACPyD,SAAU,SAACzN,GAAD,OAnH5C,SAA+BX,GAC7BmR,EAAiBnR,EAAM0W,QAAQ,OAAQ,KAkHUC,CAAsBhW,EAAE2C,OAAOgK,UAGlD,cAACkJ,GAAA,EAAD,CACEC,WAAS,EACT3M,GAAG,oBACHmD,MAAM,YACN9M,QAAQ,WACRwK,OAAO,SACPyD,SAAU,SAACzN,GAAD,OAAOsQ,EAActQ,EAAE2C,OAAOgK,aAIhD,KAEW,IAAVpF,EACG,eAAC6B,EAAA,EAAD,CACE5J,QAAQ,YACR0I,QAASmM,GACT9S,GAAI,CAAEqU,GAAI,EAAGnU,GAAI,GAHnB,UAKE,cAAC,KAAD,CAAiBF,GAAI,CAACE,GAAG,KAL3B,sBAQA,cAAC2H,EAAA,EAAD,CACE5J,QAAQ,YACR0I,QAASgM,GACT3S,GAAI,CAAEqU,GAAI,EAAGnU,GAAI,GAHnB,SAKG8F,IAAUkM,GAAM9T,OAAS,EAAI,SAAW,aAIpC,IAAV4H,GACD,cAAC6B,EAAA,EAAD,CACEjB,SAAoB,IAAVZ,EACVW,QAASwM,GACTnT,GAAI,CAAEqU,GAAI,EAAGnU,GAAI,GAHnB,4BAtEG6T,EAAKhJ,YAoFnByH,KAAeN,GAAM9T,QAClB,cAACgV,GAAD,YAKd,cAACsB,GAAA,EAAD,CAAUvU,KAAMb,EAAec,iBAAkB,IAAMC,QAAQ,SAA/D,SACI,cAAC,GAAD,CAAOC,QAxPa,SAACZ,EAA8BC,GACxC,cAAXA,GAGJJ,GAAiB,IAoPwBgB,SAAS,UAAUP,GAAI,CAAEQ,MAAO,QAArE,0BAQH,IAAMmU,GAAsB,SAAC7W,GAClC,MAAgCmE,cAAxBN,EAAR,EAAQA,QACR,GADA,EAAiBO,WACwER,eAAjFE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAoBsN,GAAvC,EAA2BC,WAA3B,EAAuCD,iBAC/BI,GADR,EAAwDD,gBAAxD,EAAyEE,YAClDC,eAAfF,YACR,EAA4D3R,IAAMyB,SAAS,MAA3E,mBAAOuV,EAAP,KAA+B7C,EAA/B,KACA,EAAkDnU,IAAMyB,SAAS,MAAjE,mBAAOwV,EAAP,KAA4BC,EAA5B,KACA,EAAoDlX,IAAMyB,SAAS,MAAnE,mBAAO0V,EAAP,KAA2BC,EAA3B,KACA,EAAwCpX,IAAMyB,UAAS,GAAvD,mBAAO4V,EAAP,KAAuBC,EAAvB,KACA,EAAgEtX,IAAMyB,SAAS,MAA/E,mBAAmC8V,GAAnC,WAGQtF,GADS/R,EAAMsX,SACKtF,cAApBD,iBAXyC,SAalCwF,IAbkC,2EAajD,kCAAAhQ,EAAA,0DAEOxD,IAAUkT,EAFjB,wBAGIG,GAAc,GAHlB,SAS8BI,iCAAsBT,EAAqBjT,GATzE,cASUwP,EATV,OAYIvB,EAAgB,4BAA4B,CAAE5R,QAAS,YACjDiS,GAAc,MAAImB,gBAAcC,IAAlB,oBAAyBF,IAbjD,SAec7B,EAAWgC,mBAAmB,aAf5C,cAcIrB,EAAYsB,gBAdhB,OAgBMC,UAEFvB,EAAYwB,SAAW9P,EAlB3B,UAoBMiO,EAAgB,yBAAyB,CAAE5R,QAAS,YApB1D,UAsB8BkR,EAAgBe,EAAaX,GAEpDwB,OAAM,SAACd,GAEN,MADAiF,GAAc,GACR,IAAIrR,MAAM,8BAA8BoM,MA1BtD,WAsBYlM,EAtBZ,8BA6BQmR,GAAc,GACR,IAAIrR,MAAM,sBA9BxB,yBAgCc0L,EAAWgG,mBAAmBxR,EAAW,aAhCvD,eAiCQoR,EAA0B,MAEVrD,YAAW,WACzBjC,EAAgB,sBAAsB,CAAE5R,QAAS,YACjDuX,IACAN,GAAc,KACb,KAvCX,mBAwCe,GAxCf,kCA0Ca,GA1Cb,0CA4CMxW,QAAQC,IAAI,QAAQ,EAAR,IACZuW,GAAc,GACdM,IA9CN,mBA+Ca,GA/Cb,4DAbiD,sBAkEjD,IAAMC,EAAa,uCAAG,sBAAApQ,EAAA,sDAEhBwP,IACFK,GAAc,GACdxW,QAAQC,IAAI,sBAAsBkW,EAAoB,MAAMjT,GAC5DyT,KALkB,2CAAH,qDAlE8B,SA2ElCG,IA3EkC,2EA2EjD,sBAAAnQ,EAAA,sDACE6P,GAAc,GACdQ,oDAAyCnG,EAAY3N,GACpDgQ,MAAK,SAASpN,GACTA,IACFsQ,EAAmBtQ,EAAS,IAC5BwQ,EAAsBxQ,EAAS,IAC/B9F,QAAQC,IAAI,UAAU6F,EAAS,GAAG,SAASA,EAAS,KAEtD0Q,GAAc,MAEfnE,OAAM,SAAUd,GAEb6E,EAAmB,MACnBI,GAAc,GAEhBxW,QAAQC,IAAI,oBAAoBiD,EAAU,MAAMqO,MAhBpD,4CA3EiD,sBA6GjD,OAdArS,IAAMyE,WAAU,WACVT,GAAa2N,GACX3N,EAAUsR,YAAcvR,EAAQC,WAClC4T,MAGH,CAAC5T,IAEJhE,IAAMyE,WAAU,WACVuS,GACFY,MAED,CAACZ,IAGE,eAACtN,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpG,UAAU,KAAKwU,MAAM,MAAhC,SACE,eAAClT,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAA3C,UACE,cAAC9I,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC,KAAD,CAAa3C,SAAS,YAExB,cAACwC,EAAA,EAAD,CAAMG,MAAI,EAAC5C,GAAI,CAAEc,GAAI,QAArB,0BAKJ,cAACyG,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SACCiS,EACG,2EAEF,sCACIJ,GACA,+CACAA,GACA,mCACE,cAAC,KAAD,CAAqBhW,KAAI,WAAMgW,GAAuB/V,KAAM,EAAGC,YAAY,EAAOC,SAAS,EAAMG,OAAO,EAAMF,SAAU,YAOhI,cAACsI,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SACCiS,EACG,cAACpN,EAAA,EAAD,CAAQC,MAAM,UAAUjI,KAAK,QAAQ5B,QAAQ,WAAW2I,UAAU,EAAlE,SAAwE,cAAC0M,GAAA,EAAD,CAAkBzT,KAAM,OAElG,sCACIgV,GACA,mCACA,cAAClG,GAAD,CAAuBoD,0BAA2BA,MAElD8C,GACA,cAAC7M,EAAA,EAAD,CAASC,MAAK,8BAAd,SAA+C,cAACJ,EAAA,EAAD,CAAQC,MAAM,UAAUjI,KAAK,QAAQ5B,QAAQ,WAAW0I,QAAS8O,EAAexN,MAAM,8BAAtF,SAAoH,cAAC,KAAD,eArC5J,YC9pBjB2N,G,iDACFrS,Y,OACAsS,e,OACAC,e,4FAEA,WAAwBnU,EAAkBkU,GAA1C,6FAEalU,EAFb,sBAE4B,IAAIkC,MAAM,mBAFtC,cAIcC,EAAQnC,EAAQmC,MAChBC,EAAYD,EAAMC,UAClB5F,EAAU2F,EAAM3F,QAChByD,EAAYD,EAAQC,UACpB2B,EAAS5B,EAAQ4B,OAR/B,UAU+BY,MAAM,UAAGC,IAAH,UAA+Bb,EAAQ,CAChEc,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMN,KAAKC,UAAU,CACjB/F,UACAyD,YACAmC,YACA8R,gBAnBhB,eAUcrR,EAVd,yBAuBeA,GAvBf,kCAyBQ9F,QAAQC,IAAR,MAzBR,0D,gEA8BWiX,M,UCnCA,SAASG,GAAYjY,GAChC,OACE,cAACkY,GAAA,EAAD,6BAAalY,GAAb,aACE,sBAAMmY,EAAE,utB,yBCmCVtR,GAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAChD,uBAAwB,CACpBK,aAAc,wCAqGP+Q,IA1FWtR,YAAOoJ,KAAPpJ,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,qBAAsB,CAClBtE,MAAOsE,EAAMnC,QAAQ,IACrB8F,OAAQ,GAEZ,yBAA0B,CAGtBwF,gBAAiB,mBACjB,wBAAyB,CACrB/C,QAAS,OACTgD,eAAgB,gBAChBjJ,WAAYH,EAAMnC,QAAQ,GAAK,MAEnC,wBAAyB,CACrB8D,WAAY,EACZvB,QAASJ,EAAMnC,UACfwL,YAAarJ,EAAMnC,QAAQ,GAC3BmF,MAAOhD,EAAMsJ,QAAQC,KAAK,OAGlC,2BAA4B,CACxBnJ,QAAS,EACT,sBAAuB,CACnB,kBAAmB,CACfH,WAAYD,EAAMsJ,QAAQC,KAAK,OAGvC,kBAAmB,CACftJ,WAAYD,EAAMsJ,QAAQC,KAAK,KAC/BnJ,QAAS,GAEb,sBAAuB,CACnBoJ,UAAW,2CACX,UAAW,CACPA,UACI,iFAERpJ,QAAS,EACT,uBAAwB,CACpBuD,OAAQ,GAEZ,oBAAqB,CACjB8F,SAAU,EACVL,eAAgB,gBAChBhJ,QAASJ,EAAMnC,QAAQ,EAAG,GAC1B6L,kBAAcC,EACdxO,SAAU,OACVyO,WAAY,KAEhB,qBAAsB,CAClB5G,MAAOhD,EAAMsJ,QAAQC,KAAK,YAuCZ,SAACvQ,GAC3B,MAAsBuB,mBAAiB,GAAvC,mBAAOgK,EAAP,KAAYC,EAAZ,KACA,EAAgCrH,cAAxBN,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,WACjB,EAA8B7C,mBAAS,MAAvC,mBAAO8W,EAAP,KAAgBC,EAAhB,KACA,EAA8B/W,mBAAS,MAAvC,mBAEMgX,GAFN,UAEgB1U,GAAWA,EAAQ2U,aAGnC,GAFe3U,GAAWA,EAAQ4B,OACjBzF,EAAMsX,SACmB1T,eAAlCE,EAAR,EAAQA,UAAmBwN,GAA3B,EAAmBvN,OAAnB,EAA2BuN,YAE3BxR,IAAMyE,WAAU,WACd,IAAMwT,EAAYlU,GAAWA,EAAQkU,UACrCO,EAAWP,KACV,CAAClU,IAEJ/D,IAAMyE,WAAU,cAIb,CAAC8T,IAEJ,IAIMI,EAAa,uCAAG,sBAAAlR,EAAA,sEACduQ,GAAKY,WAAW7U,EAAS,MADX,OAEpBA,EAAQkU,UAAY,KACpB3T,EAAWP,GACXyU,EAAW,MAJS,2CAAH,qDAabK,EAAgB,uCAAG,sBAAApR,EAAA,sDACvB+J,IADuB,2CAAH,qDAItB,OACE,cAAC,IAAM3O,SAAP,UACE,cAACgC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI8I,GAAI,GAAIC,GAAI,GAA/B,SACE,cAAC9I,EAAA,EAAD,CAAO4T,UAAU,yBAAjB,SACI,eAAClQ,EAAA,EAAD,CACEkQ,UAAU,cADZ,UAGE,cAAClQ,EAAA,EAAD,CAAKxG,GAAI,CAAEkL,QAAS,OAAQK,WAAY,UAAxC,SACE,cAAC/E,EAAA,EAAD,CAAKkQ,UAAU,mCAAmC1W,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAAxE,SACE,cAAC3I,EAAA,EAAD,CAAY4I,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,0BAKJ,eAAC,IAAMrL,SAAP,WACI,cAAC+F,EAAA,EAAD,CAAKxG,GAAI,CAAEmF,aAAc,EAAG6G,YAAa,WAAzC,SACE,eAACC,EAAA,EAAD,CAAMb,MAAO/B,EAAK6C,SArCf,SAACC,EAAaC,GACjC9C,EAAO8C,IAoCmD,aAAW,cAArD,UACE,cAACC,EAAA,EAAD,CAAKtB,MAAM,aACX,cAACsB,EAAA,EAAD,CAAKtB,MAAM,iBAIN,IAAR1B,GAAa,8BACZ,cAACiD,EAAA,EAAD,UACE,eAAC,GAAD,CAAa,aAAW,eAAezM,KAAK,QAA5C,UACE,cAAC6I,EAAA,EAAD,UACE,eAACpB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWvE,MAAM,OAAjB,SAAwB,cAACG,EAAA,EAAD,CAAYlF,QAAQ,UAApB,wBACxB,cAACsJ,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SAAyB,cAACG,EAAA,EAAD,CAAYlF,QAAQ,UAApB,kBACzB,cAACsJ,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SAAyB,cAACG,EAAA,EAAD,CAAYlF,QAAQ,UAApB,4BAG7B,eAAC4O,EAAA,EAAD,WACE,eAACvF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpG,UAAU,KAAKwU,MAAM,MAAhC,SACE,eAAClT,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAA3C,UACI,cAAC9I,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACmT,GAAD,CAAa9V,SAAS,YAE1B,cAACwC,EAAA,EAAD,CAAMG,MAAI,EAACN,MAAO,CAAEqU,WAAY,QAAhC,0BAKJ,cAACpP,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SAA0BmT,GAAW,6CACrC,eAAC5O,EAAA,EAAD,CAAWvE,MAAM,QAAjB,WACImT,GACA,cAACnO,EAAA,EAAD,CAASC,MAAK,eAAd,SAAgC,eAACJ,EAAA,EAAD,CAAQhH,KAAI,sCAAyCiH,MAAM,UAAUjI,KAAK,QAAQ5B,QAAQ,YAAYgK,MAAM,eAA5G,UAA2H,cAAC,KAAD,CAAUjI,GAAI,CAACE,GAAG,KAA7I,qBAChCiW,GACA,cAACnO,EAAA,EAAD,CAASC,MAAK,iBAAd,SAAkC,cAACJ,EAAA,EAAD,CAAQC,MAAM,UAAUjI,KAAK,QAAQ5B,QAAQ,WAAW0I,QAAS4P,EAAetO,MAAM,iBAAtF,SAAuG,cAAC,KAAD,aAhBhI,WAqBf,cAAC,GAAD,cAOC,IAARoB,GAAa,8BACZ,cAACiD,EAAA,EAAD,UACE,eAAC,GAAD,CAAa,aAAW,eAAxB,UACE,cAAC5D,EAAA,EAAD,UACE,eAACpB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWvE,MAAM,OAAjB,SAAwB,cAACG,EAAA,EAAD,CAAYlF,QAAQ,UAApB,uBACxB,cAACsJ,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SAAyB,cAACG,EAAA,EAAD,CAAYlF,QAAQ,UAApB,4BAG7B,eAAC4O,EAAA,EAAD,WACGwJ,EAAQvQ,KAAI,SAAA8Q,GACX,OACE,eAACtP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpG,UAAU,KAAKwU,MAAM,MAAhC,SACE,cAAC,KAAD,CAAqB9W,KAAM+X,EAAUzY,QAASW,KAAM,EAAGC,YAAY,EAAMC,SAAS,EAAMC,SAAU,OAEpG,cAACsI,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SACCpB,EAAUsR,aAAe0D,EAAUzY,SAClC,cAAC0J,EAAA,EAAD,CAAQC,MAAM,UAAUjI,KAAK,QAAQ5B,QAAQ,YAAYgK,MAAM,UAAUrB,UAAQ,EAAjF,6BAKR,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpG,UAAU,KAAKwU,MAAM,QAGhC,cAACpO,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SACE,cAACgF,EAAA,EAAD,CAASC,MAAK,aAAd,SACE,eAACJ,EAAA,EAAD,CAAQhH,KAAI,sCAAyCiH,MAAM,UAAUjI,KAAK,QAAQ5B,QAAQ,YAAYgK,MAAM,aAC1GtB,QAAS8P,EADX,UAGE,cAAC,KAAD,CAA8BzW,GAAI,CAACE,GAAG,KAHxC,4C,yCCrQhC,SAAS2W,GAASC,GACd,OAAO,IAAIC,gBAAgBC,SAASpW,SAASqW,QAAQrM,IAAIkM,GAOtD,IAAMI,GAAmB,WAC5B,IALiCC,EAKjC,EAA4BvZ,IAAMyB,SAASwX,GAAS,WAApD,mBAAOO,EAAP,KACA,GADA,KACkCxZ,IAAMyB,SAASwX,GAAS,gBAA1D,mBAAOhB,EAAP,KACA,GADA,KACgCjY,IAAMyB,SAASwX,GAAS,cAAxD,mBAAOQ,EAAP,KACA,GADA,KACgCpV,eAAxBN,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,WAQjB,OANIP,GAAWkU,GAAalU,EAAQkU,YAAcA,IAC9CD,GAAKY,WAAW7U,EAASkU,GACzBlU,EAAQkU,UAAYA,EACpB3T,EAAWP,IAIX,cAAC,IAAMlB,SAAP,UACI,cAACqC,EAAA,EAAD,CAAO4T,UAAU,yBAAjB,SACI,cAAClQ,EAAA,EAAD,CACIkQ,UAAU,cACVxI,eAAe,SACflO,GAAI,CAAEqT,EAAG,EAAG9H,WAAY,UAH5B,SAII,eAAC9I,EAAA,EAAD,CACIC,WAAS,EACT4U,WAAY,EACZpU,UAAU,SACVgL,eAAe,SACflO,GAAI,CACAuL,WAAW,UANnB,UAQQ,cAAC9I,EAAA,EAAD,CACIG,MAAI,EAACC,GAAI,GADb,SAGI,eAACM,EAAA,EAAD,CAAYlF,QAAQ,KAAK8N,cAAY,EAAC/I,MAAM,SAA5C,WAlCKmU,EAmC4BE,EAlCtDF,EAAII,OAAO,GAAGC,cAAgBL,EAAIrK,MAAM,IAiCnB,WACmD,cAAC,KAAD,SAI3D,cAACrK,EAAA,EAAD,CACIG,MAAI,EAACC,GAAI,GADb,SAGI,cAAC2D,EAAA,EAAD,CACIjE,OAAO,OACP2L,eAAe,SAFnB,SAII,eAACuJ,GAAA,EAAD,CAAa1Q,IAAK,EAAlB,UACI,cAACS,EAAA,EAAD,CACIrG,UAAW2B,IACX9E,UAAW,EACXyJ,IAAI,QACJC,IAAI,yBACJ1H,GAAI,CAAEQ,MAAO,IAAK+B,OAAQ,IAAKoF,QAAS,UAE5C,cAACH,EAAA,EAAD,CACIrG,UAAW2B,IACX9E,UAAW,EACXyJ,IAAI,SACJC,IAAG,6CAAwCmO,EAAxC,YAAqDuB,EAArD,aACHpX,GAAI,CAAEQ,MAAO,IAAK+B,OAAQ,IAAKoF,QAAS,iBAKxD,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACgF,EAAA,EAAD,CAAQ1G,UAAWuW,KAAMC,GAAG,IAAI7P,MAAM,UAAUjI,KAAK,SAAS5B,QAAQ,YAAYgK,MAAM,UAAxF,8B,qBC/D5B,SAAS8N,GAAYjY,GACjB,OACE,cAACkY,GAAA,EAAD,6BAAalY,GAAb,aACE,sBAAMmY,EAAE,utBAkChB,SAASY,GAASC,GAGd,IAAIc,EAAY,IAAIb,gBAAgBpW,OAAOC,SAASqW,QAAQrM,IAAIkM,GAIhE,OAHKc,IACDA,EAAY,IAAIb,gBAAgBpW,OAAOC,SAASiX,MAAMjN,IAAIkM,IAEvDc,EAGJ,SAASE,GAAaha,GACzB,MAAgCF,WAAeiZ,GAAS,cAAxD,mBACA,GADA,UAC4BjZ,WAAeiZ,GAAS,YAApD,mBAAOO,EAAP,KACA,GADA,KACkCxZ,WAAeiZ,GAAS,gBAA1D,mBAAOhB,EAAP,KACA,GADA,KAC4BjY,WAAeiZ,GAAS,aAApD,mBAAOtT,EAAP,KACA,GADA,KACoC3F,WAAeiZ,GAAS,iBAA5D,mBAAOkB,EAAP,KACA,GADA,KACoCna,WAAeiZ,GAAS,WAA5D,mBAAOmB,EAAP,KACA,GADA,KACgCpa,WAAeiZ,GAAS,cAAxD,mBACA,GADA,UACoCjZ,WAAeqa,mBAAmBpB,GAAS,iBAA/E,mBAAOqB,EAAP,KACA,GADA,KACoCta,WAAeqa,mBAAmBpB,GAAS,iBAA/E,mBAAOsB,EAAP,KACA,GADA,KACwCva,WAAgBiZ,GAAS,mBAAjE,mBAEA,GAFA,UAEyCnV,eAAd0N,GAA3B,EAAQxN,UAAR,EAAmBC,OAAnB,EAA2BuN,YAE3B,EAAgCnN,cAAxBN,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,WACXJ,EAAcH,GAAWA,EAAQG,YACjCsW,IAA6B,OAAPzW,QAAO,IAAPA,MAASkU,WAhBA,4CAkBrC,WAAiCwC,GAAjC,SAAAhT,EAAA,sEACU+J,IAAa2B,OAAM,eAD7B,OAEI7O,EAAW,MACPmW,IACA1X,OAAOC,SAASC,KAAO,KAJ/B,4CAlBqC,sBAqCrC,OAZAwB,qBAAU,WAENH,EAAW,QACZ,CAAC8V,IAEJ3V,qBAAU,WAEDV,EAAQI,UAhCoB,oCAiC7BuW,EAAkB,KAEvB,CAAC3W,IAGA,cAAC,WAAD,UACI,cAACmB,EAAA,EAAD,CAAO4T,UAAU,yBAAjB,SACI,cAAC5T,EAAA,EAAD,CAAO4T,UAAU,cAAc1W,GAAI,CAAEqT,EAAG,EAAGkF,cAAe,SAAUC,SAAU,OAAQjN,WAAY,UAAlG,SACI,eAAC9I,EAAA,EAAD,CACQC,WAAS,EACTQ,UAAU,SACVP,QAAS,EACT4I,WAAW,SACX+L,WAAY,EACZtX,GAAI,CAAEuO,SAAU,GANxB,UAQQ,cAAC9L,EAAA,EAAD,CACIG,MAAI,EAACC,GAAI,GADb,SAGI,eAACM,EAAA,EAAD,CAAYlF,QAAQ,KAAK8N,cAAY,EAAC/I,MAAM,SAA5C,kCACyB,uBADzB,IACiCkV,OAIrC,cAACzV,EAAA,EAAD,CACIG,MAAI,EAACC,GAAI,GADb,SAGI,cAAC2D,EAAA,EAAD,CACAjE,OAAO,OACP2I,QAAQ,OACRgD,eAAe,SACfqK,cAAc,SAJd,SAMI,eAACd,GAAA,EAAD,CAAa1Q,IAAK,EAAlB,UACI,cAACS,EAAA,EAAD,CACIrG,UAAW2B,IACX9E,UAAW,EACXyJ,IAAI,QACJC,IAAG,wBAAmByQ,GACtBnY,GAAI,CAAEQ,MAAO,IAAK+B,OAAQ,IAAKoF,QAAS,UAE5C,cAACH,EAAA,EAAD,CACIrG,UAAW2B,IACX9E,UAAW,EACXyJ,IAAI,UACJC,IAAG,6CAAwCmO,EAAxC,YAAqDuB,EAArD,aACHpX,GAAI,CAAEQ,MAAO,IAAK+B,OAAQ,IAAKoF,QAAS,iBAMtDyQ,EAqBE,cAAC3V,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACOf,GAAgBH,EAAQI,SAmBvB,gCACI,eAACoB,EAAA,EAAD,CAAYlF,QAAQ,KAAK8N,cAAY,EAAC/I,MAAM,SAA5C,yCAAiF,cAAC,KAAD,OACjF,cAACwD,EAAA,EAAD,CAAKiS,UAAU,SAAf,SACI,eAACC,GAAA,EAAD,CAAa5Q,MAAM,UAAU,aAAW,gCAAxC,UACI,cAACD,EAAA,EAAD,CAAQ1G,UAAWuW,KAAMC,GAAG,IAAI1P,MAAM,OAAtC,kBACA,eAACJ,EAAA,EAAD,CAAQzG,OAAO,SAASP,KAAI,UAAKkX,GAAc9P,MAAM,kBAArD,qBAA+E,cAAC,GAAD,CAAajI,GAAI,CAAEc,GAAG,gBAvBrH,gCAAK,eAACqC,EAAA,EAAD,CAAYlF,QAAQ,KAAK8N,cAAY,EAAC/I,MAAM,SAA5C,0CAAkF,cAAC,KAAD,CAAahD,GAAI,CAAEc,GAAG,QACzG,cAAC0F,EAAA,EAAD,CAAKiS,UAAU,SAAf,SACI,cAACE,GAAA,EAAD,CACIhX,QAASA,EACTG,YAAaA,EACbyB,OAAQA,EACRqV,OAAO,8BACPC,aAAa,kCACbC,sBAAuB,aACvBC,WAAW,UACXC,aAAa,EACbC,OAAO,EACPnV,MAAOkU,EACPnC,UAAWA,WAnC3B,eAACpT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UAEI,uBAEA,cAAC8V,GAAA,EAAD,CACIhX,QAASA,EACTG,YAAaA,EACbyB,OAAQA,EACRqV,OAAO,8BACPC,aAAa,kCACbC,sBAAuB,aACvBC,WAAW,cACXC,aAAa,EACbC,OAAO,EACPnV,MAAOkU,EACPnC,UAAWA,gB,kCC7J5C,SAASqD,GAASpb,GAKvB,OACE,cAAC,WAAD,UACI,qBAAKwE,MAAO,CAAEC,OAAQ,OAAQC,SAAU,QAAxC,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACgG,EAAA,EAAD,CAAsBV,MAAO,aAAckR,kBAAmB,gBAAiBC,kBAAmB,IAAKC,oBAAqB,EAAGtQ,sBAAsB,EAAMuQ,mBAAmB,IAC9K,cAAC3Q,EAAA,EAAD,CAAsBV,MAAO,cAAekR,kBAAmB,SAAUC,kBAAmB,IAAKC,oBAAqB,EAAGtQ,sBAAsB,EAAMuQ,mBAAmB,IACxK,cAAC3Q,EAAA,EAAD,CAAsBV,MAAO,eAAgBkR,kBAAmB,cAAeC,kBAAmB,IAAKC,oBAAqB,EAAGtQ,sBAAsB,EAAMuQ,mBAAmB,W,eCPxL3U,GAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAChD,mBAAoB,CAClBC,WAAY,OACZwU,YAAa,QACbC,eAAgB,WAChBC,cAAe,UAEjB,mBAAoB,CAClB1U,WAAY,OACZuJ,UAAW,QAEb,qBAAsB,CACpB,4BAA6B,CAC3B/L,OAAQ,OACRyC,UAAW,kBACX0U,UAAW,eAGf,uCAAwC,CACtC3U,WAAY,OACZ,oBAAqB,CACnB4U,cAAe,YACfjL,WAAY,OACZzO,SAAU,UACV0W,WAAY,OAEd,UAAW,CACT5R,WAAY,SAGhB,oCAAqC,CACnCvE,MAAO,SAET,oCAAqC,CACnCA,MAAO,SAET,oCAAqC,CACnCA,MAAO,SAET,sBAAuB,CACrByN,gBAAiB,cACjB,UAAW,CACTA,gBAAiB,gBAGrB,uBAAwB,CACtBlJ,WAAY,OACZI,aAAc,OACd,4BAA6B,CAC3B5C,OAAQ,OACRyC,UAAW,kBACX0U,UAAW,eAGf,yCAA0C,CACxCzU,WAAY,SACZhF,SAAU,OACVgO,gBAAiB,qBACjB/I,QAAS,OACT,UAAW,CACT+I,gBAAiB,sBAEnB,4BAA6B,CAC3B/I,QAAS,IAGb,qDAAsD,CACpD,4BAA6B,CAC3B0U,oBAAqB,OACrBC,uBAAwB,SAG5B,oDAAqD,CACnD,4BAA6B,CAC3BC,qBAAsB,OACtBC,wBAAyB,SAG7B,yCAA0C,CACxC9U,WAAY,SACZ0U,cAAe,YACfzU,QAAS,GAEX,sCAAuC,CACrCH,WAAY,YAIViV,GAAiB,IAAIC,KAAKC,aAAa,QAAS,CACpD5X,MAAO,UACP6X,sBAAuB,EACvBC,sBAAuB,IAGZC,GACH,SAACC,GACP,OAAKA,EAIEN,GAAeO,OAAOD,GAHpB,MAOb,SAASE,GAAwB1c,GAC/B,OACE,eAAC0I,EAAA,EAAD,CAAKxG,GAAI,CAAEkL,QAAS,OAAQK,WAAY,SAAU/K,MAAO,OAAQia,GAAI,GAArE,UACE,cAACjU,EAAA,EAAD,CAAKxG,GAAI,CAAEQ,MAAO,OAAQ+B,OAAQ,QAAlC,SACE,cAACmY,GAAA,EAAD,cACE1a,GAAI,CACFuC,OAAQ,OACRqX,oBAAqB,OACrBC,uBAAwB,OACxB,2BAA4B,CAC1B9U,WACE,yEACFyJ,aAAc,SAGlBvQ,QAAQ,eACJH,MAGR,cAAC0I,EAAA,EAAD,CACExG,GAAI,CACFuM,SAAU,GACV0B,gBAAiB,QACjBwK,UAAW,SACXpF,EAAG,EACH7E,aAAc,GANlB,SASE,cAACrL,EAAA,EAAD,CAAYlF,QAAQ,QAAQ+B,GAAI,CAAE8H,MAAO,kBAAzC,mBACMjB,KAAK8T,MAAM7c,EAAMsN,OADvB,YAQD,SAASwP,GAAkB9c,GAEhC,IAAM+c,EAAiB,CACrB,CACEpX,KAAK,OACLsH,MAAM,aACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,EACTC,iBAAkB,SAACC,EAAOC,EAAWC,GAEnC,OACE,eAAC7I,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAA3C,UACE,cAAC9I,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC4E,EAAA,EAAD,CAAQrG,UAAW2B,IACf9E,UAAW,EACXyJ,IAAK4D,EAAUG,QAAQ,GACvB9D,IAAG,UAAK2D,EAAUG,QAAQ,IAC1BxL,GAAI,CACFQ,MAAO,GACP+B,OAAQ,QAIhB,cAACE,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAYnD,GAAI,CAAE2W,WAAY,EAAGmE,WAAY,WAAY7V,WAAY,KAAMoO,EAAG,GAA9E,SACGhI,EAAUG,QAAQ,GAAGpN,OAAS,GAC7BiN,EAAUG,QAAQ,GAAGxK,UAAU,EAAE,IAAM,MAEvCqK,EAAUG,QAAQ,WAO9BE,mBAAoB,iBAAO,CACzB1I,MAAO,aAIb,CACES,KAAK,QACLsH,MAAM,QACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,IAGb,CACEzH,KAAK,qBACLsH,MAAM,qBACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,EACTC,iBAAkB,SAACC,EAAOC,EAAWC,GACnC,OAAO,cAACkP,GAAD,CAAyBpP,MAAOC,EAAUG,QAAQ,MAE3DE,mBAAoB,iBAAO,CACzB1I,MAAO,aAIb,CACES,KAAK,cACLsH,MAAM,cACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,EACTC,iBAAkB,SAACC,EAAOC,EAAWC,GACnC,OACE+O,GAAoBhP,EAAUG,QAAQ,KAG1CC,aAAc,iBAAO,CACnBzI,MAAO,WAET0I,mBAAoB,iBAAO,CACzB1I,MAAO,aAIb,CACES,KAAK,iBACLsH,MAAM,iBACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,EACTC,iBAAkB,SAACC,EAAOC,EAAWC,GACnC,OACE+O,GAAoBhP,EAAUG,QAAQ,KAG1CC,aAAc,iBAAO,CACnBzI,MAAO,WAET0I,mBAAoB,iBAAO,CACzB1I,MAAO,aAIb,CACES,KAAK,qBACLsH,MAAM,qBACNC,QAAS,CACPC,QAAQ,EACRhF,MAAM,EACNiF,SAAS,EACTC,iBAAkB,SAACC,EAAOC,EAAWC,GACnC,OAAO,cAACkP,GAAD,CAAyBpP,MAAOC,EAAUG,QAAQ,MAE3DE,mBAAoB,iBAAO,CACzB1I,MAAO,cAgHf,OALApF,aAAgB,cAEd,IAIA,qCACE,cAAC4I,EAAA,EAAD,CAAKxG,GAAI,CAAEqT,EAAG,EAAGoF,UAAW,UAA5B,SACE,cAACtV,EAAA,EAAD,CACElF,QAAQ,KACR+B,GAAI,CAAE2W,WAAY,EAAGmE,WAAY,WAAY7V,WAAY,KAAMoO,EAAG,GAFpE,8BAMF,cAAC,GAAD,CAAarT,GAAI,CAAEuM,SAAU,KAAO1M,KAAK,QAAQ,aAAW,uBAA5D,SACE,cAAC,IAAD,CACEoI,MAAO,GACP5E,KAtHkB,CACxB,CACE,KAAQ,sBACR,MAAS,2DACT,mBAAsB,GACtB,IAAO,MACP,YAAe,EACf,eAAkB,KAClB,mBAAsB,IAExB,CACE,KAAQ,UACR,MAAS,gIACT,mBAAsB,GACtB,IAAO,MACP,YAAe,EACf,eAAkB,IAClB,mBAAsB,IAExB,CACE,KAAQ,aACR,MAAS,2DACT,mBAAsB,GACtB,IAAO,KACP,YAAe,EACf,eAAkB,KAClB,mBAAsB,IAExB,CACE,KAAQ,kBACR,MAAS,yDACT,mBAAsB,GACtB,IAAO,KACP,YAAe,EACf,eAAkB,IAClB,mBAAsB,IAExB,CACE,KAAQ,YACR,MAAS,2DACT,mBAAsB,GACtB,IAAO,KACP,YAAe,EACf,eAAkB,IAClB,mBAAsB,IAExB,CACE,KAAQ,WACR,MAAS,0DACT,mBAAsB,GACtB,IAAO,KACP,YAAe,EACf,eAAkB,IAClB,mBAAsB,IAExB,CACE,KAAQ,UACR,MAAS,2DACT,mBAAsB,GACtB,IAAO,KACP,YAAe,EACf,eAAkB,KAClB,mBAAsB,IAExB,CACE,KAAQ,WACR,MAAS,0DACT,mBAAsB,GACtB,IAAO,IACP,YAAe,EACf,eAAkB,KAClB,mBAAsB,KAgDlBoK,QAASoN,EACT7P,QA7Ce,CACrB2C,gBAAgB,EAChBC,UAAS,EACTC,OAAM,EACNC,aAAY,EACZ7C,QAAO,OA2CL,cAACzE,EAAA,EAAD,CAAKxG,GAAI,CAAEqT,EAAG,EAAGoF,UAAW,UAA5B,SACE,cAACtV,EAAA,EAAD,CAAYlF,QAAQ,UAApB,SACE,eAACwE,EAAA,EAAD,CAAMC,WAAS,EAACM,MAAM,SAASH,GAAI,CAAC4V,UAAW,UAA/C,UACE,cAAChW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,8DACA,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,2EACA,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,mH,wNC9XCkY,GAAiB,WACHnW,YAAO9B,IAAP8B,CAAc,CACrCG,WAAY,4BACZG,QAAS,cACTsJ,aAAc,EACdF,UAAW,OACX0M,KAAM,EACNzY,OAAQ,SAGeqC,YAAO9B,IAAP8B,CAAc,CACrCqJ,gBAAiB,UACjB/I,QAAS,OACT4C,MAAO,QACPmT,aAAc,OACdxC,UAAW,SACXjK,aAAc,SACdF,UAAW,OACX0M,KAAM,EACNzY,OAAQ,OACR,eAAgB,CACd0Y,aAAc,KAILrW,YAAO9B,IAAP8B,EAAc,gBAAGE,EAAH,EAAGA,MAAH,oBAAC,cAC1BmJ,gBAAwC,SAAvBnJ,EAAMsJ,QAAQ8M,KAAkB,UAAY,QAC1DpW,EAAMqW,WAAWC,OAFK,IAGzBlW,QAASJ,EAAMnC,QAAQ,GACvB8V,UAAW,SACX3Q,MAAOhD,EAAMsJ,QAAQtO,KAAKub,eAuC5B,OAEE,cAACC,GAAA,EAAD,CAAW/H,SAAS,KAApB,SACI,eAAC9Q,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,CAAEE,GAAI,EAAG8I,GAAI,GAAK8B,QAAS,CAAE5K,GAAI,EAAG0Y,GAAI,EAAG5P,GAAI,IAAxE,UACI,cAAClJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG0Y,GAAI,EAAG5P,GAAI,EAA7B,SACE,eAAC6P,GAAA,EAAD,CAAO7Y,QAAS,EAAhB,UACE,cAAC6D,EAAA,EAAD,UAEE,cAACrD,EAAA,EAAD,2BAIF,eAACqD,EAAA,EAAD,WAEE,cAACiV,GAAA,EAAD,CAAMC,OAAO,EAAb,SACI,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACpU,EAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACqU,GAAA,EAAD,CACEC,QAAQ,2BAIhB,cAACL,GAAA,EAAD,CAAMC,OAAO,EAAb,SACI,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACpU,EAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACqU,GAAA,EAAD,CACEC,QAAQ,2BAIhB,cAACL,GAAA,EAAD,CAAMC,OAAO,EAAb,SACI,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACpU,EAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACqU,GAAA,EAAD,CACEC,QAAQ,8CAIhB,cAACL,GAAA,EAAD,CAAMC,OAAO,EAAb,SACI,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACpU,EAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACqU,GAAA,EAAD,CACEC,QAAQ,8BAIhB,cAACL,GAAA,EAAD,CAAMC,OAAO,EAAb,SACI,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACpU,EAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACqU,GAAA,EAAD,CACEC,QAAQ,0CAIhB,cAACL,GAAA,EAAD,CAAMC,OAAO,EAAb,SACI,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACpU,EAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACqU,GAAA,EAAD,CACEC,QAAQ,wCAIhB,cAACL,GAAA,EAAD,CAAMC,OAAO,EAAb,SACI,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACpU,EAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACqU,GAAA,EAAD,CACEC,QAAQ,iDAQtB,cAACrZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG0Y,GAAI,EAAG5P,GAAI,EAA7B,SACE,yCAEF,cAAClJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG0Y,GAAI,EAAG5P,GAAI,EAA7B,SACE,yCAEF,cAAClJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG0Y,GAAI,EAAG5P,GAAI,EAA7B,SACE,+C,wCCpLRhH,GAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAC9C,uBAAwB,CACpBK,aAAc,wCAIf,SAAS3D,GAAe1D,GAC3B,MAA8BF,YAAe,GAA7C,mBAAOme,EAAP,KAAgBC,EAAhB,KACQzM,EAAeE,eAAfF,WACA3N,EAAcF,cAAdE,UACR,EAA4BhE,WAAe,MAA3C,mBACA,GADA,UACsCA,WAAe,IAAIqe,QAAzD,mBACA,GADA,UACsCre,WAAe,OAArD,mBACA,GADA,UAC6CA,WAAe,OAA5D,mBAAOse,EAAP,KAA0BC,EAA1B,KAEMC,EAAa,uCAAG,oCAAA/W,EAAA,yDACb0W,EADa,wBAEdC,GAAW,GAELK,EAAY,IAAIhe,aAAU,gDAoB1Bie,EAAU,IAAIje,aAAU,+CACxBke,EAAqB,IAAIle,aAAU,gDACnCme,EAAsB5a,EA1Bd,SA4Ba6a,uCACvBlN,EACA8M,EACAC,EACAC,EACAC,GAjCU,cA4BRE,EA5BQ,OAmCdP,EAAgBO,GAnCF,UAqCgBC,iCAC1BpN,EACA8M,EACAO,oBAAkB,CACdC,wBAAa,GAAaL,KAzCpB,eA+CdR,GAAW,GA/CG,4DAAH,qDA0DnB,OALApe,aAAgB,WACRgE,IAAcma,GACdK,MACL,CAACxa,IAEDma,EAEK,cAAC,WAAD,UACI,cAACtZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAO4T,UAAU,yBAAjB,SACI,cAAC5T,EAAA,EAAD,CACA4T,UAAU,cACV1W,GAAI,CACAqT,EAAG,EACHnI,QAAS,OACTqN,cAAe,UALnB,SAQI,cAAC/R,EAAA,EAAD,CAAKxG,GAAI,CAAEqT,EAAE,EAAG7S,MAAO,QAAvB,SACI,cAACsc,GAAA,EAAD,cAQpBZ,EAEI,cAAC,WAAD,UACI,cAACzZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAI8I,GAAI,GAAIC,GAAI,GAA/B,SACI,cAAC9I,EAAA,EAAD,CAAO4T,UAAU,yBAAjB,SACI,eAAClQ,EAAA,EAAD,CAAKkQ,UAAU,cAAf,UACI,cAAClQ,EAAA,EAAD,CAAKxG,GAAI,CAAEkL,QAAS,OAAQK,WAAY,UAAxC,SACI,cAAC/E,EAAA,EAAD,CAAKkQ,UAAU,mCAAmC1W,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAAxE,SACI,cAAC3I,EAAA,EAAD,CAAY4I,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,4BAMR,qBAAKxJ,MAAO,CAAC9B,MAAM,OAAQuc,UAAW,UAAtC,SACI,cAACzQ,EAAA,EAAD,UACI,eAAC,GAAD,CAAatM,GAAI,CAAEuM,SAAU,KAAO1M,KAAK,QAAQ,aAAW,kBAA5D,UACI,cAAC6I,EAAA,EAAD,UACI,eAACpB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAW,cAACpE,EAAA,EAAD,CAAYlF,QAAQ,UAApB,qBACX,cAACsJ,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SAAyB,cAACG,EAAA,EAAD,CAAYlF,QAAQ,UAApB,qBACzB,cAACsJ,EAAA,EAAD,SAGR,cAACsF,EAAA,EAAD,UACI,eAACvF,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWjF,MAAO,CAAE0a,cAAe,UAAnC,SACI,eAACva,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,GAAxD,UACI,cAACyC,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAAC4E,EAAA,EAAD,CACIrG,UAAW2B,IACX9E,UAAW,EACXyJ,IAAI,QACJC,IAAK,+IACL1H,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,YAG9C,cAAClF,EAAA,EAAD,CAAMG,MAAI,EAAC5C,GAAI,CAAEc,GAAI,GAArB,SACS,qBAIjB,cAACyG,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SAA2BuK,SAAS2O,EAAkBe,QAAQC,4BAA6B,IAAK,MAChG,cAAC3V,EAAA,EAAD,CAAWvE,MAAM,QAAjB,SAAyB,cAAC6E,EAAA,EAAD,CAAQhH,KAAK,iCAAiCO,OAAO,SAArD,SAA8D,cAAC,KAAD,6BAYvH,6B,mqBCxHpB,SAASyV,GAASC,GAEd,OAAO,IAAIC,gBAAgBpW,OAAOC,SAASqW,QAAQrM,IAAIkM,GAiR5CqG,OAnQR,SAAgBrf,GACGA,EAAdsf,UAAR,IACA,EAA0Cxf,YAAe,GAAzD,mBAEA,GAFA,UAEgCqE,eAAxBN,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,WACjB,EAAoCtE,WAAeiZ,GAAS,UAA5D,mBACA,GADA,UACkCjZ,WAAeiZ,GAAS,gBAA1D,mBACA,GADA,UAC4BjZ,WAAeiZ,GAAS,aAApD,mBAAOtT,EAAP,KACA,GADA,KACkC3F,WAAe,CAAC,SAAU,mBAAoB,UAAU,cAA1F,mBAAOyf,EAAP,KACA,GADA,KACqCzf,YAAe,IAApD,mBAAO0f,EAAP,KAAoBC,EAApB,KAEA,EAAgC3f,WAAe,MAA/C,mBAAO4f,EAAP,KAAiBC,EAAjB,KACMC,EAAeC,QAAQH,GAGvB5c,IAFUe,GAAWA,EAAQ2U,YAElBsH,eACXC,GAAWjd,GAASkd,SACpBC,GAAe,IAAIhH,gBAAgBnW,GAASqW,QAE1CpH,GAAoBC,cAApBD,gBAgBF/N,GAAcH,GAAWA,EAAQG,YAnCR,8CAkE/B,sBAAAuD,EAAA,sDACInD,EAAW,MACXvB,OAAOC,SAASC,KAAO,IAF3B,4CAlE+B,sBAwE/B,IAOMmd,GAAkB,WACpBP,EAAY,OA6BhB,SAASQ,GAAangB,GAClB,IAAQwC,EAAwCxC,EAAxCwC,QAAS4d,EAA+BpgB,EAA/BogB,cAAeZ,EAAgBxf,EAAhBwf,YAUhC,OACI,gBAACtP,EAAA,EAAD,CAAQ1N,QATc,WACtBA,EAAQ4d,IAQ4B,kBAAgB,sBAAsB/d,KAAMmd,EAAhF,UACI,eAAC3J,EAAA,EAAD,CAAa/L,GAAG,sBAAhB,2BACA,eAAC6T,EAAA,EAAD,UACK4B,EAAUvX,KAAI,SAACuR,GAAD,OACX,eAACsE,EAAA,EAAD,CAAUwC,QAAM,EAACxX,QAAS,WARtCrG,EAQgE+W,IAApD,SACI,eAACwE,EAAA,EAAD,CAAcC,QAASzE,KADyCA,WAwBxF,OAEI,gBAAC+G,EAAA,EAAD,CACItW,MAAM,UACN9H,GAAI,CACAya,GAAI,OACJ1V,WAAY,QAJpB,UAwBI,gBAACyB,EAAA,EAAD,CAAK0E,QAAQ,OAAOqD,SAAU,EAA9B,UACI,eAACpL,EAAA,EAAD,CACIhC,UAAU,KACVlD,QAAQ,KACR6J,MAAM,UACNuW,QAAM,EACNnT,QAAQ,OALZ,SAOI,sBAAKxD,IAAI,wBAAwBnF,OAAO,OAAOmU,UAAU,cAAcjP,IAAI,YAG/E,eAACO,EAAA,EAAD,CAASC,MAAK,YAAd,SAA6B,eAACvB,EAAA,EAAD,CAAYvF,UAAWmd,IAASxW,MAAM,UAAU6P,GAAG,IAAnD,SAAuD,eAAC,IAAD,QACpF,eAAC3P,EAAA,EAAD,CAASC,MAAK,aAAd,SAA8B,eAACvB,EAAA,EAAD,CAAYvF,UAAU,IAAIN,KAAK,oBAAoBO,OAAO,SAA1D,SAAmE,eAAC,IAAD,QACjG,eAAC4G,EAAA,EAAD,CAASC,MAAK,WAAd,SAA4B,eAACvB,EAAA,EAAD,CAAYvF,UAAWmd,IAASxW,MAAM,UAAU6P,GAAG,YAAnD,SAA+D,eAAC,IAAD,QAC3F,eAAC3P,EAAA,EAAD,CAASC,MAAK,OAAd,SAAwB,eAACvB,EAAA,EAAD,CAAYvF,UAAWmd,IAASxW,MAAM,UAAU6P,GAAG,QAAnD,SAA2D,eAAC,IAAD,WAIvF,+BAEkB,cAAbkG,IAAyC,WAAbA,GACzB,qCACCE,GAAa7K,WAAW9U,QAAU,KAE/B,uBAAKsY,UAAU,gBAAf,UACI,eAACiC,EAAA,EAAD,CACIhX,QAASA,EACTG,YAAaA,GACbyB,OAAQA,EACRqV,OAAO,8BACPC,aAAa,kCACbC,sBAnIE,SAACpZ,GAC3B+d,EAAY/d,EAAM6e,gBAmIMC,gBA3HS,SAACC,EAAcC,GAiBhDA,GAAYA,KA2GY3F,WAAW,UACXC,aAAa,EACbC,OAAO,EACPnV,MAAO,KACP+R,UAAW,OAIf,eAACrP,EAAA,EAAD,CAAKxG,GAAI,CAAEkL,QAAS,CAAErI,GAAI,OAAQ8I,GAAI,SAAtC,SACI,gBAACgT,EAAA,EAAD,CACInB,SAAUA,EACV5V,GAnJjB,8BAoJiBgX,aAAW,EACXze,KAAMud,EAENpd,QAAS0d,GANb,UAQI,eAAC,kBAAD,CACIle,KAAM6B,EAAQC,UAEd7B,OA9FR,WACxB8P,GAAgB,YAAY,CAAE5R,QAAS,YAEvC+f,MAwF4B,SAII,gBAACa,EAAA,EAAD,WACI,eAAC,IAAD,CAAiB7e,GAAI,CAAEE,GAAG,KAD9B,0BAIJ,gBAAC2e,EAAA,EAAD,CACI1d,UAAU,IACVN,KAAI,8CAAyCc,EAAQC,WACrDR,OAAO,SAHX,UAKI,eAAC,IAAD,CAAepB,GAAI,CAAEE,GAAG,KAL5B,cAOA,gBAAC2e,EAAA,EAAD,CAAUlY,QAhPX,4CAgPC,UAA+B,eAAC,IAAD,CAAa3G,GAAI,CAAEE,GAAG,KAArD,qBAIR,eAAC+d,GAAD,CAAc9d,KAAMmd,EAAahd,QA5I/B,SAAC8K,GACvBmS,GAAc,WAiJN,qC,6FC1SVuB,G,OAAwBC,IAA2B,SAACtU,GAAD,MAAU,CACjEpK,QAAS,GACT2e,cAAUvQ,EACVwQ,MAAO,kBAAMxU,EAAI,CAAEuU,cAAUvQ,SA8ChByQ,GApCO,WACpB,MAAqCJ,KAA7Bze,EAAR,EAAQA,QAAS2e,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,MAE3B,OACE,gBAACjR,EAAA,EAAD,CAAQ7N,KAAMwd,QAAQqB,GAAW1e,QAAS2e,EAAO1L,SAAS,KAAKgB,WAAS,EAAxE,UACE,gBAAC/N,EAAA,EAAD,CAAK0E,QAAQ,OAAOgD,eAAe,gBAAgB3C,WAAW,SAA9D,UACE,eAACoI,EAAA,EAAD,iCACA,eAACjN,EAAA,EAAD,CAAYC,QAASsY,EAArB,SACE,eAACE,GAAA,EAAD,SAGJ,eAACvL,GAAA,EAAD,UACE,eAACzQ,EAAA,EAAD,UAAa9C,MAEf,gBAAC+e,GAAA,EAAD,WACE,eAACvX,GAAA,EAAD,CAAQC,MAAM,UAAU7J,QAAQ,YAAY0I,QAASsY,EAArD,oBAGA,eAACpX,GAAA,EAAD,CACEC,MAAM,YACN7J,QAAQ,YACR0I,QAAS,WACHqY,GACFA,IAEFC,KAPJ,4B,4ECrBOna,GAbDua,aAAY,CAExBjR,QAAS,CACP8M,KAAM,OACNnW,WAAY,CACVua,QAAS,UACTC,MAAO,c,mBCmCb,SAASC,GAAU1hB,GACjB,OACE,eAACqF,EAAA,EAAD,yBAAYnD,GAAI,CAAC+E,WAAW,eAAgB9G,QAAQ,QAAQ6J,MAAM,iBAAiB9E,MAAM,UAAalF,GAAtG,gCAaW8G,YAAO6a,IAAW,CAAEC,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IAAjD/a,EACb,gBAAGE,EAAH,EAAGA,MAAO3E,EAAV,EAAUA,KAAV,MAAsB,CACpB,qBAAqB,aACnB2L,SAAU,WACVgP,WAAY,SACZta,MAPsB,IAQtBof,WAAY9a,EAAM+a,YAAYd,OAAO,QAAS,CAC5Ce,OAAQhb,EAAM+a,YAAYC,OAAOC,MACjCC,SAAUlb,EAAM+a,YAAYG,SAASC,iBAEvCvG,UAAW,eACNvZ,GAAD,aACF4c,UAAW,SACX6C,WAAY9a,EAAM+a,YAAYd,OAAO,QAAS,CAC5Ce,OAAQhb,EAAM+a,YAAYC,OAAOC,MACjCC,SAAUlb,EAAM+a,YAAYG,SAASE,gBAEvC1f,MAAOsE,EAAMnC,QAAQ,IACpBmC,EAAMqb,YAAYC,GAAG,MAAQ,CAC5B5f,MAAOsE,EAAMnC,QAAQ,UAQ/B,SAAS0d,KACP,MAAwBziB,IAAMyB,UAAS,GAAvC,mBAAOc,EAAP,KAAa8G,EAAb,KAMMqZ,EAAUC,KAAqBC,QAE/BpL,EAAWqL,KAEXpK,EAAUqK,mBAAQ,iBAAM,CAC5BC,eACAC,eACAC,eACAC,aAAgB,CAAER,YAClBS,aAAyB,CAAET,YAE3BU,aAAe,CACbhW,QAAS,CAAEiW,SAAU,gGAetB,CAACX,IAEJ,OACE,uCACA,gBAACY,GAAA,EAAD,WACE,qDACA,uBAAMzd,KAAK,cAAc0d,QAAQ,YACjC,uBAAM1d,KAAK,cAAc0d,QAAQ,oBAEjC,uBAAM1d,KAAK,0BAA0B0d,QAAQ,YAC7C,uBAAM1d,KAAK,cAAc0d,QAAQ,YAEjC,uBAAMtW,SAAS,SAASsW,QAAQ,mCAChC,uBAAMtW,SAAS,UAAUsW,QAAQ,YACjC,uBAAMtW,SAAS,WAAWsW,QAAQ,0CAClC,uBAAMtW,SAAS,iBAAiBsW,QAAQ,mHACxC,uBAAMtW,SAAS,WAAWsW,QAAQ,kBAElC,uBAAM1d,KAAK,eAAe0d,QAAQ,wBAClC,uBAAM1d,KAAK,eAAe0d,QAAQ,kCAClC,uBAAM1d,KAAK,gBAAgB0d,QAAQ,kBACnC,uBAAM1d,KAAK,sBAAsB0d,QAAQ,KACzC,uBAAM1d,KAAK,gBAAgB0d,QAAQ,qBAErC,eAACC,EAAA,EAAD,CAAetc,MAAOuc,GAAtB,SACE,eAAC,IAAD,UACE,eAACC,GAAA,EAAD,CAAoBlM,SAAUA,EAA9B,SACI,eAACmM,GAAA,EAAD,CAAgBlL,QAASA,EAAShH,aAAW,EAA7C,SAEE,gBAAC5M,EAAA,EAAD,CAEEzC,GAAI,CACFgb,KAAM,GAHV,UAKE,eAACwG,EAAA,EAAD,IACA,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,eAACC,EAAA,EAAD,CAAQ3V,SAAS,QAAQhE,MAAM,UAAUxF,MAAO,CAAEyC,WAAY,mBAA9D,SACI,eAAC,GAAD,CACI5E,KAAMA,EACNuhB,aAxEL,WACnBza,GAAS9G,QA4ES,eAACsC,EAAA,EAAD,CACEtB,UAAU,OACVnB,GAAI,CACFqU,GAAI,EACJnJ,QAAS,OACTqD,SAAU,GALd,SAQE,gBAAC+M,EAAA,EAAD,CAAW/H,SAAS,KAAKvT,GAAI,CAAEqU,GAAI,EAAGD,GAAI,GAA1C,UACE,eAAC,GAAD,IACA,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOuN,KAAK,IAAIC,QAAS,eAAC,IAAD,MACzB,eAAC,IAAD,CAAO5b,OAAK,EAAC4b,QAAS,eAAC,IAAD,MACtB,eAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,eAAC,IAAD,MACjC,eAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,eAAC,IAAD,MAClC,eAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,eAAC,IAAD,MAC/B,eAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,eAAC,IAAD,MAChC,eAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,eAAC,IAAD,MAChC,eAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,eAAC,IAAD,MACpC,eAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,eAAC,IAAD,MAChC,eAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,eAAC,IAAD,MAClC,eAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,eAAC,IAAD,MAC5B,eAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,eAAC,IAAD,MAChC,eAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,eAAC,GAAD,SAG3B,eAACpC,GAAD,CAAWxf,GAAI,CAAEqU,GAAI,6BAexC,IAAMwN,GAAW,WACtB,OACE,sBAAKvf,MAAO,CAAEC,OAAQ,OAAQC,SAAU,QAAxC,SACE,eAACM,EAAA,EAAD,CAAO4T,UAAU,yBAAjB,SACE,eAACjU,EAAA,EAAD,CACEiU,UAAU,cACVhU,WAAS,EACTof,aAAa,SACb5T,eAAe,SACfhL,UAAU,SALZ,SAME,eAACT,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,eAACO,EAAA,EAAD,CACEH,MAAM,SACN/E,QAAQ,KAFV,SAGG,+BAUA,SAAS8jB,KACtB,OAAO,eAAC1B,GAAD,ICrPT,IAYe2B,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBtQ,MAAK,YAAkD,IAA/CuQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJdO,IAASC,OACP,eAAC,IAAMC,WAAP,UACI,eAAC,GAAD,MAEJ1L,SAAS2L,eAAe,SAI1BX,M,6KCMA,SAASY,EAAgB9kB,GA4BvB,OACE,cAAC,IAAM4kB,WAAP,UACE,cAAC,IAAD,CACEG,WAAY,CACVC,WAAY,UACZC,WAAYjlB,EAAMqb,mBAEpBnO,QAAS,CACPzI,OAAQzE,EAAMsb,kBACd4J,OAAO,kCAEPle,MAAO,OACPkH,YAAa,mBAOR,SAASiX,EAAqBnlB,GAE3C,IAAMmK,EAAQnK,EAAMmK,MACdkR,EAAoBrb,EAAMqb,kBAC1BC,EAAoBtb,EAAMsb,kBAC1BrQ,EAAuBjL,EAAMiL,qBAC7BuQ,EAAoBxb,EAAMolB,iBAEhC,EAAgCtlB,IAAMyB,SAASia,GAA/C,6BAEE,OAAIvQ,EAEA,cAAC,IAAD,CAAMnG,MAAI,EAACC,GAAI,GAAI8I,GAAI,EAAGC,GAAI,EAA9B,SACI,cAAC,IAAD,CAAO5N,UAAW,EAAG0Y,UAAU,gBAA/B,SACE,eAAC,IAAD,CAAWyM,UAAU,EAAMzM,UAAU,aAAa0M,gBAAiB,CAAE5a,eAAe,GAApF,UACGP,GACC,cAAC,IAAD,UACI,cAAC,IAAD,CAEE,gBAAc,kBACdL,GAAG,iBAHL,SAMA,cAAC,IAAD,CAAYmE,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,SACO7D,QAMb,cAAC,IAAD,UACE,cAAC2a,EAAD,CAAiBzJ,kBAAmBA,EAAmBC,kBAAmBA,aAQpF,eAAC,IAAD,WACGnR,GACC,cAAC,IAAD,UACI,cAAC,IAAD,CAAY8D,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,SACO7D,MAIX,cAAC2a,EAAD,CAAiBzJ,kBAAmBA,EAAmBC,kBAAmBA,S,yGC7GzEiK,EAAb,WAME,WAAYC,GAAuE,IAArCC,EAAoC,uDAAjB,EAAGC,IAAc,kFAL3EF,SAK2E,OAH3EC,cAG2E,OAF3EE,eAE2E,EAChF7f,KAAK2f,SAAWA,EAChB3f,KAAK6f,UAAY,IAAIC,IAAU,IAAIC,gBAAgBJ,GAGjD3f,KAAK0f,IADHE,EACS,IAAIE,IAAUJ,GAEd,IAAII,IAAUJ,GAAKM,aAAahgB,KAAK6f,WAbtD,2CAiBE,WACE,OAAO7f,KAAK0f,IAAIO,UAAUjgB,KAAK6f,aAlBnC,mBAqBE,WACE,OAAO7f,KAAK0f,MAtBhB,oBAyBE,WACE,IAAMQ,EAAQlgB,KAAK0f,IAAIO,UAAUjgB,KAAK6f,WACtC,OAAOK,EAAMC,SAASD,EAAME,YAAc,EAAIpgB,KAAK2f,YA3BvD,mBA8BE,WACE,OAAO3f,KAAK0f,IAAIO,UAAUjgB,KAAK6f,WAAWQ,QAAQrgB,KAAK2f,YA/B3D,0BAkCE,WACE,OAAO3f,KAAK0f,IAAIY,SAAWtgB,KAAK0f,IAAIa,aAnCxC,M,2cCuCA,SAASjjB,EAAYrC,GACjB,IAAKA,EAAM,OAAOA,EAClB,IAAIkC,EAAQlC,EAAKmC,UAAU,EAAG,GAC1BC,EAAMpC,EAAKmC,UAAUnC,EAAKT,OAAS,GACvC,MAAM,GAAN,OAAU2C,EAAV,cAAqBE,GAGzB,IAAM8M,EAAkBnJ,YAAOoJ,IAAPpJ,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,0BAA2B,CACzBI,QAASJ,EAAMnC,QAAQ,IAEzB,0BAA2B,CACzBuC,QAASJ,EAAMnC,QAAQ,QAUrByhB,EAAuB,SAACtmB,GAC5B,IAAQumB,EAAgCvmB,EAAhCumB,SAAU/jB,EAAsBxC,EAAtBwC,QAAYgkB,EAA9B,YAAwCxmB,EAAxC,GAEA,OACE,eAAC,IAAD,yBAAakC,GAAI,CAAE6L,EAAG,EAAGwH,EAAG,IAASiR,GAArC,cACGD,EACA/jB,EACC,cAAC,IAAD,CACE,aAAW,QACXqG,QAASrG,EACTN,GAAI,CACF8L,SAAU,WACVyY,MAAO,EACPC,IAAK,EACL1c,MAAO,SAAChD,GAAD,OAAWA,EAAMsJ,QAAQC,KAAK,OAPzC,SAUE,cAAC,IAAD,MAEA,UAKK,SAASoW,EAAU3mB,GAC9B,MAAwBF,IAAMyB,UAAS,GAAvC,mBAAOc,EAAP,KAAa8G,EAAb,KACA,EAAwCrJ,IAAMyB,SAAS,MAAvD,mBAAOqlB,EAAP,KAAqBC,EAArB,KACA,EAA0C/mB,IAAMyB,SAASvB,EAAM8mB,eAA/D,mBAAOA,EAAP,KACA,GADA,KACkChnB,IAAMyB,SAAS,OAAjD,mBAAOwlB,EAAP,KAAkBC,EAAlB,KACA,EAAsDlnB,IAAMyB,SAAS,GAArE,mBAAO0lB,EAAP,KAA8BC,EAA9B,KACA,GAAwDpnB,IAAMyB,SAAS,MAAvE,qBAAO4lB,GAAP,MAA6BC,GAA7B,MACMC,GAAOrnB,EAAMqnB,KACbC,GAAUtnB,EAAMsnB,QAChB3hB,GAAO3F,EAAM2F,KACb4hB,GAAUvnB,EAAMunB,QAChBC,GAAiBxnB,EAAMwnB,eACvBC,GAAWznB,EAAM0nB,UAAY,EACnC,GAAgC5nB,IAAMyB,SAAS,GAA/C,qBAAOomB,GAAP,MAAiBC,GAAjB,MACA,GAA8B9nB,IAAMyB,SAAS,IAA7C,qBAAOsmB,GAAP,MAAgBC,GAAhB,MACA,GAAkChoB,IAAMyB,SAAS,IAAjD,qBAAOwmB,GAAP,MAAkBC,GAAlB,MACA,GAAgCloB,IAAMyB,SAAS,MAA/C,qBAAO0mB,GAAP,MAAiBC,GAAjB,MACMC,GAAiB,IAAIC,aAAWC,KAC9B5W,GAAeE,cAAfF,WACR,GAA+C7N,cAAvCE,GAAR,GAAQA,UAAmBuN,IAA3B,GAAmBtN,OAAnB,GAA2BsN,iBAC3B,GAA2CW,cAAnCD,GAAR,GAAQA,gBAAiBuW,GAAzB,GAAyBA,cAQnB5H,IAPUxO,uBACZ,SAACC,GACGJ,GAAgBI,EAAM5P,QAAN,UAAmB4P,EAAMxM,KAAzB,aAAkCwM,EAAM5P,SAAY4P,EAAMxM,KAAM,CAAExF,QAAS,UAC3FS,QAAQuR,MAAMA,KAElB,CAACJ,KAEmB,WAEH,IAAb0V,IACAT,EAAauB,KAEjBrB,EAAqB,GACrBE,GAAwB,GACxBje,GAAQ,KAENqf,GAAc,WAChBrf,GAAQ,IAtC8B,8CA6C1C,WAA8Bsf,EAA0B5O,EAAY6O,GAApE,+DAAAnhB,EAAA,yDACUohB,EAAa7kB,GACb8kB,EAAW,IAAIroB,YAAUwmB,GACzB8B,EAAa,IAAItoB,YAAUkoB,GAC3BK,GAAgBlC,EAChBmC,EAAe,IAAIxoB,YAAUsoB,GAG/BG,EAAgB,CAChBC,OAAO,EACPtI,KAAKgH,GACL1nB,IAAI4nB,GACJqB,MAAMnB,IAGNE,KACAe,EAAgBf,IAII,+CAApBQ,EApBR,wBAqByB,EACXU,EAAuBL,EAAe/f,KAAKqgB,IAAI,GADpC,GAEXhX,GAAc,IAAImB,eACvBC,IACG6V,gBAAcC,SAAS,CACnBC,WAAYZ,EACZa,SAAUZ,EACVa,SAAUN,KAEhB3V,IACE,IAAIkW,yBAAuB,CACvBC,KAAM,CAAC,CAAE9W,OAAQ8V,EAAYiB,UAAU,EAAMC,YAAY,IACzDtkB,KAAMukB,EAAOC,KAAK5jB,KAAKC,UAAU4iB,GAAgB,SACjDzK,UAAW,IAAIhe,YAAU,kDAlCzC,UAsCYwR,GAAgB,qBAAD,OAAsB+W,EAAtB,YAAsCnjB,GAAtC,eAAiDohB,GAAY,CAAE5mB,QAAS,SAtCnG,UAuCoCkR,GAAgBe,EAAa+V,IAvCjE,eAuCkBliB,EAvClB,OA2CkB+jB,EAAWjY,GAAgB,yBAAyB,CAAE5R,QAAS,OAAQ+T,OAHvD,SAACC,GAAD,OAClB,cAAC,IAAD,CAAkBjS,GAAI,CAACkF,QAAQ,WAEgE6iB,SAAS,IA3CxH,UA4CkBxY,GAAWgG,mBAAmBxR,EAAW,aA5C3D,QA6CYqiB,GAAc0B,GACR9V,EAAS,SAACC,GAAD,OACP,eAAC,IAAD,CAAQpR,KAAI,yCAAoCkD,GAAa3C,OAAO,SAAUpB,GAAI,CAAC8H,MAAM,SAAzF,wBACgB/D,MAGxB8L,GAAgB,QAAD,OAAS+W,EAAT,YAAyBnjB,GAAzB,eAAoCohB,GAAY,CAAE5mB,QAAS,UAAW+T,WAnDjG,mDAqDYnC,GAAgB,UAAD,aAAiB,CAAE5R,QAAS,UArDvD,iDAwDkCsR,GAAWyY,qBAAqBnB,GAxDlE,eAwDcoB,EAxDd,OAyDcC,EAAgBjkB,KAAKkkB,MAAMlkB,KAAKC,UAAU+jB,EAAY7c,MAAM/H,OAC5DkgB,EAAW2E,EAAcE,OAAOC,KAAK9E,SA1DnD,UA4D4B+E,QAAMC,0BACtBC,8BACAC,mBACA9B,EACAF,GAhEZ,eA4DYiC,EA5DZ,iBAmE0BJ,QAAMC,0BACpBC,8BACAC,mBACA9B,EACAD,GAvEZ,eAmEYiC,EAnEZ,OA0Ec1B,EAAuBL,EAAe/f,KAAKqgB,IAAI,GAAI3D,GA1EjE,UA2EsChU,GAAWqZ,eAAeD,GA3EhE,WA6EgC,OA7EhC,+BA8EkBzY,GAAc,IAAImB,eACvBC,IACGgX,QAAMO,wCACFL,8BACAC,mBACA9B,EACAgC,EACAjC,EACAD,IAGPnV,IACGgX,QAAMQ,0BACFL,mBACAC,EACAC,EACA/mB,GACA,GACAqlB,IAEN3V,IACE,IAAIkW,yBAAuB,CACvBC,KAAM,CAAC,CAAE9W,OAAQ8V,EAAYiB,UAAU,EAAMC,YAAY,IACzDtkB,KAAMukB,EAAOC,KAAK5jB,KAAKC,UAAU4iB,GAAgB,SACjDzK,UAAW,IAAIhe,YAAU,kDAtG7C,UA2GgBwR,GAAgB,qBAAD,OAAsB+W,EAAtB,YAAsCnjB,GAAtC,eAAiDohB,GAAY,CAAE5mB,QAAS,SA3GvG,UA4GwCkR,GAAgBe,EAAa+V,IA5GrE,eA4GsBliB,EA5GtB,OAgHsB+jB,EAAWjY,GAAgB,yBAAyB,CAAE5R,QAAS,OAAQ+T,OAHvD,SAACC,GAAD,OAClB,cAAC,IAAD,CAAkBjS,GAAI,CAACkF,QAAQ,WAEgE6iB,SAAS,IAhH5H,UAiHsBxY,GAAWgG,mBAAmBxR,EAAW,aAjH/D,QAkHgBqiB,GAAc0B,GACR9V,EAAS,SAACC,GAAD,OACX,eAAC,IAAD,CAAQpR,KAAI,yCAAoCkD,GAAa3C,OAAO,SAASpB,GAAI,CAAC8H,MAAM,SAAxF,wBACgB/D,MAGpB8L,GAAgB,QAAD,OAAS+W,EAAT,YAAyBnjB,GAAzB,eAAoCohB,GAAY,CAAE5mB,QAAS,UAAW+T,WAxHrG,mDA0HgBoU,KACAvW,GAAgB,UAAD,aAAiB,CAAE5R,QAAS,UA3H3D,uCA8HkBiS,GAAc,IAAImB,eACvBC,IACGgX,QAAMQ,0BACNL,mBACAC,EACAC,EACA/mB,GACA,GACAqlB,IAGH3V,IACG,IAAIkW,yBAAuB,CACvBC,KAAM,CAAC,CAAE9W,OAAQ8V,EAAYiB,UAAU,EAAMC,YAAY,IACzDtkB,KAAMukB,EAAOC,KAAK5jB,KAAKC,UAAU4iB,GAAgB,SACjDzK,UAAW,IAAIhe,YAAU,kDA7I7C,UAkJgBwR,GAAgB,qBAAD,OAAsB+W,EAAtB,YAAsCnjB,GAAtC,eAAiDohB,GAAY,CAAE5mB,QAAS,SAlJvG,UAmJwCkR,GAAgBe,EAAa+V,IAnJrE,eAmJsBliB,EAnJtB,OAuJsB+jB,EAAWjY,GAAgB,yBAAyB,CAAE5R,QAAS,OAAQ+T,OAHvD,SAACC,GAAD,OAClB,cAAC,IAAD,CAAkBjS,GAAI,CAACkF,QAAQ,WAEgE6iB,SAAS,IAvJ5H,UAwJsBxY,GAAWgG,mBAAmBxR,EAAW,aAxJ/D,QAyJgBqiB,GAAc0B,GACR9V,EAAS,SAACC,GAAD,OACX,eAAC,IAAD,CAAQpR,KAAI,yCAAoCkD,GAAa3C,OAAO,SAASpB,GAAI,CAAC8H,MAAM,SAAxF,wBACgB/D,MAGpB8L,GAAgB,QAAD,OAAS+W,EAAT,YAAyBnjB,GAAzB,eAAoCohB,GAAY,CAAE5mB,QAAS,UAAW+T,WA/JrG,mDAiKgBoU,KACAvW,GAAgB,UAAD,aAAiB,CAAE5R,QAAS,UAlK3D,4EA7C0C,sBA8O1C,OAJAL,IAAMyE,WAAU,WACX6iB,GAAwBR,EAAaY,MACvC,CAACZ,IAGA,gCAIKE,EACG,eAAC,IAAD,CACI3mB,QAAQ,WAERgK,MAAK,eAAUxE,IACfkD,QAAS6X,GACT3e,KAAK,QALT,UAQI,cAAC,IAAD,CAAsBG,GAAI,CAACE,GAAG,KARlC,IAQ0CuD,MAG1C,cAAC,IAAD,CACIqE,MAAM,UACNG,MAAK,eAAUxE,IACf5D,KAAK,QACL,aAAW,OACX8G,QAAS6X,GALb,SAMI,cAAC,IAAD,CAA8Bve,SAAS,YAGnD,cAAC8N,EAAD,CACIzN,QAASgmB,GACT,kBAAgB,0BAChBnmB,KAAMA,EACNqT,WAAY,CACRlR,MAAO,CACHyC,WAAY,8CACZuJ,UAAW,IACXmF,OAAQ,mCACRC,UAAW,kCACXlF,aAAc,OACdtJ,QAAQ,MAXpB,SAeI,uBAAM8Z,SAlEd,SAA0Btf,GACtBA,EAAMqpB,iBACFrE,GAAgB,EACZG,EACKA,EAAUzmB,QAAU,IACpBymB,EAAUzmB,QAAU,KA1NK,yCA2N1B4qB,CAAe7D,GAAMN,EAAWH,GAChC4B,OAGAzW,GAAgB,gCAAgC,CAAE5R,QAAS,UAC3DS,QAAQC,IAAI,sBAGhBkR,GAAgB,gCAAgC,CAAE5R,QAAS,UAG/D4R,GAAgB,2CAA2C,CAAE5R,QAAS,WAiDtE,UACI,eAACmmB,EAAD,CAAsBxc,GAAG,0BAA0BtH,QAASgmB,GAA5D,kBACU7iB,MAEV,cAAC,IAAD,CAAewlB,UAAQ,EAAvB,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAMvmB,WAAS,EAACC,QAAS,EAAzB,UACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SAEA,eAAC,IAAD,CAAMH,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAA3C,UACI,cAAC,IAAD,CAAM3I,MAAI,EAAV,SACKwiB,GACG,cAAC,IAAD,CAAQjkB,UAAW2B,IACf9E,UAAW,EACXyJ,IAAI,QACJC,IAAK0d,GACLplB,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,UACrC,cAAC,IAAD,MAEb,cAAC,IAAD,CAAM/E,MAAI,EAAC5C,GAAI,CAAEc,GAAI,GAArB,SACK2C,IAAS0hB,IAAQjkB,EAAYikB,KAAU,UAIhD,cAAC,IAAD,CAAMviB,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,IAAD,CACI+E,GAAG,oBACH2M,WAAS,EACT2U,YAAY,OACZjrB,QAAQ,WACRkrB,aAAa,MAEb/d,MAAO2Z,EACPtG,KAAK,SACLvS,SAAU,SAACzN,GAIPkmB,EAAgBlmB,EAAE2C,OAAOgK,OACzB4Z,GAAsBvmB,EAAE2C,OAAOgK,QAGnCge,WAAY,CACRjc,WAAY,CACR4G,KAAM,KACNzR,MAAO,CACHmW,UAAU,eAM9B,cAAC,IAAD,CAAM7V,MAAI,EAACC,GAAI,EAAf,SACI,eAAC,IAAD,CACI5E,QAAQ,UADZ,sBAGconB,GACV,eAAC,IAAD,CAAapnB,QAAQ,OAAO4B,KAAK,QAAQ,aAAW,gCAAgCG,GAAI,CAACc,GAAG,GAA5F,UACI,cAAC,IAAD,CACI6F,QAAS,WACLge,EAAgBU,IAChBL,GAAsBK,KAH9B,iBAOA,cAAC,IAAD,CACI1e,QAAS,WACLge,GAAiBU,GAAQ,GACzBL,GAAsBK,GAAQ,IAHtC,0BAUZ,cAAC,IAAD,CAAMziB,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,SAKI,cAAC,IAAD,CACIxa,QAAQ,UADZ,SAGKgnB,IACD,2CACIA,GAAqBhB,QAAQ,UAM3B,IAAbsB,GAEG,qCACI,cAAC,IAAD,CAAM3iB,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACI+E,GAAG,kBACH2M,WAAS,EACT2U,YAAY,2BACZne,MAAM,aACN9M,QAAQ,WACRkrB,aAAa,MACbjd,SAAU,SAACzN,GAAOqmB,EAAarmB,EAAE2C,OAAOgK,QACxCge,WAAY,CACRjc,WAAY,CACR7K,MAAO,CACHmW,UAAU,gBAO9B,cAAC,IAAD,CAAM7V,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACI+E,GAAG,eACH2M,WAAS,EACT2U,YAAY,kCACZne,MAAM,OACN9M,QAAQ,WACRkrB,aAAa,MACbjd,SAAU,SAACzN,GAAOunB,GAAYvnB,EAAE2C,OAAOgK,QACvCge,WAAY,CACRjc,WAAY,CACR7K,MAAO,CACHmW,UAAU,iBAQlC,qCACI,cAAC,IAAD,CAAM7V,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACI+E,GAAG,kBACH2M,WAAS,EACT2U,YAAY,2BACZne,MAAM,aACN9M,QAAQ,WACRkrB,aAAa,MACb/d,MAAOib,IACPzf,UAAU,EACVsF,SAAU,SAACzN,GAAOqmB,EAAarmB,EAAE2C,OAAOgK,QACxCge,WAAY,CACRjc,WAAY,CACR7K,MAAO,CACHmW,UAAU,gBAO9B,cAAC,IAAD,CAAM7V,MAAI,EAACC,GAAI,GAAf,SACI,eAAC,IAAD,CAAa0R,WAAS,EAAtB,UACI,cAAC,IAAD,CAAY3M,GAAG,2BAAf,kBACA,eAAC,IAAD,CACIV,QAAQ,2BACRU,GAAG,qBACHwD,MAAQqa,GAASvS,WACjBnI,MAAM,OACNmB,SAjZjB,SAACxM,GACxBgmB,IAAchmB,EAAM0B,OAAOgK,QA2YS,UAOI,cAAC,IAAD,CAAUA,MAAO,EAAjB,mBACA,cAAC,IAAD,CAAUA,MAAO,EAAjB,iBACA,cAAC,IAAD,CAAUA,MAAO,EAAjB,qBACA,cAAC,IAAD,CAAUA,MAAO,EAAjB,yBACA,cAAC,IAAD,CAAUA,MAAO,EAAjB,oBACA,cAAC,IAAD,CAAUA,MAAO,EAAjB,wBACA,cAAC,IAAD,CAAUA,MAAO,EAAjB,0BACA,cAAC,IAAD,CAAUA,MAAO,EAAjB,iCAKZ,cAAC,IAAD,CAAMxI,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACI+E,GAAG,cACH2M,WAAS,EACT2U,YAAY,SACZne,MAAM,wBACN9M,QAAQ,WACRkrB,aAAa,MACbjd,SAAU,SAACzN,GAAOmnB,GAAWnnB,EAAE2C,OAAOgK,QACtCge,WAAY,CACRjc,WAAY,CACR7K,MAAO,CACHmW,UAAU,cAO9B,cAAC,IAAD,CAAM7V,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACI+E,GAAG,gBACH2M,WAAS,EACT2U,YAAY,QACZne,MAAM,sBACN9M,QAAQ,WACRkrB,aAAa,MACbjd,SAAU,SAACzN,GAAOqnB,GAAarnB,EAAE2C,OAAOgK,QACxCge,WAAY,CACRjc,WAAY,CACR7K,MAAO,CACHmW,UAAU,wBAYlD,cAAC,IAAD,UACI,cAAC,IAAD,CACIlE,WAAS,EACTkK,KAAK,SACLxgB,QAAQ,WACRgK,MAAM,OACNrB,SACKme,EAAwBM,IAAaN,GAAyB,EACnE/kB,GAAI,CACAyI,OAAO,GARf,+B,8cCxhBpB,IAAMsF,EAAkBnJ,YAAOoJ,IAAPpJ,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,0BAA2B,CACzBI,QAASJ,EAAMnC,QAAQ,IAEzB,0BAA2B,CACzBuC,QAASJ,EAAMnC,QAAQ,QAUrByhB,EAAuB,SAACtmB,GAC5B,IAAQumB,EAAgCvmB,EAAhCumB,SAAU/jB,EAAsBxC,EAAtBwC,QAAYgkB,EAA9B,YAAwCxmB,EAAxC,GAEA,OACE,eAAC6V,EAAA,EAAD,yBAAa3T,GAAI,CAAE6L,EAAG,EAAGwH,EAAG,IAASiR,GAArC,cACGD,EACA/jB,EACC,cAACoG,EAAA,EAAD,CACE,aAAW,QACXC,QAASrG,EACTN,GAAI,CACF8L,SAAU,WACVyY,MAAO,EACPC,IAAK,EACL1c,MAAO,SAAChD,GAAD,OAAWA,EAAMsJ,QAAQC,KAAK,OAPzC,SAUE,cAAC,IAAD,MAEA,UAKK,SAASgb,EAASvrB,GAC7B,MAA2EF,IAAMyB,SAAS,GAA1F,mBAAOiqB,EAAP,KAAkCC,EAAlC,KACA,EAAqD3rB,IAAMyB,SAASvB,EAAM0rB,oBAA1E,mBAAOA,EAAP,KACA,GADA,KACwB5rB,IAAMyB,UAAS,IAAvC,mBAAOc,EAAP,KAAa8G,EAAb,KACA,EAAwCrJ,IAAMyB,SAAS,MAAvD,mBAAOoqB,EAAP,KAAqBC,EAArB,KACA,EAAsD9rB,IAAMyB,SAAS,GAArE,mBAAO0lB,EAAP,KAA8BC,EAA9B,KACA,EAAwDpnB,IAAMyB,SAAS,MAAvE,mBAAO4lB,EAAP,KAA6BC,EAA7B,KACA,GAA4BtnB,IAAMyB,SAAS,MAA3C,qBAAesqB,IAAf,aACA,GAA4B/rB,IAAMyB,SAAS,MAA3C,qBAAeuqB,IAAf,aACA,GAA4BhsB,IAAMyB,SAAS,MAA3C,qBAAOwqB,GAAP,MAAeC,GAAf,MACA,GAAsClsB,IAAMyB,SAAS,MAArD,qBAAO0qB,GAAP,MAAoBC,GAApB,MACA,GAAsDpsB,IAAMyB,SAAS,MAArE,qBAAO4qB,GAAP,MAA4BC,GAA5B,MACA,GAAsCtsB,IAAMyB,SAAS,MAArD,qBAAO8qB,GAAP,MAAoBC,GAApB,MACA,GAAwBxsB,IAAMyB,SAAS,MAAvC,qBAAOgrB,GAAP,MAAaC,GAAb,MACA,GAAgC1sB,IAAMyB,SAASvB,EAAMysB,UAArD,qBAAOA,GAAP,MAAiBC,GAAjB,MACA,GAA4B5sB,IAAMyB,SAASvB,EAAM2sB,QAAjD,qBAAOA,GAAP,MACA,IADA,MACgC7sB,IAAMyB,SAASvB,EAAM4sB,WAArD,qBAOA,IAPA,YAO8B9sB,IAAMyB,UAAS,IAA7C,qBAAO0c,GAAP,MAAgBC,GAAhB,MAOMiK,GAAiB,IAAIC,aAAWC,KAC9B5W,GAAeE,cAAfF,WACFob,GAAOC,kBAAQrb,IAErB,GAA+C7N,cAAvCE,GAAR,GAAQA,UAAmBuN,IAA3B,GAAmBtN,OAAnB,GAA2BsN,iBACnBU,GAAoBC,cAApBD,gBAaFyW,IAZUtW,uBACZ,SAACC,GACGJ,GAAgBI,EAAM5P,QAAN,UAAmB4P,EAAMxM,KAAzB,aAAkCwM,EAAM5P,SAAY4P,EAAMxM,KAAM,CAAExF,QAAS,UAC3FS,QAAQuR,MAAMA,KAElB,CAACJ,KAOe,WAChB5I,GAAQ,KAGZ,SAAS4jB,GAAyBC,GAC9B,IAAIC,EAAW,GACI,QAAfD,EACAC,EArCU,+CAsCY,OAAfD,EACPC,EAtCS,8CAuCa,QAAfD,IACPC,EAtCU,+CAyCd,IAAI1F,EAAU,EACdmE,EAAmBwB,UAAUllB,KAAI,SAAChC,GAC1BA,EAAMqhB,MAAQ4F,GACVjnB,EAAMuhB,QAAU,IAChBA,EAAUvhB,EAAMuhB,YAG5BkE,EAAsClE,GArED,SAsF1B4F,GAtF0B,qFAsFzC,WAA0BC,EAAsBC,EAAsBC,GAAtE,iDAAA/lB,EAAA,kEAKY6K,EAAc,IAAImB,cAEjB8Z,EAPb,wBASkBE,EAAaH,EAAWI,YACxBC,EAAc,IAAIC,IAAQJ,GAV5C,SAWgCF,EAAWO,SAASJ,EAAYE,GAXhE,cAWkBG,EAXlB,OAYkBC,EAAkBD,EAAME,qBAZ1C,UAasCV,EAAWW,KAAKjqB,GAAWypB,EAAYE,EAAaI,GAb1F,eAakBG,EAblB,OAeYjc,GAAgB,qBAAD,OAAsB0b,EAAYrY,WAAlC,YAAgDgY,EAAWI,YAAY7nB,KAAvE,yBAA4FkoB,EAAgBI,WAA5G,YAA0Hb,EAAWc,YAAYvoB,MAAO,CAAExF,QAAS,SAf9L,UAkB4CkR,GAAgB2c,EAAY5b,YAAa+V,GAAgB,CAACgG,QAASH,EAAYG,UAlB3H,eAkBkBC,EAlBlB,OAoBYrc,GAAgB,oBAAoB,CAAE5R,QAAS,SApB3D,UAqBkBsR,GAAWgG,mBAAmB2W,EAAmB,aArBnE,QAsBYrc,GAAgB,YAAD,OAAaqc,GAAoB,CAAEjuB,QAAS,YAtBvE,+BAwBkBotB,EAAaH,EAAWc,YACxBT,EAAc,IAAIC,IAAQJ,GAzB5C,UA0BgCF,EAAWO,SAASJ,EAAYE,GA1BhE,eA0BkBG,EA1BlB,OA2BkBC,EAAkBD,EAAME,qBA3B1C,UA4BsCV,EAAWW,KAAKjqB,GAAWypB,EAAYE,EAAaI,GA5B1F,eA4BkBG,EA5BlB,OAgCkBK,EAAahB,EAAWG,YACxBc,EAAe,IAAIZ,IAAQG,EAAgBI,YAjC7D,UAkCiCZ,EAAWM,SAASU,EAAYC,GAlCjE,eAkCkBC,EAlClB,OAmCkBC,EAAmBD,EAAOT,qBAnC5C,UAqCuCT,EAAWU,KAAKjqB,GAAWuqB,EAAYC,EAAcE,GArC5F,eAqCkBC,EArClB,OAwCY1c,GAAgB,qBAAD,OAAsB0b,EAAYrY,WAAlC,YAAgDgY,EAAWc,YAAYvoB,KAAvE,yBAA4F6oB,EAAiBP,WAA7G,YAA2HZ,EAAWa,YAAYvoB,MAAO,CAAExF,QAAS,SACnLiS,EAAc4b,EAAY5b,YAAYoB,IAAIib,EAAarc,aAzCnE,UA6C4Cf,GAAgBe,EAAa+V,GAAgB,CAACgG,QAAQ,GAAD,mBAAMH,EAAYG,SAAlB,YAA8BM,EAAaN,YA7C5I,eA6CkBC,EA7ClB,OA+CYrc,GAAgB,oBAAoB,CAAE5R,QAAS,SA/C3D,UAgDkBsR,GAAWgG,mBAAmB2W,EAAmB,aAhDnE,QAiDYrc,GAAgB,YAAD,OAAaqc,GAAoB,CAAEjuB,QAAS,YAjDvE,0DAsDQ4R,GAAgB,GAAD,aAAQ,CAAE5R,QAAS,UAtD1C,2DAtFyC,+BAgJ1BuuB,GAhJ0B,qFAgJzC,WAAiCtB,EAAsBC,EAAsBC,GAA7E,+DAAA/lB,EAAA,yDACI2W,IAAW,GADf,SAGamP,EAHb,wBAKkBsB,EAAYvB,EAAWI,YACvBC,EAAc,IAAIC,IAAQJ,GAN5C,SAOgCF,EAAWO,SAASgB,EAAWlB,GAP/D,OAOkBG,EAPlB,OAQkBC,EAAkBD,EAAME,qBAExBc,EAAShB,EAAMiB,YACfC,EAAclB,EAAMmB,iBACpBC,EAAuBpB,EAAMqB,0BAC7BC,EAActB,EAAMuB,iBACpB5C,EAAOqB,EAAMwB,UAEnBvD,GAAUuB,EAAWc,YAAYvoB,MACjCmmB,GAAUsB,EAAWI,YAAY7nB,MAEjCyhB,EAAwB4H,EAAqBf,YAC7CjC,GAAU4C,EAAOX,YACjB/B,GAAe4C,EAAYb,YAC3B7B,GAAuByB,EAAgBI,YACvC3B,GAAe4C,EAAYjB,YAC3BzB,GAAQD,EAAK0B,YAxBzB,+BA0BkBV,EAAaH,EAAWc,YACxBT,EAAc,IAAIC,IAAQJ,GA3B5C,UA4BgCF,EAAWO,SAASJ,EAAYE,GA5BhE,eA4BkBG,EA5BlB,OA6BkBC,EAAkBD,EAAME,qBAExBO,EAAahB,EAAWG,YACxBc,EAAe,IAAIZ,IAAQG,EAAgBI,YAhC7D,UAiCiCZ,EAAWM,SAASU,EAAYC,GAjCjE,QAiCkBC,EAjClB,OAkCkBC,EAAmBD,EAAOT,qBAIhCjC,GAAUuB,EAAWc,YAAYvoB,MACjCmmB,GAAUuB,EAAWG,YAAY7nB,MAE3BipB,EAAShB,EAAMiB,YACfC,EAAclB,EAAMmB,iBACGnB,EAAMqB,0BAC7BC,EAActB,EAAMuB,iBACpB5C,EAAOqB,EAAMwB,UAEbC,EAAUd,EAAOM,YACFN,EAAOQ,iBACtBO,EAAwBf,EAAOU,0BAC/BM,EAAehB,EAAOY,iBACtBK,EAAQjB,EAAOa,UAcrBhI,EAAwBkI,EAAsBrB,YAC9CjC,GAAU4C,EAAOX,WAAWoB,EAAQpB,YACpC/B,GAAe4C,EAAYb,YAE3B7B,GAAuBoC,EAAiBP,YACxC3B,GAAe4C,EAAYjB,WAAWsB,EAAatB,YAKnDzB,GAAQgD,EAAMvB,WAAW1B,EAAK0B,YA3E1C,0DA8EQlc,GAAgB,GAAD,aAAQ,CAAE5R,QAAS,UA9E1C,QAgFI+d,IAAW,GAhFf,2DAhJyC,sBAyRzC,OA9BApe,IAAMyE,WAAU,WACZwoB,GAAyBN,MAC1B,IAEH3sB,IAAMyE,WAAU,WAGZ,GAAKonB,EAAe,GAAKA,EAAe,gBACpC,GAAiB,QAAZc,IAAkC,SAAVE,GAEzB+B,GADkB7B,GAAK4C,QAAQC,iBAAeC,YACjB,KAAMhE,QAChC,GAAiB,OAAZc,IAAiC,SAAVE,GAAmB,CAGlD+B,GAFmB7B,GAAK4C,QAAQC,iBAAeE,UAC5B/C,GAAK4C,QAAQC,iBAAeC,YACNhE,QACtC,GAAiB,QAAZc,IAAkC,SAAVE,GAAmB,CAGnD+B,GAFmB7B,GAAK4C,QAAQC,iBAAeG,WAC5BhD,GAAK4C,QAAQC,iBAAeC,YACNhE,SAG7CvE,EAAwB,GACxB4E,GAAU,MACVE,GAAe,MACfE,GAAuB,MACvBE,GAAe,MACfE,GAAQ,QAEb,CAACb,IAGA,gCACI,eAAC5hB,EAAA,EAAD,CACI5J,QAAQ,WAERgK,MAAK,eAAUsiB,GAAV,cAAwBE,IAC7B9jB,QApPY,WACpBqe,EAAqB,GACrB0E,EAAgB,GAChBziB,GAAQ,IAkPApH,KAAK,QALT,UAQK0qB,GARL,IAQe,cAAC,IAAD,CAAevqB,GAAI,CAACE,GAAG,EAAEY,GAAG,KAR3C,IAQmD2pB,MAEvD,cAAC1c,EAAD,CACIzN,QAASgmB,GACT,kBAAgB,0BAChBnmB,KAAMA,EACNqT,WAAY,CACRlR,MAAO,CACHyC,WAAY,8CACZuJ,UAAW,IACXmF,OAAQ,mCACRC,UAAW,kCACXlF,aAAc,OACdtJ,QAAQ,MAXpB,SAeI,uBAAM8Z,SAjFd,SAA0Btf,GAEtB,GADAA,EAAMqpB,iBACDU,EAAe,GAAKA,EAAe,gBACpC,GAAiB,QAAZc,IAAkC,SAAVE,GAEzBQ,GADkBN,GAAK4C,QAAQC,iBAAeC,YACxB,KAAMhE,GAC5BnD,UACG,GAAiB,OAAZiE,IAAiC,SAAVE,GAAmB,CAGlDQ,GAFmBN,GAAK4C,QAAQC,iBAAeE,UAC5B/C,GAAK4C,QAAQC,iBAAeC,YACZhE,GACnCnD,UACG,GAAiB,QAAZiE,IAAkC,SAAVE,GAAmB,CAGnDQ,GAFmBN,GAAK4C,QAAQC,iBAAeG,WAC5BhD,GAAK4C,QAAQC,iBAAeC,YACZhE,GACnCnD,WAGJpB,EAAwB,GACxBrV,GAAgB,2CAA2C,CAAE5R,QAAS,WA6DtE,UACI,cAAC,EAAD,CAAsB2J,GAAG,0BAA0BtH,QAASgmB,GAA5D,kBAGA,eAAC1S,EAAA,EAAD,CAAeqV,UAAQ,EAAvB,UACQ,eAACxmB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACQ,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAAC+qB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYjmB,GAAG,aAAf,kBACA,eAACkmB,EAAA,EAAD,CACI5mB,QAAQ,aACRU,GAAG,uBACH2M,WAAS,EACTnJ,MAAOmf,GACPre,SA3PrB,SAACxM,GACxB8qB,GAAY9qB,EAAM0B,OAAOgK,OACzByf,GAAyBnrB,EAAM0B,OAAOgK,OACtC4Z,EAAqB,GACrB0E,EAAgB,GAChBxE,EAAwB,GACxB4E,GAAU,MACVE,GAAe,MACfE,GAAuB,MACvBE,GAAe,MACfE,GAAQ,OAkPoCvf,MAAM,OANV,UAQI,cAAC8T,EAAA,EAAD,CAAUzT,MAAM,OAAhB,kBACA,cAACyT,EAAA,EAAD,CAAUzT,MAAM,MAAhB,iBACA,cAACyT,EAAA,EAAD,CAAUzT,MAAM,OAAhB,0BAIZ,cAAC3I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACyR,EAAA,EAAD,CACI1M,GAAG,oBACHmmB,SAAU,SAAAC,GAAK,OAAIA,GAASA,EAAMC,SAClC1Z,WAAS,EACT2U,YAAY,OACZC,aAAa,MACblrB,QAAQ,WAERmN,MAAO2Z,EACPtG,KAAK,SACLvS,SAAU,SAACzN,GAIPirB,EAAgBjrB,EAAE2C,OAAOgK,OACzB4Z,GAAsBvmB,EAAE2C,OAAOgK,QAGnCge,WAAY,CACRjc,WAAY,CACR4G,KAAM,KACNzR,MAAO,CACHmW,UAAU,oBAQ1C,cAAChW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAGf,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX7C,GAAI,CAACyY,UAAU,SADnB,SAGI,eAACtV,EAAA,EAAD,CACIlF,QAAQ,UADZ,sBAGcqrB,EAHd,IAG0CiB,GACtC,eAAC7R,EAAA,EAAD,CAAaza,QAAQ,OAAO4B,KAAK,QAAQ,aAAW,gCAAgCG,GAAI,CAACc,GAAG,GAA5F,UACI,cAAC+G,EAAA,EAAD,CACIlB,QAAS,WACL+iB,EAAgBJ,GAChBtE,EAAqBsE,IAH7B,iBAQA,cAACzhB,EAAA,EAAD,CACIlB,QAAS,WACL+iB,GAAiBJ,EAA0B,GAC3CtE,GAAsBsE,EAA0B,IAHxD,+BAcpB,cAAC7mB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAAC+qB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYjmB,GAAG,WAAf,gBACA,cAACkmB,EAAA,EAAD,CACI5mB,QAAQ,WACRU,GAAG,qBACH2M,WAAS,EACTnJ,MAAOqf,GACP1f,MAAM,KACNnE,UAAQ,EACRsnB,aAAa,WAPjB,SASI,cAACrP,EAAA,EAAD,CAAUzT,MAAM,QAAhB,0BAIZ,cAAC3I,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACyR,EAAA,EAAD,CACI1M,GAAG,cACH2M,WAAS,EACT4U,aAAa,MACb/d,MAAO6Z,EACPxG,KAAK,SACLxgB,QAAQ,WACR2I,UAAQ,EACRsnB,aAAa,WACb9E,WAAY,CACRjc,WAAY,CACR7K,MAAO,CACHmW,UAAU,uBAS1C,4BACEsD,GAuGE,cAAC5Y,EAAA,EAAD,CAAYlF,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,SACI,cAACrF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACP7C,GAAI,CACAyY,UAAU,UAFtB,4BAxGR,eAACtV,EAAA,EAAD,CAAYlF,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,UACKqiB,IACG,eAAC1nB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,0BAKa,cAACzQ,EAAA,EAAD,CAASC,MAAK,mGAAd,SAAoH,cAAC,IAAD,CAAiBjI,GAAI,CAAEC,SAAS,WAEjK,eAACwC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,UAKM0R,GAAalG,QAAQ,GAL3B,UASPgG,IACG,eAACxnB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,8BAKiB,cAACzQ,EAAA,EAAD,CAASC,MAAK,wBAAd,SAAyC,cAAC,IAAD,CAAiBjI,GAAI,CAAEC,SAAS,WAE1F,eAACwC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,UAKKwR,GAAoBhG,QAAQ,GALjC,IAKsCwG,SAK7CJ,IACG,eAAC5nB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,kBAOA,eAAChW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,UAKK4R,GAAKpG,QAAQ,GALlB,IAKuBwG,GALvB,QAKoCF,SAI3CV,IACG,cAACpnB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACI,qCACA,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,uBAKc,cAACzQ,EAAA,EAAD,CAASC,MAAK,0FAAd,SAA2G,cAAC,IAAD,CAAiBjI,GAAI,CAAEC,SAAS,WAEzJ,cAACwC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,SAKiB,OAAZ8R,GACG,sCACEV,GAAOJ,EAAa,KAAKxF,QAAQ,GADnC,QAC4C4F,GAAO5F,QAAQ,MAG3D,qCAAI,GAAJ,OAAgB,GAAhB,SAA+C,EAAlB4F,GAAO5F,QAAQ,aAM3D8F,IACG,eAACtnB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,0BAOA,eAAChW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EACX7C,GAAI,CACAyY,UAAU,SAFlB,UAKMsR,GAAYoE,mBALlB,qBAyBxB,cAAC/O,EAAA,EAAD,UACI,cAACvX,EAAA,EAAD,CACI0M,WAAS,EACTkK,KAAK,SACLxgB,QAAQ,WACRgK,MAAM,OACNrB,SAAUme,EAAwBuE,EAClCtpB,GAAI,CACAyI,OAAO,GAPf,4BC3nBL,SAAS2lB,EAAQtwB,GAE9B,IAAMmK,EAAQnK,EAAMmK,MACdomB,EAAWvwB,EAAMuwB,SACjBC,EAAgBxwB,EAAMwwB,cACtBC,EAASzwB,EAAMywB,OACfC,EAAY1wB,EAAM0wB,WAAa,KAE/BC,GADa3wB,EAAM4wB,WACR5wB,EAAM2wB,UAAY,MAC7BjF,EAAqB1rB,EAAM0rB,oBAAsB,KAC/C5nB,EAAcF,cAAdE,UACFkC,EAAQhG,EAAMgG,MAEpB,EAA4BlG,WAAe,MAA3C,mBAAO+wB,EAAP,KAAeC,EAAf,KAsBA,OAXAhxB,aAAgB,WCvCW,IAACO,EDwCtByD,GACFgtB,GCzCwBzwB,EDyCAyD,EAAUgP,WCxC3B,0CDwCuC,MCxCvC,oBAAsDzS,EAAtD,kFDyCR,CAACyD,IASF,cAAC,WAAD,UACE,eAACa,EAAA,EAAD,CAAMC,WAAS,EACbC,QAAS,EACTuL,eAAe,SACfhL,UAAU,SACVqI,WAAW,SAJb,UAME,eAAC9I,EAAA,EAAD,CAAMG,MAAI,EAAV,UACCqF,EADD,IACQ,gCAAQomB,OAEhB,eAAC5rB,EAAA,EAAD,CAAMG,MAAI,EAAV,UACE,cAACO,EAAA,EAAD,CAAYhC,UAAU,IAAIlD,QAAQ,KAAKiQ,eAAe,SAAtD,SACGpQ,EAAMumB,WAERiK,GACC,cAACnrB,EAAA,EAAD,CAAY2E,MAAM,iBAAiB7J,QAAQ,YAAY+B,GAAI,CAAEgb,KAAM,GAAnE,SACGuT,OAKNC,GACC,cAAC/rB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACymB,EAAD,CAAUkB,SA5CH,OA4CuBE,OA3CzB,QA2CyCjB,mBAAoBA,EAAoBiF,SAAUA,MAGnG3qB,GAAmB,QAAVA,GACR,mCACC6qB,GAAUA,EAAOvwB,OAAS,GACzB,cAACqE,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACiF,EAAA,EAAD,CACI5J,QAAQ,WACRgK,MAAM,UACNtB,QAnDK,WAGnBhG,OAAOR,KAAKwuB,EAAO,UAFT,uHAmDI9uB,KAAK,QAJT,yBAaN,+B,2WEhEF8E,EAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAChD,uBAAwB,CACtBK,aAAc,oCAEhB,4BAA6B,CAC3B8I,gBAAiB,YAWrB,IAAMF,EAAkBnJ,YAAOoJ,IAAPpJ,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,0BAA2B,CACzBI,QAASJ,EAAMnC,QAAQ,IAEzB,0BAA2B,CACzBuC,QAASJ,EAAMnC,QAAQ,QAUrByhB,EAAuB,SAACtmB,GAC5B,IAAQumB,EAAgCvmB,EAAhCumB,SAAU/jB,EAAsBxC,EAAtBwC,QAAYgkB,EAA9B,YAAwCxmB,EAAxC,GAEA,OACE,eAAC,IAAD,yBAAakC,GAAI,CAAE6L,EAAG,EAAGwH,EAAG,IAASiR,GAArC,cACGD,EACA/jB,EACC,cAAC,IAAD,CACE,aAAW,QACXqG,QAASrG,EACTN,GAAI,CACF8L,SAAU,WACVyY,MAAO,EACPC,IAAK,EACL1c,MAAO,SAAChD,GAAD,OAAWA,EAAMsJ,QAAQC,KAAK,OAPzC,SAUE,cAAC,IAAD,MAEA,UAKK,SAASwgB,EAAW/wB,GAC/B,MAAwBF,IAAMyB,UAAS,GAAvC,mBAAOc,EAAP,KAAa8G,EAAb,KACA,EAA8CrJ,IAAMyB,SAAS,MAA7D,mBAAOyvB,EAAP,KAAwBC,EAAxB,KACA,EAAsCnxB,IAAMyB,SAAS,MAArD,mBAAO2vB,EAAP,KAAoBC,EAApB,KACM9J,EAAOrnB,EAAMqnB,KACbC,EAAUtnB,EAAMsnB,QAChB3hB,EAAO3F,EAAM2F,KAKb6iB,EAAc,WAChBrf,GAAQ,IAGNioB,EAAuB,uCAAG,kCAAA7pB,EAAA,6DACxBd,EAAO,CACXF,OAAQ,0BACR8qB,QAAS,MACTC,OAAQ,CAENjK,GAGF,GAAK,GATuB,SAYPhhB,MAAM,2BAA4B,CAEvDE,OAAQ,OACRE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBAhBC,cAYxBE,EAZwB,gBAmBXA,EAASC,OAnBE,cAmBxBA,EAnBwB,OAoBxB4qB,EAAe5qB,EAAKuM,OAAO5F,MApBH,kBAqBvBikB,GArBuB,2CAAH,qDAwBvBC,EAAc,uCAAG,kCAAAjqB,EAAA,6DACfd,EAAO,CACXF,OAAQ,iBACR8qB,QAAS,MACTC,OAAQ,CAENjK,GAGF,GAAK,GATc,SAYEhhB,MAAM,2BAA4B,CAEvDE,OAAQ,OACRE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBAhBR,cAYfE,EAZe,gBAmBFA,EAASC,OAnBP,cAmBfA,EAnBe,OAoBf4qB,EAAe5qB,EAAKuM,OAAO5F,MApBZ,kBAqBdikB,GArBc,2CAAH,qDAwBdE,EAAqB,uCAAG,gCAAAlqB,EAAA,sEACQmqB,QAAQC,IAAI,CAACP,MADrB,mCACvBQ,EADuB,KAE5BX,EAAmBW,GAFS,2CAAH,qDAIrBC,EAAgB,uCAAG,gCAAAtqB,EAAA,sEACImqB,QAAQC,IAAI,CAACH,MADjB,mCAClBM,EADkB,KAEvBX,EAAeW,GAFQ,2CAAH,qDActB,OATAhyB,IAAMyE,WAAU,WACTysB,GACHS,IAEGP,GACHW,MAED,CAACxK,IAGF,eAAC,IAAM1kB,SAAP,WACM,eAAC,IAAD,CACIxC,QAAQ,WAERgK,MAAK,iBAAYxE,EAAZ,YACLkD,QA/EY,WACpBM,GAAQ,IA+EApH,KAAK,QALT,UAOI,cAAC,IAAD,CAAoBG,GAAI,CAACE,GAAG,KAPhC,IAOwCuD,EAPxC,cASA,eAACsK,EAAD,CACIzN,QAASgmB,EACT,kBAAgB,0BAChBnmB,KAAMA,EACNqT,WAAY,CACRlR,MAAO,CACHyC,WAAY,8CACZuJ,UAAW,IACXmF,OAAQ,mCACRC,UAAW,kCACXlF,aAAc,OACdtJ,QAAQ,MAXpB,UAeE,eAACkf,EAAD,CAAsBxc,GAAG,0BAA0BtH,QAASgmB,EAA5D,oBACU7iB,EADV,cAGA,eAAC,IAAD,CAAewlB,UAAQ,EAAvB,UAEC+F,GACC,oCACEA,EAAYxI,OAAS,GACrB,cAAC,IAAD,CAAM9jB,WAAS,EAACC,QAAS,EACvBO,UAAU,SACVqI,WAAW,SACX2C,eAAe,SAHjB,SAKE,cAAC,IAAD,CAAMtL,MAAI,EAAV,SACI,eAAC,IAAD,CACE3E,QAAQ,KACRwa,UAAU,SAFZ,UAIA,cAAC,IAAD,CAAoBoX,OAAQC,WAAWd,EAAYe,gBAAgB9L,QAAQ,KAC3E,uBACA,cAAC,IAAD,CACE7M,OAAQ,cAAC,IAAD,CAAQ3P,IAAKhE,EAAMiE,IAAK0d,IAChCtd,MAAM,UACNjI,KAAK,QACLkL,MAAM,uBACN9M,QAAQ,sBAQlB,cAAC,IAAD,UACE,eAAC0G,EAAD,CAAa3E,GAAI,CAAEuM,SAAU,KAAO1M,KAAK,QAAQ,aAAW,kBAA5D,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAWmD,MAAM,SAAjB,qBACA,cAAC,IAAD,CAAWA,MAAM,QAAjB,sBACCgsB,GACC,oCACIA,EAAYxI,OAAS,GACrB,cAAC,IAAD,CAAWxjB,MAAM,iBAM3B,cAAC,IAAD,UACG8rB,EAAkBA,EAAgBhpB,KAAI,SAAClD,EAAWoD,GAAZ,OACrC,eAAC,IAAD,CAEEhG,GAAI,CAAE,mCAAoC,CAAEyT,OAAQ,IAFtD,UAIE,cAAC,IAAD,CAAWtS,UAAU,KAAKwU,MAAM,MAAhC,SAAuC3P,EAAM,IAC7C,cAAC,IAAD,CAAW7E,UAAU,KAAKwU,MAAM,MAAhC,SACE,cAAC,IAAD,CAAqB9W,KAAM+D,EAAKzE,QAASW,KAAM,EAAGC,YAAY,EAAMC,SAAS,EAAMC,SAAU,OAE/F,cAAC,IAAD,CAAW+D,MAAM,QAAjB,SACE,cAAC,IAAD,CAAoB6sB,OAAQC,WAAWltB,EAAKmtB,gBAAgB9L,QAAQ,OAEtE,cAAC,IAAD,CAAWjhB,MAAM,QAAjB,SACGgsB,GACC,oCACIA,EAAYxI,OAAS,GACvB,sCACEsJ,WAAWltB,EAAKmtB,gBAAgBD,WAAWd,EAAYe,gBAAgB,KAAK9L,QAAQ,GADtF,aAdDrhB,EAAKzE,YAyBZ,eAAC,IAAMsC,SAAP,WACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,SAEf,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,SAEf,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,8B,0RC5R9BuvB,EAAc,SAAClyB,EAAY6D,GAGpC,IACI,IAAMsuB,EAAWnyB,EAOjB,OALA6D,EAAQ4B,OAAS0sB,EACjBtuB,EAAQC,UAAYquB,EACpBtuB,EAAQG,aAAc,EACtBH,EAAQI,UAAW,EAEZ,IAAImuB,IAAQvuB,GACrB,MAAOlD,GACLC,QAAQyxB,KAAK1xB,K,kCCRR2xB,EAAsBC,wBAAwC,IAEpE,SAASC,IACZ,OAAOC,qBAAWH,G,kCCJhBI,EAAYC,YAAW,CACzBC,KAAM,CACFlwB,MAAO,OACP+B,OAAQ,UAQHouB,EAAkC,SAAC,GAA0B,IAAxB9uB,EAAuB,EAAvBA,OAAW/D,EAAY,iBAC/D8yB,EAASJ,IAEf,OAAO3uB,GAAU,iCAAK6F,IAAK7F,EAAOgvB,KAAMppB,IAAG,UAAK5F,EAAO4B,KAAZ,SAAyBiT,UAAWka,EAAOF,MAAU5yB,K,sDCXvFgzB,EAAuC,SAAC,GAO9C,IAAD,IANFhpB,aAME,MANM,UAMN,MALF7J,eAKE,MALQ,YAKR,EAJFomB,EAIE,EAJFA,SACAzd,EAGE,EAHFA,SACAD,EAEE,EAFFA,QACG7I,EACD,iBACF,EAAmD4D,cAA3CG,EAAR,EAAQA,OAAQkvB,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,WAAY9hB,EAArC,EAAqCA,UAE/B+hB,EAAoDjhB,uBACtD,SAACtQ,GACOiH,GAASA,EAAQjH,GAEhBA,EAAMwxB,kBACPH,IAAUhgB,OAAM,iBAIxB,CAACpK,EAASoqB,IAGR5P,EAAUT,mBAAQ,WACpB,OAAI2D,IACA2M,EACO,iBACP9hB,EACO,YACPrN,EACO,UACJ,oBACR,CAACwiB,EAAU2M,EAAY9hB,EAAWrN,IAErC,OACI,cAACgG,EAAA,EAAD,yBACIC,MAAOA,EACP7J,QAASA,EACT0I,QAASsqB,EACTrqB,SAAUA,IAAa/E,GAAUmvB,GAAc9hB,EAC/CiiB,UAAW,cAAC,EAAD,CAAYtvB,OAAQA,KAC3B/D,GANR,aAQKqjB,M,iGChCAiQ,EAA0C,SAAC,GAAmC,IAAjCzqB,EAAgC,EAAhCA,QAAS9E,EAAuB,EAAvBA,OAAW/D,EAAY,iBACtF,OACI,cAAC6d,EAAA,EAAD,2BAAc7d,GAAd,aACI,cAAC+J,EAAA,EAAD,CAAQlB,QAASA,EAAS0qB,QAAS,cAAC,EAAD,CAAYxvB,OAAQA,IAAvD,SACKA,EAAO4B,W,wCCClBsK,EAAkBnJ,YAAOoJ,IAAPpJ,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACnD,qBAAsB,CAClBtE,MAAOsE,EAAMnC,QAAQ,IACrB8F,OAAQ,GAEZ,yBAA0B,CAItB1D,WAAY,8CACZ,wBAAyB,CACrBmG,QAAS,OACTgD,eAAgB,gBAChBjJ,WAAYH,EAAMnC,QAAQ,GAAK,MAEnC,wBAAyB,CACrB8D,WAAY,EACZvB,QAASJ,EAAMnC,UACfwL,YAAarJ,EAAMnC,SAAS,GAC5BmF,MAAOhD,EAAMsJ,QAAQC,KAAK,OAGlC,2BAA4B,CACxBnJ,QAAS,EACT,sBAAuB,CACnB,kBAAmB,CACfH,WAAY,oBAGpB,kBAAmB,CACfA,WAAY,kBACZG,QAAS,GAEb,sBAAuB,CACnBoJ,UAAW,2CACX,UAAW,CACPA,UACI,iFAERpJ,QAAS,EACT,uBAAwB,CACpBuD,OAAQ,GAEZ,oBAAqB,CACjB8F,SAAU,EACVL,eAAgB,gBAChBhJ,QAASJ,EAAMnC,QAAQ,EAAG,GAC1B6L,kBAAcC,EACdxO,SAAU,OACVyO,WAAY,KAEhB,qBAAsB,CAClB5G,MAAOhD,EAAMsJ,QAAQC,KAAK,YAwC7BijB,GAAsC,SAAC,GAK7C,IAAD,IAJFrpB,aAIE,MAJM,qBAIN,MAHFspB,uBAGE,MAHgB,EAGhB,EAFFjxB,EAEE,EAFFA,QACGxC,EACD,iBACF,EAA4B4D,cAApB2U,EAAR,EAAQA,QAASmb,EAAjB,EAAiBA,OACjB,EAA0BlB,IAAlBnwB,EAAR,EAAQA,KAAM8G,EAAd,EAAcA,QACd,EAAgC5H,oBAAS,GAAzC,mBAAO8jB,EAAP,KAAiBsO,EAAjB,KAEA,EAAyB/Q,mBACrB,iBAAM,CAACrK,EAAQvJ,MAAM,EAAGykB,GAAkBlb,EAAQvJ,MAAMykB,MACxD,CAAClb,EAASkb,IAFd,mBAAOG,EAAP,KAAiBC,EAAjB,KAKMrL,EAActW,uBAChB,SAACtQ,EAAuBC,GAChBW,GAASA,EAAQZ,EAAOC,GACvBD,EAAMwxB,kBAAkBjqB,GAAQ,KAEzC,CAACA,EAAS3G,IAGRsxB,EAAoB5hB,uBACtB,SAACtQ,EAAuBmyB,GACpBL,EAAOK,GACPvL,EAAY5mB,KAEhB,CAAC8xB,EAAQlL,IAGPwL,EAAoB9hB,uBAAY,kBAAMyhB,GAAatO,KAAW,CAACsO,EAAatO,IAElF,OACI,eAACpV,EAAD,yBACI5N,KAAMA,EACNG,QAASgmB,EAET/S,SAAU,KACVC,WAAY,CACZlR,MAAO,CACHyC,WAAY,8CACZuJ,UAAW,IACXmF,OAAQ,mCACRC,UAAW,kCACXlF,aAAc,OACdtJ,QAAQ,OAGRpH,GAfR,cAgBI,eAAC6V,EAAA,EAAD,WACK1L,EACD,cAACvB,EAAA,EAAD,CACI1G,GAAI,CACA8L,SAAU,WACVyY,MAAO,EACPC,IAAK,GAET7d,QAAS2f,EANb,SAOI,cAAC,IAAD,SAGR,cAAC1S,EAAA,EAAD,UACI,eAAC6H,EAAA,EAAD,WACKiW,EAAS5rB,KAAI,SAACjE,GAAD,OACV,cAAC,EAAD,CAEI8E,QAAS,SAACjH,GAAD,OAAWkyB,EAAkBlyB,EAAOmC,EAAO4B,OACpD5B,OAAQA,GAFHA,EAAO4B,SAKnBkuB,EAAKvzB,OACF,qCACI,cAACiK,EAAA,EAAD,CAAUC,GAAI6a,EAAU5a,QAAQ,OAAOC,eAAa,EAApD,SACI,cAACiT,EAAA,EAAD,UACKkW,EAAK7rB,KAAI,SAACjE,GAAD,OACN,cAAC,EAAD,CAEI8E,QAAS,SAACjH,GAAD,OAAWkyB,EAAkBlyB,EAAOmC,EAAO4B,OACpD5B,OAAQA,GAFHA,EAAO4B,aAO5B,cAACkY,EAAA,EAAD,UACI,eAAC9T,EAAA,EAAD,CAAQlB,QAASmrB,EAAjB,UACK3O,EAAW,OAAS,OADzB,WAEKA,EAAW,cAAC,IAAD,IAAiB,cAAC,IAAD,YAIzC,e,4CCxMX4O,GAAsC,SAAC,GAM7C,IAAD,IALF1N,gBAKE,MALS,UAKT,MAJFvc,aAIE,MAJM,UAIN,MAHF7J,eAGE,MAHQ,YAGR,EAFF0I,EAEE,EAFFA,QACG7I,EACD,kBACMmJ,EAAYqpB,IAAZrpB,QAEFgqB,EAAoDjhB,uBACtD,SAACtQ,GACOiH,GAASA,EAAQjH,GAChBA,EAAMwxB,kBAAkBjqB,GAAQ,KAEzC,CAACN,EAASM,IAGd,OACI,cAACY,EAAA,EAAD,yBAAQC,MAAOA,EAAO7J,QAASA,EAAS0I,QAASsqB,GAAiBnzB,GAAlE,aACKumB,M,gBCtBA2N,GAA8C,SAAC,GAA4B,IAA1B3N,EAAyB,EAAzBA,SAAavmB,EAAY,kBACnF,EAAwBuB,oBAAS,GAAjC,mBAAOc,EAAP,KAAa8G,EAAb,KAEA,OACI,eAACmpB,EAAoB6B,SAArB,CACI7mB,MAAO,CACHjL,OACA8G,WAHR,UAMKod,EACD,cAAC,GAAD,eAAkBvmB,Q,gKCqBxBo0B,GAAattB,YAAO+Z,KAAP/Z,EAAa,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC5C,kBAAmB,CACfI,QAAS,GAEb,sBAAuB,CACnBA,QAASJ,EAAMnC,QAAQ,EAAG,GAC1B2L,UAAW,2CACX,6BAA8B,CAC1BpJ,QAAS,EACT,oBAAqB,CACjBsJ,aAAc,IAGtB,UAAW,CACPF,UACI,kFAGZ,0BAA2B,CACvBH,YAAarJ,EAAMnC,UACnB4J,SAAU,QACV,qBAAsB,CAClB/L,MAAO,GACP+B,OAAQ,SAKpB,SAASrB,GAAYrC,GACjB,IAAKA,EAAM,OAAO,KAClB,GAAIA,EAAKT,OAAS,GAAG,CACb,IAAI2C,EAAQlC,EAAKmC,UAAU,EAAG,GAC1BC,EAAMpC,EAAKmC,UAAUnC,EAAKT,OAAS,GACvC,MAAM,GAAN,OAAU2C,EAAV,cAAqBE,GAE7B,OAAOpC,EAWJ,IAAMszB,GAAqC,SAAC,GAK5C,IAbsBtzB,EAavB,IAJFiJ,aAIE,MAJM,UAIN,MAHF7J,eAGE,MAHQ,WAGR,EAFFomB,EAEE,EAFFA,SACGvmB,EACD,kBACF,EAA0C4D,cAAlCE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQuN,EAA3B,EAA2BA,WAC3B,EAAgCnN,cAAxBN,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,WACT+E,EAAYqpB,IAAZrpB,QACR,EAA4B5H,qBAA5B,mBAAO+yB,EAAP,KAAeC,EAAf,KAGIC,EAAS5R,mBAAQ,yBAAM9e,QAAN,IAAMA,OAAN,EAAMA,EAAWgP,aAAY,CAAChP,KAAe,KAO1DiO,GANQ6Q,mBAAQ,WACpB,OAAI2D,IACCxiB,GAAWywB,EACTA,EAAOxlB,MAAM,EAAG,GAAK,KAAOwlB,EAAOxlB,OAAO,GADlB,QAEhC,CAACuX,EAAUxiB,EAAQywB,IAEMxiB,cAApBD,iBAdN,SAmBayI,EAnBb,8EAmBF,WAAiCD,GAAjC,SAAAhT,EAAA,sDACInD,EAAW,MACPmW,IACA1X,OAAOC,SAASC,KAAO,KAH/B,4CAnBE,sBAyBF,OAAKgB,EAgBAywB,EAsBD,qCACI,cAACzqB,EAAA,EAAD,yBACIC,MAAOA,EACP7J,QAASA,EACTkzB,UAAW,cAAC,EAAD,CAAYtvB,OAAQA,IAC/B8E,QAAS,SAACjH,GAAD,OAAW2yB,EAAU3yB,EAAM6e,gBACpC,gBAAc,cACd,gBAAc,QAEVzgB,GARR,cA7EiBe,EAuFM8C,EAAQC,UArFrC,eAAC,IAAMnB,SAAP,WACE,cAAC,IAAD,CAAkCR,SAAS,QAAQD,GAAI,CAAEE,GAAG,KAD9D,IACwEgB,GAAYrC,UAsF9E,cAACqzB,GAAD,CACItqB,GAAG,cACH4V,SAAU4U,EACVjyB,OAAQiyB,EACR9xB,QAAS,kBAAM+xB,OAAU5jB,IACzB8jB,gBAAiB,EACjBC,oBAAqBC,KACrBC,mBAAoB,IACpB9T,aAAW,EARf,SA8BI,eAACvW,EAAA,EAAD,CAAUC,KAAM8pB,EAAhB,UACI,eAACvT,GAAA,EAAD,CACIlY,QAAO,sBAAE,sBAAAtB,EAAA,6DACLgtB,OAAU5jB,GADL,SAECsE,UAAUC,UAAUC,UAAUqf,GAF/B,OAGLziB,EAAgB,YAAY,CAAE5R,QAAS,YAHlC,2CADb,UAOI,cAAC00B,GAAA,EAAD,UACI,cAAC,KAAD,MARR,kBAYA,eAAC9T,GAAA,EAAD,CACI1d,UAAU,IACVN,KAAI,8CAAyCc,EAAQC,WACrDR,OAAO,SAHX,UAKI,cAACuxB,GAAA,EAAD,UACI,cAAC,KAAD,MANR,aAUA,eAAC9T,GAAA,EAAD,CACIlY,QAAS,WACL0rB,OAAU5jB,GACVW,IACK2B,OAAM,eAGNa,MAAK,WACF0G,GAAkB,MAE1BrR,GAAQ,IAVhB,UAaI,cAAC0rB,GAAA,EAAD,UACI,cAAC,KAAD,MAdR,gCAkBA,eAAC9T,GAAA,EAAD,CACIlY,QAAS,WACL0rB,OAAU5jB,GAEVW,IACK2B,OAAM,eAGNa,MAAK,WACF0G,GAAkB,OATlC,UAcI,cAACqa,GAAA,EAAD,UACI,cAAC,KAAD,MAfR,yBAzGZ,OAAIhxB,QAAJ,IAAIA,KAASC,YACTlD,QAAQC,IAAI,YAAYgD,EAAQC,WAC3BA,IAEDlD,QAAQC,IAAI,8CACPkD,IACDnD,QAAQC,IAAI,uBACZ2Z,GAAkB,GAClB5Z,QAAQC,IAAI,uBAMpB,cAAC,EAAD,yBAAqBmJ,MAAOA,EAAO7J,QAASA,GAAaH,GAAzD,aACKumB,OA5BT,OAAI1iB,QAAJ,IAAIA,KAASC,UAMT,cAAC,GAAD,yBAAoBkG,MAAOA,EAAO7J,QAASA,GAAaH,GAAxD,aACKumB,O,SC7EjBuO,EAAQ,MAEgBhuB,YAAOoJ,IAAPpJ,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,0BAA2B,CACzBI,QAASJ,EAAMnC,QAAQ,IAEzB,0BAA2B,CACzBuC,QAASJ,EAAMnC,QAAQ,QAL3B,IAuCMkwB,GAAuB,SAAC/0B,GAE5B,IAAQyF,EAAoCzF,EAApCyF,OAAQsS,EAA4B/X,EAA5B+X,UAAW/R,EAAiBhG,EAAjBgG,MAAOmV,EAAUnb,EAAVmb,MAClC,EAAgChX,cAAxBN,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,WACTqN,EAAeE,cAAfF,WACR,EAAwE7N,cAAhEE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQuN,EAA3B,EAA2BA,WAAYD,EAAvC,EAAuCA,gBAAiBK,EAAxD,EAAwDA,YAChDK,EAAoBC,cAApBD,gBACFxP,EAAW,SAGjB,SAASyyB,EAAMC,GACb,IAAMC,EAAOC,KAAKC,MACdC,EAAc,KAClB,GACEA,EAAcF,KAAKC,YACZC,EAAcH,EAAOD,GAfU,SAkB3Bza,EAlB2B,8EAkB1C,WAAiCD,GAAjC,SAAAhT,EAAA,sEACQ+J,IAAa2B,OAAM,eAD3B,OAEE7O,EAAW,MACPmW,IACA1X,OAAOC,SAASC,KAAO,KAJ7B,4CAlB0C,sBAyB1C,SAASuyB,EAAmBC,GAC1BnxB,EAAW8tB,EAAYqD,EAAc1xB,IA1BG,SA6B3B2xB,IA7B2B,2EA6B1C,gCAAAjuB,EAAA,6DAEmB,EACX4hB,EAFe,KAEuBpgB,KAAKqgB,IAAI,GADpC,GAEXhX,GAAc,IAAImB,eACvBC,IACG6V,gBAAcC,SAAS,CACnBC,WAAYzlB,EACZ0lB,SAAU1lB,EACV2lB,SAAUN,KAKlBvoB,QAAQC,IAAI,0CACZkR,EAAgB,wBAAwB,CAAE5R,QAAS,SAfrD,SAgB6BkR,EAAgBe,EAAaX,GAhB1D,cAgBQgkB,EAhBR,OAkBE1jB,EAAgB,2EAA2E,CAAE5R,QAAS,OAAQmC,iBAAkB,MAChI1B,QAAQC,IAAI,2BAA6BsF,KAAKC,UAAUqvB,IACxDT,EAAM,KApBR,UAsBQvjB,EAAWgG,mBAAmBge,EAAc,aAtBpD,eAwBOA,IACH70B,QAAQC,IAAI,kCACZ2Z,GAAkB,IAEpBzI,EAAgB,uBAAuB,CAAE5R,QAAS,YA5BpD,kBA8BSs1B,GA9BT,6CA7B0C,sBA+D1C,IAAMC,EAAexjB,sBAAW,uCAAC,WAAOyjB,GAAP,iCAAApuB,EAAA,yDAC/B3G,QAAQC,IAAI,sCADmB,UAGP,EAcfgD,EAAQG,YAjBc,oBAmBpB0N,EAnBoB,2BAoBnB3N,QApBmB,IAoBnBA,MAAQ8P,QAAQlO,KApBG,oBAqBrB/E,QAAQC,KAAU,OAANkD,QAAM,IAANA,OAAA,EAAAA,EAAQ8P,QAAQlO,MAAO,6CAEzB,OAAN5B,QAAM,IAANA,KAAQ8P,QAAQlO,KAvBC,OA2BjB5B,QA3BiB,IA2BjBA,MAAQ8P,QAAQlO,KA3BC,wBA4BnBoP,MAAM,0DAAkDhR,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAQ8P,QAAQlO,MAAK,sBAE7E2vB,EAAmBxxB,EAAUgP,YA9BV,kBA+BZ,MA/BY,oCAoChBhP,IAAaqX,EApCG,wBAqCnBma,EAAmBxxB,EAAUgP,aACb,EAtCG,kBAuCZ,MAvCY,cA2CvB0H,GAAkB,GAEZ,IAAIzU,MAAM,4CA7CO,eAiDnB6vB,GAAW,IAAIC,aAAcC,OAAOvzB,GAE1C3B,QAAQC,KAAU,OAANkD,QAAM,IAANA,OAAA,EAAAA,EAAQ8P,QAAQlO,MAAO,+BAE/BO,GAAkB,EArDG,UAsDAwL,EAAYkkB,GACpC3iB,OAAM,SAACd,GAEN,IAAIrO,EAGA,OAAO,QA5DY,WAsDrB2xB,EAtDqB,4BAkEnB5yB,OAAOkzB,QAAQ,yPAlEI,wBAmErB7vB,GAAkB,EAnEG,UAoEAsvB,IApEA,QAoErBC,EApEqB,OAqErBA,GAAe,IAAII,aAAcC,OAAOL,GArEnB,WA2EnBA,IAAgB3xB,EA3EG,wBA8EvBwxB,EAAmBxxB,EAAUsR,YA9EN,kBA+EhB,MA/EgB,QAgFbqgB,GACVjb,GAAkB,GAjFK,WAyFG,UAAlB,OAANzW,QAAM,IAANA,OAAA,EAAAA,EAAQ8P,QAAQlO,MAzFK,oBA0FlBO,EA1FkB,oBA2FhB8vB,OAAKC,SAASC,OAAON,EAAUH,EAAc3xB,EAAUqyB,WA3FvC,uBA4FnB3b,GAAkB,GACZ,IAAIzU,MAAM,0BA7FG,WAkGnBqwB,EAAeC,IAAKC,OAAOxyB,EAAUsR,YACrC/U,EAAU,CAAC,KAAO,SAAS,KAAOk2B,OAAOC,OAAOJ,IAChDnwB,EAAY,CAAC,KAAO,SAAS,KAAOswB,OAAOC,OAAOf,IAYxD70B,QAAQC,IAAIsF,KAAKC,UAAU,CACvBX,OAAQA,EACRO,MAAOzD,EACPlC,QAAS+1B,EACTtyB,UAAWA,EAAUsR,WACrBnP,UAAWA,EACXC,gBAAiBA,KAGrBtF,QAAQC,KAAU,OAANkD,QAAM,IAANA,OAAA,EAAAA,EAAQ8P,QAAQlO,MAAO,sCAE/BwV,EA3HqB,oBA4HvBva,QAAQC,IAAI,gBACRyF,KA7HmB,kCA8HED,MAAM,GAAD,OAAIC,KAAJ,UAA+B,CACzDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMN,KAAKC,UAAU,CACjBJ,MAAOzD,EACPlC,QAAS+1B,EACTtyB,UAAWA,EAAUsR,WACrBnP,UAAWA,EACXC,gBAAiBA,MAEpB+M,OAAO,SAAAwjB,GAER,OADA71B,QAAQC,IAAI,UAAU41B,GACf,QA5IY,eA8Hf/vB,EA9He,iBA8ICA,EAASC,OA9IV,QA8If9C,EA9Ie,OAgJrBjD,QAAQC,KAAU,OAANkD,QAAM,IAANA,OAAA,EAAAA,EAAQ8P,QAAQlO,MAAK,kCACjC9B,EAAQmC,MAAQ,CAAC3F,UAAS4F,aAC1BpC,EAAQC,UAAYA,EAAUsR,WAC9BvR,EAAQG,aAAc,EACtBH,EAAQqC,gBAAkBA,EAIxBrC,EAAQI,WAHLyC,EAILtC,EAAWP,GAzJU,wBA2JrByxB,EAAmBxxB,EAAUgP,YA3JR,mCA8JvBlS,QAAQC,IAAI,0BACZD,QAAQC,IAAIsF,KAAKC,UAAU,CACvBX,OAAQA,EACRO,MAAOA,EACP3F,QAAS+1B,EACTtyB,UAAWA,EAAUsR,WACrBnP,UAAWA,EACXC,gBAAiBA,MAGjBI,KAxKmB,kCAyKGD,MAAM,GAAD,OAAIC,KAAJ,aAAkC,CAC7DC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMN,KAAKC,UAAU,CACjBX,OAAQA,EACRO,MAAOA,EACP3F,QAAS+1B,EACTtyB,UAAWA,EAAUsR,WACrBnP,UAAWA,EACXC,gBAAiBA,MAEpB+M,OAAO,SAAAwjB,GAER,OADA71B,QAAQC,IAAI,UAAU41B,GACf,QAxLY,eAyKfC,EAzKe,iBA0LEA,EAAU/vB,OA1LZ,QA0LfgwB,EA1Le,OA2LrB/1B,QAAQC,KAAU,OAANkD,QAAM,IAANA,OAAA,EAAAA,EAAQ8P,QAAQlO,MAAK,kCACjCgxB,EAAS3wB,MAAQ,CAAC3F,UAAS4F,aAC3B0wB,EAAS7yB,UAAYA,EAAUsR,WAC/BuhB,EAAS5e,UAAYA,EACrBlU,EAAQqC,gBAAkBA,EACrBwwB,GAIHC,EAAS3yB,aAAc,EACvBH,EAAQI,UAAW,IAJnB0yB,EAAS3yB,aAAc,EACvBH,EAAQI,UAAW,GAKrBG,EAAWuyB,GAvMU,iCA8MpB9yB,GA9MoB,yCAiN7BjD,QAAQC,IAAR,4DAA+B,KAAO0B,UACtCiY,GAAkB,GAlNW,kBAoNtB,MApNsB,0DAAD,sDAsN7B,CAAC9I,IAKJ,EAAiC5R,IAAMyB,SAAS,GAAhD,mBAAO8C,EAAP,KAAkBC,EAAlB,KAiBA,OAfAxE,IAAMyE,WAAU,WAEdD,EAAYD,EAAU,IAEhBR,EAAQC,WAAaA,GACrBA,EAAUsR,WAAW9U,OAAS,GAIhCo1B,EAAa5xB,KAGhB,CAACA,IAIF,cAAC,IAAMnB,SAAP,UACE,cAAC,GAAD,OAKAi0B,GAAmB,SAAC52B,GACxB,MAAwBF,IAAMyB,UAAS,GAAvC,mBACA,GADA,UACwEqC,eAAxE,EAAQE,UAAR,EAAmBC,OAAnB,EAA2BuN,WAA3B,EAAuCD,gBAAvC,EAAwDK,YAuBvD,OACG,cAAC,GAAD,eAAsB1R,KAKb,SAAS6a,GAAc7a,GAC8FA,EAA1HgE,YAA0HhE,EAA7G8a,OAA6G9a,EAArGgb,sBAAqGhb,EAA9E0gB,gBAA8E1gB,EAA7Dib,WAArE,IAAiFC,EAAiDlb,EAAjDkb,YACjF,GADkIlb,EAApCyF,OAAoCzF,EAA5B+X,UAA4B/X,EAAjBgG,MAAiBhG,EAAVmb,MAChGrb,IAAMyB,UAAS,IAAvC,mBAAa4H,GAAb,WACA,EAAgChF,cAAxBN,EAAR,EAAQA,QAASO,EAAjB,EAAiBA,WAkBjB,IAAMyyB,EAAmB,WACvB,MAAkC/2B,IAAMyB,SAAS,IAAjD,mBAAOu1B,EAAP,KAAiBC,EAAjB,KACA,EAA0Bj3B,IAAMyB,UAAS,GAAzC,6BAuBA,OACI,mCACE,sBAAM2f,SApBZ,SAAsBtf,GACpBA,EAAMqpB,iBAENrqB,QAAQC,IAAK,0BAA4Bi2B,GACpCA,EAASx2B,QAAU,IACnBw2B,EAASx2B,QAAU,KAEtB8D,EAAW8tB,EAAY4E,EAAUjzB,IACjC2kB,MAYE,SACE,eAAC7jB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC0R,EAAA,EAAD,CACEwgB,WAAS,EACT3L,aAAa,MACb1gB,OAAO,QACPb,GAAG,YACHmD,MAAM,kBACN0T,KAAK,OACLlK,WAAS,EACTtW,QAAQ,WACRmN,MAAOwpB,EACP1oB,SAAU,SAACzN,GAAD,OAAOo2B,EAAcp2B,EAAE2C,OAAOgK,YAG5C,cAAC3I,EAAA,EAAD,CAAMG,MAAI,EAAC2I,WAAW,SAASjJ,MAAO,CAAE4I,QAAS,QAAjD,SACE,cAACrD,EAAA,EAAD,CACE4W,KAAK,SACLxgB,QAAQ,YACRgK,MAAM,KAHR,0BAgBRqe,EAAc,WAClBrf,GAAQ,IAOJ8tB,EACJ,cAAC,IAAMt0B,SAAP,UACGuY,GACC,eAAC,IAAMvY,SAAP,WACE,cAACu0B,EAAA,EAAD,IACA,cAACL,EAAD,SAMR,OACE,mCACE,eAAC,GAAD,WACE,cAAC,GAAD,eAAkB72B,IACjBi3B,S,uFC5gBY7E,E,aAgBnB,WAAY7sB,GAAY,yBAfxBE,YAeuB,OAdvBsS,eAcuB,OAbvBC,eAauB,OAZvBQ,iBAYuB,OAXvB/M,aAWuB,OAVvBE,iBAUuB,OATvB3F,WASuB,OALvBlC,eAKuB,OAJvBG,cAIuB,OAHvBD,iBAGuB,OAFvBkC,qBAEuB,EACrBJ,KAAKL,OAASF,GAAQA,EAAKE,OAC3BK,KAAKiS,UAAYxS,GAAQA,EAAKwS,UAC9BjS,KAAKkS,UAAYzS,GAAQA,EAAKyS,UAC9BlS,KAAK0S,YAAejT,GAAQA,EAAKiT,aAAgB,GACjD1S,KAAK6F,YAAepG,GAAQA,EAAKoG,aAAgB,GACjD7F,KAAK2F,QAAWlG,GAAQA,EAAKkG,SAAY,GACzC3F,KAAK9B,eAAcuB,IAAQA,EAAKE,QAChCK,KAAKE,MAAST,GAAQA,EAAKS,OAAU,CAACC,UAAW,KAAM5F,QAAS,MAChEyF,KAAKhC,UAAYyB,GAAQA,EAAKzB,UAC9BgC,KAAK7B,SAAWsB,GAAQA,EAAKtB,SAC7B6B,KAAKI,gBAAkBX,GAAQA,EAAKW,oB,qGC5BzB,SAASixB,EAAUn3B,GAC9B,OACI,cAAC,IAAD,2BAAaA,GAAb,aACG,sBAAMmY,EAAE,89RAA89RrO,GAAG,e,0WCwB9+RmG,EAAkBnJ,YAAOoJ,IAAPpJ,EAAe,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACrD,0BAA2B,CACzBI,QAASJ,EAAMnC,QAAQ,IAEzB,0BAA2B,CACzBuC,QAASJ,EAAMnC,QAAQ,QAU3B,SAASuyB,EAAgBlC,EAAcmC,EAAgBC,GAGrD,IAAIC,EAAW,IAAIpC,KAAKD,GAAMsC,qBAQ9B,OAPIF,IACAC,EAAW,IAAIpC,KAAKD,GAAMuC,kBAC1BJ,IACAE,EAAW,IAAIpC,KAAa,KAAPD,GAAasC,qBAC9BF,IACAC,EAAW,IAAIpC,KAAa,KAAPD,GAAauC,mBAGtC,mCAAGF,IAIT,IAAMjR,EAAuB,SAACtmB,GAC5B,IAAQumB,EAAgCvmB,EAAhCumB,SAAU/jB,EAAsBxC,EAAtBwC,QAAYgkB,EAA9B,YAAwCxmB,EAAxC,GAEA,OACE,eAAC,IAAD,yBAAakC,GAAI,CAAE6L,EAAG,EAAGwH,EAAG,IAASiR,GAArC,cACGD,EACA/jB,EACC,cAAC,IAAD,CACE,aAAW,QACXqG,QAASrG,EACTN,GAAI,CACF8L,SAAU,WACVyY,MAAO,EACPC,IAAK,EACL1c,MAAO,SAAChD,GAAD,OAAWA,EAAMsJ,QAAQC,KAAK,OAPzC,SAUE,cAAC,IAAD,MAEA,UAKK,SAASmnB,EAAmB13B,GACvC,MAAwBF,IAAMyB,SAASvB,EAAMqnB,MAA7C,mBACA,GADA,UACwCvnB,IAAMyB,SAASvB,EAAMylB,WAA7D,mBACA,GADA,UACwB3lB,IAAMyB,UAAS,IAAvC,mBAAOc,EAAP,KAAa8G,EAAb,KACA,EAAkCrJ,IAAMyB,SAASvB,EAAM8D,WAAvD,mBACA,GADA,UAC8BhE,IAAMyB,SAASvB,EAAMK,UAAnD,mBAAOA,EAAP,KACA,GADA,KACoDP,IAAMyB,SAAS,OAAnE,mBAAOo2B,EAAP,KAA2BC,EAA3B,KACA,EAAgD93B,IAAMyB,SAAS,MAA/D,mBAAyBs2B,GAAzB,WACA,EAAkE/3B,IAAMyB,SAAS,MAAjF,mBACA,GADA,UACgEzB,IAAMyB,SAAS,OAA/E,mBAAiCu2B,GAAjC,WACA,EAAgC3zB,cAAxBN,EAAR,EAAQA,QAEA4N,GAFR,EAAiBrN,WAEMuN,cAAfF,YAMF+W,EAAc,WAChBrf,GAAQ,IAGN4uB,GAA2B,uCAAG,oEAAAxwB,EAAA,sEAERkK,EAAWumB,wBAAwB,IAAIz3B,YAAUF,IAFzC,OAE5B+R,EAF4B,OAK9B6lB,EAAgB,GAChBC,EAAe,GACfC,EAAe,GACfC,EAAI,EAR0B,cAShBhmB,GATgB,IASlC,2BAA8B,QACxBgmB,EAAE,MACJH,EAAO3rB,KAAK8F,EAAYgmB,GAAGnyB,WAC3BiyB,EAAM5rB,KAAK8F,EAAYgmB,GAAGC,MAC1BF,EAAM7rB,KAAK8F,EAAYgmB,GAAGE,YAE5BF,IAfgC,qCAkBlCR,EAAsBxlB,GAlBY,UAoBDX,EAAW8mB,sBAAsBN,GApBhC,QAoB5BO,EApB4B,OA4BlCV,EALe,CACb1lB,YAAYA,EACZqmB,QAASD,IAKPE,EAA0B,GAEpB,EAhCwB,cAiCfF,GAjCe,IAiClC,2BAAsC,CAA7BG,EAA6B,QAIhCC,EAAO,EAJyB,cAMjBD,EAAOvmB,YAAY7P,QAAQs2B,cANV,IAMpC,2BAASC,EAAkD,QACzDl4B,QAAQC,IAAI,gBAAgBsF,KAAKC,UAAU0yB,IACvCC,EAAW5yB,KAAKC,UAAU0yB,GAC1BE,EAAY7yB,KAAKkkB,MAAM0O,GACd,IAATH,GAEF,OAAII,QAAJ,IAAIA,GAAJ,UAAIA,EAAW1O,cAAf,iBAAI,EAAmBC,YAAvB,OAAI,EAAyB7B,QACvBsQ,EAAU1O,OAAOC,KAAK0O,YAAcp1B,EAAQC,YAC9ClD,QAAQC,IAAI,WAAam4B,EAAU1O,OAAOC,KAAK7B,QAC/C9nB,QAAQC,IAAI,WAAam4B,EAAU1O,OAAOC,KAAK0O,WAC/Cr4B,QAAQC,IAAI,gBAAkBm4B,EAAU1O,OAAOC,KAAK2O,aACpDt4B,QAAQC,IAAI,SAAWm4B,EAAU1O,OAAO3J,MAExC+X,EAAiBpsB,KAAK,CACpBrG,UAAUgyB,EAAOW,GACjBxmB,YAAW,OAAC4mB,QAAD,IAACA,GAAD,UAACA,EAAW1O,cAAZ,aAAC,EAAmBC,KAC/B8N,KAAKH,EAAMU,GACXtB,KAAKa,EAAMS,MAMnBA,IA7BkC,gCAjCJ,8BAkElCf,EAAoBa,GAlEc,4CAAH,qDA4EjC,OACE,eAAC,IAAM/1B,SAAP,WACM,cAAC,IAAD,CACIxC,QAAQ,WAERgK,MAAK,sBACLtB,QA1FY,WACpBM,GAAQ,GACR4uB,MAyFQh2B,KAAK,QACLG,GAAI,CAACc,GAAG,GANZ,SAQI,cAAC,IAAD,MAEJ,eAACiN,EAAD,CACIzN,QAASgmB,EACT,kBAAgB,0BAChBnmB,KAAMA,EACNqT,WAAY,CACRlR,MAAO,CACHyC,WAAY,8CACZuJ,UAAW,IACXmF,OAAQ,mCACRC,UAAW,kCACXlF,aAAc,OACdtJ,QAAQ,MAXpB,UAeE,cAACkf,EAAD,CAAsBxc,GAAG,0BAA0BtH,QAASgmB,EAA5D,iCAGA,cAAC,IAAD,CAAe2C,UAAQ,EAAvB,SACE,cAAC,IAAD,CAAgB9nB,UAAW2B,IACzB9C,GAAI,CACA+E,WAAY,0BACZuJ,UAAW,EACXE,aAAc,QAJpB,SAOE,eAAC,IAAD,CAAOxO,GAAI,CAAEuM,SAAU,KAAO1M,KAAK,QAAQ,aAAW,gBAAtD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,wBACA,cAAC,IAAD,CAAWmD,MAAM,QAAjB,oBACA,cAAC,IAAD,CAAWA,MAAM,QAAjB,yBACA,cAAC,IAAD,CAAWA,MAAM,UACjB,cAAC,IAAD,CAAWA,MAAM,QAAjB,uBAGJ,cAAC,IAAD,UA8BGyyB,EAAqBA,EAAmB3vB,KAAI,SAAClD,GAAD,OAC3C,eAAC,IAAD,CAEA5C,GAAI,CAAE,mCAAoC,CAAEyT,OAAQ,IAFpD,UAIA,cAAC,IAAD,CAAWtS,UAAU,KAAKwU,MAAM,MAAhC,SACE,cAAC,IAAD,CAAqB9W,KAAM+D,EAAKmB,UAAWjF,KAAM,EAAGC,YAAY,EAAMC,SAAS,EAAOC,SAAU,OAElG,cAAC,IAAD,CAAW+D,MAAM,SAASoF,QAAS,EAAnC,2BAGA,cAAC,IAAD,CAAWpF,MAAM,QAAjB,SACE,gCAAQkyB,EAAgBtyB,EAAKwzB,WAAW,GAAM,OAEhD,cAAC,IAAD,CAAWpzB,MAAM,QAAjB,SACGJ,EAAKuzB,SAbH,MAoBL,eAAC,IAAM11B,SAAP,WACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,SAEf,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,SAEf,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,MACX,cAAC,IAAD,UAAW,cAAC,IAAD,6B,qGC5S5B,SAASw2B,EAAQn5B,GAC5B,OACI,eAAC,IAAD,2BAAaA,GAAb,cACI,sBAAMmY,EAAE,iYACR,sBAAMA,EAAE,yWACR,sBAAMA,EAAE,4Y,gCCRpB,0KAAO,IAAM7R,EAAoB8yB,oCACpB/Q,EAAoB+Q,uCACpBzW,EAAqByW,+BACrBrmB,EAAgCqmB,mDAChC7Q,EAAiB,gD,kfC6CW8Q,iBAAO,CAC5CC,cAAI,SACJx1B,oBAAU,UACVA,oBAAU,eACVw1B,cAAI,kBACJA,cAAI,gBAGN,SAASC,EAASv5B,GAChB,IAAQumB,EAAqCvmB,EAArCumB,SAAUjZ,EAA2BtN,EAA3BsN,MAAOpF,EAAoBlI,EAApBkI,MAAUse,EAAnC,YAA6CxmB,EAA7C,GACA,OACE,6CACEw5B,KAAK,WACLC,OAAQnsB,IAAUpF,EAClB4B,GAAE,0BAAqB5B,GACvB,uCAA+BA,IAC3Bse,GALN,aAOGlZ,IAAUpF,GACT,cAAC,IAAD,CAAKhG,GAAI,CAAEqT,EAAG,GAAd,SACE,cAAC,IAAD,UAAagR,SAavB,SAASmT,EAAUxxB,GACjB,MAAO,CACL4B,GAAG,cAAD,OAAgB5B,GAClB,gBAAgB,mBAAhB,OAAoCA,IAInC,IAAMyxB,EAAgB,WAC3B,MAA0Cp4B,mBAAS,MAAnD,mBAAOq4B,EAAP,KAAsBC,EAAtB,KACA,EAA8Ct4B,mBAAS,MAAvD,mBAAOu4B,EAAP,KAAwBC,EAAxB,KACA,EAAgDx4B,mBAAS,MAAzD,mBAAOy4B,EAAP,KAAyBC,EAAzB,KACA,EAAkD14B,mBAAS,MAA3D,mBAAOmqB,EAAP,KAA2BwO,GAA3B,KACA,GAAgC34B,mBAAS,IAAIkL,KAA7C,qBAAOkkB,GAAP,MAAiBwJ,GAAjB,MACA,GAAgCh2B,cAAxBN,GAAR,GAAQA,QACR,IADA,GAAiBO,WACqB7C,mBAAS,OAA/C,qBAAO64B,GAAP,MAAoBC,GAApB,MACA,GAAkC94B,mBAAS,MAA3C,qBAAO+4B,GAAP,MAAkBC,GAAlB,MACA,GAAqCh5B,mBAAS,MAA9C,qBAAOkvB,GAAP,MAAe+J,GAAf,MACA,GAA6B16B,WAAe,GAA5C,qBAAOwN,GAAP,MAAcmtB,GAAd,MACA,GAAmD36B,WAAe,MAAlE,qBAAO46B,GAAP,MAA0BC,GAA1B,MACA,GAAkD76B,YAAe,GAAjE,qBAAO86B,GAAP,MAA0BC,GAA1B,MACQppB,GAAeE,cAAfF,WAER,GAA8B3R,YAAe,GAA7C,qBAAOme,GAAP,MAAgBC,GAAhB,MACA,GAA8Bpe,YAAe,GAA7C,qBAAgBg7B,IAAhB,aACA,GAA0Bv5B,mBAAS,IAAnC,qBA+GMw5B,IA/GN,YA+GmB,uCAAG,kCAAAxzB,EAAA,6DACdd,EAAO,CACXF,OAAQ,0BACR8qB,QAAS,MACTC,OAAQ,CAENztB,GAAQC,UACR,CAAEya,UAAW,+CACb,CAAEyc,SAAU,aAAcC,WAAY,cAExCnxB,GAAI,wCAVc,SAcKzD,MAAMsc,IAAoB,CAC/Cpc,OAAQ,OACRE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBAjBX,cAcZE,EAdY,gBAmBCA,EAASC,OAnBV,cAmBZA,EAnBY,OAoBZ4qB,EAAe5qB,EAAKuM,OAAO5F,MApBf,kBAqBXikB,GArBW,2CAAH,sDAwBb2J,GAAe,uCAAG,kCAAA3zB,EAAA,6DAChBd,EAAO,CACXF,OAAQ,aACR8qB,QAAS,MACTC,OAAQ,CAENztB,GAAQC,WAEVgG,GAAI,wCARgB,SAWCzD,MAAMsc,IAAoB,CAC/Cpc,OAAQ,OACRE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBAdP,cAWhBE,EAXgB,gBAiBHA,EAASC,OAjBN,cAiBhBA,EAjBgB,OAkBhB4qB,EAAe5qB,EAAKuM,OAAO5F,MAlBX,kBAmBfikB,GAnBe,2CAAH,qDAuBf4J,GAAiB,uCAAG,8BAAA5zB,EAAA,sEACDlB,MAAM,iCAAkC,CAC7DE,OAAQ,MAERC,QAAS,CAAE,eAAgB,sBAC1ByM,OAAM,SAACd,GAER,OADAvR,QAAQC,IAAI,0BACL,QAPe,cAClB6F,EADkB,yBAWHA,EAASC,OAXN,cAWhBA,EAXgB,yBAYfA,GAZe,2DAaP,MAbO,0DAAH,qDAiBjBy0B,GAAuB,uCAAG,8BAAA7zB,EAAA,sEACPlB,MAAM,2qKAA2qK,CACtsKE,OAAQ,MAERC,QAAS,CAAE,eAAgB,sBAC1ByM,OAAM,SAACd,GAER,OADAvR,QAAQC,IAAI,0BACL,QAPqB,cACxB6F,EADwB,yBAWTA,EAASC,OAXA,cAWtBA,EAXsB,yBAYrBA,GAZqB,2DAab,MAba,0DAAH,qDAiBvB00B,GAAoB,uCAAG,8BAAA9zB,EAAA,sEACJlB,MAAM,uCAAwC,CACnEE,OAAQ,MAERC,QAAS,CAAE,eAAgB,sBAC1ByM,OAAM,SAACd,GAER,OADAvR,QAAQC,IAAI,0BACL,MAPkB,cACrB6F,EADqB,yBAWNA,EAASC,OAXH,cAWnBA,EAXmB,yBAYlBA,GAZkB,2DAaV,MAbU,0DAAH,qDAgBpB20B,GAAa,uCAAG,gCAAA/zB,EAAA,uEACD,IAAIg0B,KAAoBC,UADvB,cAChBC,EADgB,OAEdC,EAAYD,EAAOE,oBAAoB,gBAAgBC,UAEzDjL,EAAW+K,EAAUG,QAAO,SAAC7zB,EAAKlD,GAEpC,OADAkD,EAAI2E,IAAI7H,EAAKzE,QAASyE,GACfkD,IACN,IAAIyE,KAPa,kBASbkkB,GATa,2CAAH,qDAabmL,GAAW,uCAAG,0FAAAv0B,EAAA,yDACb0W,GADa,wBAGhB6c,IAAW,GACX5c,IAAW,GAJK,SAOkBwT,QAAQC,IAAI,CAACoJ,KAAiBO,OAPhD,0CAOXpO,EAPW,KAOAyD,EAPA,eAWUe,QAAQC,IAAI,CAACyJ,OAXvB,2CAWXW,EAXW,eAcgBrK,QAAQC,IAAI,CAACuJ,KAAmBC,OAdhD,uCAcXa,EAdW,KAcNC,EAdM,KAgBhBhC,EAAoBgC,GACpBpC,EAAiB3M,GACjB6M,EAAmBgC,GACnB5B,GAAYxJ,GAORuL,EAAkB,GAGH,GACbC,EAAQ,+CACM,UAEdC,EAAQ,8CACO,SAEjBC,EAAsB,KACtBC,EAAoB,KAEpBC,EAAY,GAEXN,EAzCW,kCA0CYvK,QAAQC,IAAI,CAAC0J,OA1CzB,qCA0Cba,EA1Ca,OA6CZt7B,QAAQC,IAAI,WA7CA,eAiDXo7B,GAQCA,EAAaO,OAAOC,eAAeN,KACrCE,EAAsBJ,EAAaO,OAAOL,GAAO7uB,OAE/C2uB,EAAaO,OAAOC,eAAeL,KACrCE,EAAoBL,EAAaO,OAAOJ,GAAO9uB,SAVjD+uB,GADAA,EAAsBH,EAAgBQ,MAAK,SAAAL,GAAmB,OAAIA,EAAoBhV,OAAS8U,OAClDE,EAAoBM,MAEjEL,GADAA,EAAoBJ,EAAgBQ,MAAK,SAAAJ,GAAiB,OAAIA,EAAkBjV,OAAS+U,OAChDE,EAAkBK,MAC3DJ,EAAYL,GAWd1B,IAAoB,IAAIrF,MAAQsC,kBAE5BmF,EAAe,GAEnB1P,EAAYA,EAAUllB,KAAI,SAAChC,GAAW,IAAD,UAQtB,EAPTqhB,EAAOrhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKlD,KACtCE,EAAUvhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAYoP,SACrDC,EAAWzV,GAAQsJ,EAAS7jB,IAAIua,GAChCsV,EAASG,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CC,MAAO,EAC/GC,EAAkBJ,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CE,iBAAkB,GAGnIJ,IACF,UAAIA,EAASC,kBAAb,OAAI,EAAqBC,aAOrBT,EAAUjwB,KAAK,CACbjM,QAAS2F,EAAM6M,OACf4S,SAAUzf,EAAMyf,SAChB4B,KAAMA,EACN8V,OAAQL,GAAYA,EAASK,QAAU,UACvC7V,QAASwV,GAAYA,EAASxV,SAAW,GACzCqV,MAAOA,EACPO,eAAgBA,EAChBE,UAAW,MAYnB,KACMp3B,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAY/E,QAAU,GACK,KAAxD1iB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAYhI,UACzCmX,EAAatwB,KAAKtG,GAC1B,MAAMrF,GAAGC,QAAQC,IAAIF,GAIvB,MAAO,CACLN,QAAS2F,EAAM6M,OACf4S,SAAUzf,EAAMyf,SAChB4B,KAAMA,EACN8V,OAAQL,GAAYA,EAASK,QAAU,UACvCH,YAAaF,IAAQ,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAUC,kBAAd,aAAI,EAAsBC,cAAe,GAC9DzV,QAASA,EACToV,MAAOA,GAASA,EAChBrvB,MAAOqvB,GAASA,EAAQpV,EACxB8V,UAAWhW,GAAQsJ,EAAS7jB,IAAIua,GAChC6V,eAAgBA,MAGjB/vB,QAAO,SAACnH,GACT,OAAQA,EAAMuhB,QAAU,GAA2B,IAAnBvhB,EAAMyf,UAA4C,qBAAlBzf,EAAMuhB,WAGpEyU,IACAA,EAAMhK,WAAW,IAAIzM,IAAYyW,EAAK,GAAGvf,UACnC4K,EAAO,+CAITgW,EAAY1M,EAAS7jB,IAAIua,IACnB1hB,KAAO,MAEbm3B,EAAmBnM,EAAS7jB,IAAIua,GAChCsV,EAASG,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CC,MAAO,EAC/GC,EAAkBJ,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CE,iBAAkB,GAEvIhQ,EAAU5gB,KAAK,CACX+a,KAAMA,EACNE,QAASyU,EACTW,QACArvB,MAAOqvB,EAAQX,EACfqB,UAAWA,EACXH,eAAgBA,KAIxBhQ,EAAYA,EAAU/kB,MAAK,SAASZ,EAAGC,GACnC,OAAOA,EAAE8F,MAAQ/F,EAAE+F,SAGvBwtB,IAAW,GAEXT,GAAe,CACbgC,wBAEF9B,GAAa,CACX+B,sBAGFpC,GAAoB,CAChBhN,YAEA0P,iBAzKY,UA4KmBU,YAAkB7rB,GAAY,IAAIlR,YAAUsD,GAAQC,WAAY,CAACy5B,OAAO,QA5K3F,iBA4KRC,EA5KQ,EA4KRA,YAAavzB,EA5KL,EA4KKA,IACrB0wB,GAAsB1wB,GACtB4wB,GAAqB2C,GAMrBtf,IAAW,GApLK,iDAwLd,cAAC,IAAD,CAAMpZ,MAAI,EAACC,GAAI,GAAI8I,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,cAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,CACFqT,EAAG,EACHnI,QAAS,OACTqN,cAAe,SACfvT,UAAW,KANf,SASE,cAAC,IAAD,CAAKhF,GAAI,CAAEqT,EAAE,EAAGnI,QAAS,OAAQK,WAAY,UAA7C,SACE,cAAC,IAAD,aApMM,4CAAH,qDA+MbgwB,GAAiB,EACjBC,GAAkB,EAClBC,GAA4B,EAG1BC,GAAqB,aAI3B,OAAIlS,GAyEF+R,GAAiB/R,EAAmBwB,UAAU2O,QAAO,SAACgC,EAAK73B,GACzD,OAAO63B,EAAM73B,EAAMsH,QAClB,GAYHqwB,IAVAD,GAAkBhS,EAAmBwB,UAAU2O,QAAO,SAACgC,EAAK73B,GAM1D,OAAO63B,EAFa73B,EAAMsH,OAAS,EAAEtH,EAAMk3B,eAAe,OAGzD,IAG2CO,GAAiB,IAEvDA,GAIN,eAAC,WAAD,WACE,cAAC,IAAD,CAAM34B,MAAI,EAACC,GAAI,GAAI8I,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,eAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,GAFN,UAME,eAAC,IAAD,CAAKA,GAAI,CAAEkL,QAAS,OAAQK,WAAY,UAAxC,UACE,cAAC,IAAD,CAAKxI,MAAM,mCAAmC/C,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAApE,SACE,cAAC,IAAD,CAAYC,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,yBAIF,cAAC,IAAD,CAAK9L,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA3B,SACA,eAAC,IAAD,CAAYC,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAEc,GAAI,EAAGgL,SAAU,YAA7E,UACE,cAAC,IAAD,CAAQjM,KAAK,QAAQ5B,QAAQ,OAAOmN,MAAM,UAAUzE,QAASizB,GAAahzB,SAAUmV,GAApF,SACE,cAAC,IAAD,CAAa/b,GAAI,CAACC,SAAS,QAE5B8b,IACC,cAAC,IAAD,CACElc,KAAM,GACNiI,MAAM,UACN9H,GAAI,CACF8L,SAAU,WACV0Y,IAAK,MACLoX,KAAM,MACNC,UAAW,OACXllB,WAAY,kBAOtB,cAAC,IAAD,CAAgBmlB,SAAUtS,EAAmBwB,mBAKnD,cAAC,IAAD,CAAMpoB,MAAI,EAACC,GAAI,GAAI8I,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,eAAC,IAAD,CACEA,MAAM,cADR,UAIA,cAAC,IAAD,CAAK/C,GAAI,CAAEmF,aAAc,EAAG6G,YAAa,WAAzC,SACE,eAAC,IAAD,CAAMZ,MAAOA,GAAOc,SAhkBR,SAACxM,EAAO0M,GAC9BmsB,GAAYnsB,IA+jB6C,aAAW,qBAA1D,UACE,cAAC,IAAD,aAAKykB,KAAM,cAAC,IAAD,IAAe,aAAW,SAAY2G,EAAU,KAC3D,cAAC,IAAD,aAAK3G,KAAM,cAAC,IAAD,IAAa,aAAW,UAAa2G,EAAU,UAG9D,cAACH,EAAD,CAAUjsB,MAAOA,GAAOpF,MAAO,EAA/B,SACE,cAAC,IAAD,CAASiC,MAAM,SAASnE,MAAO,QAASuqB,SAAU,cAAC,IAAD,CAAWpuB,SAAS,SAAWquB,eAAe,EAAMC,OAAQA,GAAQwN,aAAa,GAAGC,YAAY,EAAMxN,UAAW,QAAShF,mBAAoBA,EAAoBiF,SAAUA,GAA9N,SACE,cAAC,IAAD,CAAM/rB,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAAS2C,eAAe,SAAnE,SACE,eAAC,IAAD,CAAMtL,MAAI,EAAV,cACG,cAAC,IAAD,CAAoBitB,OAAQC,WAAWoI,GAAYiC,qBAAqBlW,QAAQ,cAKzF,cAACoT,EAAD,CAAUjsB,MAAOA,GAAOpF,MAAO,EAA/B,SACE,cAAC,IAAD,CAASiC,MAAM,SAASnE,MAAO,MAAOuqB,SAAU,cAAC,IAAD,CAAiBpuB,SAAS,SAAWquB,eAAe,EAAMC,OAAQA,GAAQwN,aAAa,GAAGC,YAAY,EAAtJ,SACE,cAAC,IAAD,CAAMt5B,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAAS2C,eAAe,SAAnE,SACE,eAAC,IAAD,CAAMtL,MAAI,EAAV,cACG,cAAC,IAAD,CAAoBitB,OAAQC,WAAWsI,GAAUgC,mBAAmBnW,QAAQ,eAMhFsX,GAAiB,GAClB,eAAC,WAAD,WACE,cAAC,IAAD,CAASv7B,GAAI,CAACqU,GAAG,KACjB,cAAC,IAAD,CAAKrU,GAAI,CAACqU,GAAG,GAAb,SACE,eAAC,IAAD,CAASpM,MAAM,SAASomB,SAAS,UAAUC,eAAe,EAAOyN,aAAa,GAAGC,YAAY,EAA7F,cACG,cAAC,IAAD,CAAoBnM,OAAQ0L,GAAetX,QAAQ,KACnDuX,GAAkB,EACjB,mCACE,cAAC,IAAD,CAAYv9B,QAAQ,YAAY+B,GAAI,CAAEgb,KAAM,EAAGlT,MAAM,OAAQ2Q,UAAU,UAAvE,SACI,cAAC,IAAD,CAASxQ,MAAK,sBAAiBuzB,GAAgBvX,QAAQ,IAAvD,SACE,cAAC,IAAD,CAAMnc,MAAM,QAAQm0B,WAAY,cAAC,IAAD,IAAuBC,SAAUR,GAAoB3wB,MAAK,UAAK0wB,GAA0BxX,QAAQ,GAAvC,KAA8CpkB,KAAK,QAAQ5B,QAAQ,mBAKrK,mCACE,cAAC,IAAD,CAAY6J,MAAM,iBAAiB7J,QAAQ,YAAY+B,GAAI,CAAEgb,KAAM,EAAGvC,UAAU,UAAhF,SACE,cAAC,IAAD,CAASxQ,MAAK,sBAAiBuzB,GAAgBvX,QAAQ,IAAvD,SACE,cAAC,IAAD,CAAMnc,MAAM,UAAUm0B,WAAY,cAAC,IAAD,IAAqBC,SAAUR,GAAoB3wB,MAAK,UAAK0wB,GAA0BxX,QAAQ,GAAvC,KAA8CpkB,KAAK,QAAQ5B,QAAQ,wBAQzK,cAAC,IAAD,CAASgK,MAAM,GAAGomB,SAAS,GAAGC,eAAe,EAAOyN,aAAa,GAAGC,YAAY,EAAhF,SACMxS,EAAmBkR,cAAgBlR,EAAmBkR,aAAat8B,OAAS,GAC1E,cAAC,IAAD,CAAMwE,MAAI,EAAC5C,GAAI,CAACyY,UAAU,UAA1B,SACI,eAAC,IAAD,CACEtX,UAAU,IAAIN,KAAI,gDAAoCc,SAApC,IAAoCA,QAApC,EAAoCA,GAASC,WAAaR,OAAO,SACnFnD,QAAQ,WACRgK,MAAM,kBACNpI,KAAK,QAJP,UAOI64B,IAAqBF,GACrB,cAAC,IAAD,CAAQx4B,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIrC,GAAG,GAAKuH,IAAI,UAAUC,IAAK8wB,KAEhE,cAAC,IAAD,CAAmBx4B,GAAI,CAACE,GAAG,KAG5BspB,EAAmBkR,aAAat8B,OAbnC,IAa4CorB,EAAmBkR,aAAat8B,OAAS,EAAI,eAAiB,+BAoBhI,cAAC,IAAD,CAAWorB,mBAAoBA,EAAoBiF,SAAUA,GAAUiJ,cAAeA,EAAeE,gBAAiBA,EAAiBE,iBAAkBA,SAjOzJn2B,GAAQC,WACVg4B,KAEA,eAAC,WAAD,WACE,cAAC,IAAD,CAAMh3B,MAAI,EAACC,GAAI,GAAI8I,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,cAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,CACFqT,EAAG,EACHnI,QAAS,OACTqN,cAAe,SACfvT,UAAW,KANf,SASE,eAAC,IAAD,CAAKhF,GAAI,CAAEqT,EAAE,EAAG7S,MAAO,QAAvB,UACE,cAAC,IAAD,CACE27B,UAAU,OACV37B,MAAM,QAER,cAAC,IAAD,CACE27B,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,KACZ,cAAC,IAAD,CACE8nB,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,KACZ,cAAC,IAAD,CACE8nB,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,cAKpB,cAAC,IAAD,CAAMzR,MAAI,EAACC,GAAI,GAAI8I,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,cAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,CACFqT,EAAG,EACHnI,QAAS,OACTqN,cAAe,SACfvT,UAAW,KANf,SASE,eAAC,IAAD,CAAKhF,GAAI,CAAEqT,EAAE,EAAG7S,MAAO,QAAvB,UACE,cAAC,IAAD,CACE27B,UAAU,OACV37B,MAAM,QACR,cAAC,IAAD,CACE27B,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,KACZ,cAAC,IAAD,CACE8nB,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,KACZ,cAAC,IAAD,CACE8nB,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,qB,sKC3lBtB+nB,EAAoB,gBAQpBC,EAAe,IAAInM,IAAQ,MAE3BoM,EAAar4B,KAAKkkB,MAAMoU,aAAaC,QAAQJ,IAG/CK,EAAU,SAAC96B,EAAkB+6B,GAC/B,OAAmB,OAAfA,GACFH,aAAaI,WAAWP,GACjBC,GAGF,2BAAK16B,GAAY+6B,IASbE,EAAiBvM,wBAA8B,IAC/CpuB,EAAa,kBAAMsuB,qBAAWqM,IAG9BC,EAA4B,SAAC,GAAkB,IAAhBxY,EAAe,EAAfA,SAC1C,EAA8ByY,qBAAWL,EAASH,GAAcD,GAAhE,mBAAO16B,EAAP,KAAgBO,EAAhB,KAMA,OAJAG,qBAAU,WACRk6B,aAAaQ,QAAQX,EAAmBn4B,KAAKC,UAAUvC,MACtD,CAACA,IAGF,cAACi7B,EAAe3K,SAAhB,CAAyB7mB,MAAO,CAAEzJ,UAASO,cAA3C,SACGmiB,M,oTCPkC8S,iBAAO,CAC5CC,cAAI,SACJx1B,oBAAU,UACVA,oBAAU,eACVw1B,cAAI,kBACJA,cAAI,gBAmCD,IAAM4F,EAAiB,WAC5B,MAA0C39B,mBAAS,MAAnD,mBAAsBs4B,GAAtB,WACA,EAA8Ct4B,mBAAS,MAAvD,mBAAwBw4B,GAAxB,WACA,EAAgDx4B,mBAAS,MAAzD,mBAAyB04B,GAAzB,WACA,EAAkD14B,mBAAS,MAA3D,mBAAOmqB,EAAP,KAA2BwO,EAA3B,KACA,EAAgC34B,mBAAS,IAAIkL,KAA7C,mBAAiB0tB,GAAjB,WACA,EAAgCh2B,cAAxBN,EAAR,EAAQA,QACR,GADA,EAAiBO,WACqB7C,mBAAS,OAA/C,mBAAoB84B,GAApB,WACA,EAAkC94B,mBAAS,MAA3C,mBAAkBg5B,GAAlB,WACA,EAAqCh5B,mBAAS,MAA9C,mBAAei5B,GAAf,WACA,EAA6B16B,WAAe,GAA5C,mBAEA,GAFA,UAE8BA,YAAe,IAA7C,mBAAOme,EAAP,KAAgBC,EAAhB,KACA,EAA8Bpe,YAAe,GAA7C,mBAAgBg7B,GAAhB,WACA,GAA0Bv5B,mBAAS,IAAnC,qBA+GMw5B,IA/GN,YA+GmB,uCAAG,kCAAAxzB,EAAA,6DACdd,EAAO,CACXF,OAAQ,0BACR8qB,QAAS,MACTC,OAAQ,CAENztB,EAAQC,UACR,CAAEya,UAAW,+CACb,CAAEyc,SAAU,aAAcC,WAAY,cAExCnxB,GAAI,wCAVc,SAcKzD,MAAMsc,IAAoB,CAC/Cpc,OAAQ,OACRE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBAjBX,cAcZE,EAdY,gBAmBCA,EAASC,OAnBV,cAmBZA,EAnBY,OAoBZ4qB,EAAe5qB,EAAKuM,OAAO5F,MApBf,kBAqBXikB,GArBW,2CAAH,sDAoCb2J,GAAe,uCAAG,kCAAA3zB,EAAA,6DAChBd,EAAO,CACXF,OAAQ,aACR8qB,QAAS,MACTC,OAAQ,CAENztB,EAAQC,WAEVgG,GAAI,wCARgB,SAWCzD,MAAMsc,IAAoB,CAC/Cpc,OAAQ,OACRE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBAdP,cAWhBE,EAXgB,gBAiBHA,EAASC,OAjBN,cAiBhBA,EAjBgB,OAkBhB4qB,EAAe5qB,EAAKuM,OAAO5F,MAlBX,kBAmBfikB,GAnBe,2CAAH,qDAuBf4J,GAAiB,uCAAG,8BAAA5zB,EAAA,sEACDlB,MAAM,iCAAkC,CAC7DE,OAAQ,MAERC,QAAS,CAAE,eAAgB,sBAC1ByM,OAAM,SAACd,GAER,OADAvR,QAAQC,IAAI,0BACL,QAPe,cAClB6F,EADkB,yBAWHA,EAASC,OAXN,cAWhBA,EAXgB,yBAYfA,GAZe,2DAaP,MAbO,0DAAH,qDAiBjBy0B,GAAuB,uCAAG,8BAAA7zB,EAAA,sEACPlB,MAAM,2qKAA2qK,CACtsKE,OAAQ,MAERC,QAAS,CAAE,eAAgB,sBAC1ByM,OAAM,SAACd,GAER,OADAvR,QAAQC,IAAI,0BACL,QAPqB,cACxB6F,EADwB,yBAWTA,EAASC,OAXA,cAWtBA,EAXsB,yBAYrBA,GAZqB,2DAab,MAba,0DAAH,qDAiBvB00B,GAAoB,uCAAG,8BAAA9zB,EAAA,sEACJlB,MAAM,uCAAwC,CACnEE,OAAQ,MAERC,QAAS,CAAE,eAAgB,sBAC1ByM,OAAM,SAACd,GAER,OADAvR,QAAQC,IAAI,0BACL,MAPkB,cACrB6F,EADqB,yBAWNA,EAASC,OAXH,cAWnBA,EAXmB,yBAYlBA,GAZkB,2DAaV,MAbU,0DAAH,qDAgBpB20B,GAAa,uCAAG,gCAAA/zB,EAAA,uEACD,IAAIg0B,KAAoBC,UADvB,cAChBC,EADgB,OAEdC,EAAYD,EAAOE,oBAAoB,gBAAgBC,UAEzDjL,EAAW+K,EAAUG,QAAO,SAAC7zB,EAAKlD,GAEpC,OADAkD,EAAI2E,IAAI7H,EAAKzE,QAASyE,GACfkD,IACN,IAAIyE,KAPa,kBASbkkB,GATa,2CAAH,qDAabmL,GAAW,uCAAG,oFAAAv0B,EAAA,yDACb0W,EADa,wBAGhB6c,GAAW,GACX5c,GAAW,GAJK,SAOkBwT,QAAQC,IAAI,CAACoJ,KAAiBO,OAPhD,0CAOXpO,EAPW,KAOAyD,EAPA,eAWUe,QAAQC,IAAI,CAACyJ,OAXvB,2CAWXW,EAXW,eAcgBrK,QAAQC,IAAI,CAACuJ,KAAmBC,OAdhD,uCAcXa,EAdW,KAcNC,EAdM,KAgBhBhC,EAAoBgC,GACpBpC,EAAiB3M,GACjB6M,EAAmBgC,GACnB5B,EAAYxJ,GAORuL,EAAkB,GAGH,GACbC,EAAQ,+CACM,UAEdC,EAAQ,8CACO,SAEjBC,EAAsB,KACtBC,EAAoB,KAEpBC,EAAY,GAEXN,EAzCW,kCA0CYvK,QAAQC,IAAI,CAAC0J,OA1CzB,qCA0Cba,EA1Ca,OAiDZt7B,QAAQC,IAAI,WAjDA,QAqDXo7B,GAQCA,EAAaO,OAAOC,eAAeN,KACrCE,EAAsBJ,EAAaO,OAAOL,GAAO7uB,OAE/C2uB,EAAaO,OAAOC,eAAeL,KACrCE,EAAoBL,EAAaO,OAAOJ,GAAO9uB,SAVjD+uB,GADAA,EAAsBH,EAAgBQ,MAAK,SAAAL,GAAmB,OAAIA,EAAoBhV,OAAS8U,OAClDE,EAAoBM,MAEjEL,GADAA,EAAoBJ,EAAgBQ,MAAK,SAAAJ,GAAiB,OAAIA,EAAkBjV,OAAS+U,OAChDE,EAAkBK,MAC3DJ,EAAYL,GAWd1B,GAAoB,IAAIrF,MAAQsC,kBAE5BmF,EAAe,GASnB1P,EAAYA,EAAUllB,KAAI,SAAChC,GAAW,IAAD,UAStB,EARTqhB,EAAOrhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKlD,KACtCE,EAAUvhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAYoP,SACrDC,EAAWzV,GAAQsJ,EAAS7jB,IAAIua,GAChCsV,EAASG,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CC,MAAO,EAC/GC,EAAkBJ,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CE,iBAAkB,GAInIJ,IACF,UAAIA,EAASC,kBAAb,OAAI,EAAqBC,aAOrBT,EAAUjwB,KAAK,CACb+a,KAAMA,EACN8V,OAAQL,GAAYA,EAASK,QAAU,UACvC7V,QAASwV,GAAYA,EAASxV,SAAW,GACzCqV,MAAOA,EACPO,eAAgBA,EAChBE,UAAW,MAYnB,IAC2D,IAArDp3B,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAY/E,QACc,IAAvD1iB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAYhI,UACzCmX,EAAatwB,KAAKtG,GAC1B,MAAMrF,GAAGC,QAAQC,IAAIF,GAGvB,MAAO,CACL0mB,KAAMA,EACN8V,OAAQL,GAAYA,EAASK,QAAU,UACvCH,YAAaF,IAAQ,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAUC,kBAAd,aAAI,EAAsBC,cAAe,GAC9DzV,QAASA,EACToV,MAAOA,GAASA,EAChBrvB,MAAOqvB,GAASA,EAAQpV,EACxB8V,UAAWhW,GAAQsJ,EAAS7jB,IAAIua,GAChC6V,eAAgBA,MAGjB/vB,QAAO,SAACnH,GACT,OAAQA,EAAMuhB,QAAU,GAAOvhB,EAAM22B,MAAQ,GAA+B,qBAAlB32B,EAAMuhB,WAG9DyU,IACAA,EAAMhK,WAAW,IAAIzM,IAAYyW,EAAK,GAAGvf,UACnC4K,EAAO,+CAITgW,EAAY1M,EAAS7jB,IAAIua,IACnB1hB,KAAO,MAEbm3B,EAAmBnM,EAAS7jB,IAAIua,GAChCsV,EAASG,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CC,MAAO,EAC/GC,EAAkBJ,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CE,iBAAkB,GAEvIhQ,EAAU5gB,KAAK,CACX+a,KAAMA,EACNE,QAASyU,EACTW,QACArvB,MAAOqvB,EAAQX,EACfqB,UAAWA,EACXH,eAAgBA,KAIxBhQ,EAAYA,EAAU/kB,MAAK,SAASZ,EAAGC,GACnC,OAAOA,EAAE8F,MAAQ/F,EAAE+F,SAIvBwtB,GAAW,GAEXT,EAAe,CACbgC,wBAEF9B,EAAa,CACX+B,sBAGFpC,EAAoB,CAChBhN,YAEA0P,iBAOJ1e,GAAW,GAxLK,iDA4Ld,cAAC,IAAD,CAAMpZ,MAAI,EAACC,GAAI,GAAI8I,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,cAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,CACFqT,EAAG,EACHnI,QAAS,OACTqN,cAAe,SACfvT,UAAW,KANf,SASE,cAAC,IAAD,CAAKhF,GAAI,CAAEqT,EAAE,EAAGnI,QAAS,OAAQK,WAAY,UAA7C,SACE,cAAC,IAAD,aAxMM,4CAAH,qDAmNbgwB,GAAiB,EASrB,OAAI/R,GAyCF+R,GAAiB/R,EAAmBwB,UAAU2O,QAAO,SAACgC,EAAK73B,GACzD,OAAO63B,EAAM73B,EAAMsH,QAClB,GAEeoe,EAAmBwB,UAAU2O,QAAO,SAACgC,EAAK73B,GAM1D,OAAO63B,EAFa73B,EAAMsH,OAAS,EAAEtH,EAAMk3B,eAAe,OAGzD,GAG2CO,GAAiB,IAEvDA,GAIN,cAAC,WAAD,UACE,cAAC,IAAD,CAAM34B,MAAI,EAACC,GAAI,GAAI8I,GAAI,GAAIC,GAAI,GAA/B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,eAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,GAFN,UAME,eAAC,IAAD,CAAKA,GAAI,CAAEkL,QAAS,OAAQK,WAAY,UAAxC,UACE,cAAC,IAAD,CAAKxI,MAAM,mCAAmC/C,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAApE,SACE,cAAC,IAAD,CAAYC,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,wBAIF,cAAC,IAAD,CAAK9L,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA3B,SACA,eAAC,IAAD,CAAYC,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAEc,GAAI,EAAGgL,SAAU,YAA7E,UACE,cAAC,IAAD,CAAQjM,KAAK,QAAQ5B,QAAQ,OAAOmN,MAAM,UAAUzE,QAASizB,GAAahzB,SAAUmV,EAApF,SACE,cAAC,IAAD,CAAa/b,GAAI,CAACC,SAAS,QAE5B8b,GACC,cAAC,IAAD,CACElc,KAAM,GACNiI,MAAM,UACN9H,GAAI,CACF8L,SAAU,WACV0Y,IAAK,MACLoX,KAAM,MACNC,UAAW,OACXllB,WAAY,kBAOtB,cAAC,IAAD,CAAiBmlB,SAAUtS,EAAmBwB,uBA/FpDrpB,EAAQC,WACVg4B,KAEA,cAAC,WAAD,UACE,cAAC,IAAD,CAAMh3B,MAAI,EAACC,GAAI,GAAI8I,GAAI,GAAIC,GAAI,GAA/B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,cAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,CACFqT,EAAG,EACHnI,QAAS,OACTqN,cAAe,SACfvT,UAAW,KANf,SASE,eAAC,IAAD,CAAKhF,GAAI,CAAEqT,EAAE,EAAG7S,MAAO,QAAvB,UACE,cAAC,IAAD,CACE27B,UAAU,OACV37B,MAAM,QAER,cAAC,IAAD,CACE27B,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,KACZ,cAAC,IAAD,CACE8nB,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,KACZ,cAAC,IAAD,CACE8nB,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,oB,iWClhBpB4oB,EAAiC9F,iBAAO,CAC5CC,cAAI,SACJx1B,oBAAU,UACVA,oBAAU,eACVw1B,cAAI,kBACJA,cAAI,gBAmCD,IAAM8F,EAAY,SAACp/B,GACxB,MAA0CuB,mBAASvB,EAAM45B,eAAzD,mBAAOA,EAAP,KACA,GADA,KAC8Cr4B,mBAASvB,EAAM85B,kBAA7D,mBAAOA,EAAP,KACA,GADA,KACgDv4B,mBAASvB,EAAMg6B,mBAA/D,mBAAOA,EAAP,KAEA,GAFA,KAEkDz4B,mBAASvB,EAAMq/B,qBAAjE,mBAAO3T,EAAP,KAA2BwO,EAA3B,KACA,EAAwC34B,mBAASvB,EAAM2wB,UAAvD,mBAAO2O,EAAP,KACA,GADA,KACgCn7B,eAAxBN,EAAR,EAAQA,QACR,GADA,EAAiBO,WACatE,YAAe,IAA7C,mBAAOme,EAAP,KAAgBC,EAAhB,KAWMqhB,EAAkB,uCAAG,kCAAAh4B,EAAA,6DACnBd,EAAO,CACTF,OAAQ,qBAER8qB,QAAS,MACTC,OAAQ,CACJ,+CAIA,CAAC,WAAa,YAAY,QAAU,CAAC,CAAC,OAAS,CAAC,OAAS,GAAG,MAAQztB,EAAQC,aAAa,SAAW,WAGxGgG,GAAI,wCAbiB,SAiBAzD,MAAMsc,IAAoB,CAC7Cpc,OAAQ,OACVE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBApBN,cAiBjBE,EAjBiB,gBAuBJA,EAASC,OAvBL,cAuBjBA,EAvBiB,OAwBnB64B,EAAU74B,EAAKuM,OAAOlL,KAAI,gBAAG6K,EAAH,EAAGA,OAAH,IAAWsM,QAAW5Z,EAAtB,EAAsBA,KAAMk6B,EAA5B,EAA4BA,WAAYC,EAAxC,EAAwCA,MAAOjW,EAA/C,EAA+CA,SAA/C,MAAiE,CAC7F3lB,UAAW,IAAIvD,YAAUsS,GACzBsX,YAAa,CACX5kB,KAAMukB,EAAOC,KAAKxkB,EAAK,GAAI,UAC3Bk6B,aACAC,MAAO,IAAIn/B,YAAUm/B,GACrBjW,gBA9BmB,kBAiCd+V,GAjCc,2CAAH,qDA0ElBG,EAAiB,uCAAG,8BAAAp4B,EAAA,sEACDlB,MAAM,+BAAgC,CACzDE,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBAHP,cAClBE,EADkB,gBAMLA,EAASC,OANJ,cAMlBA,EANkB,yBAOjBA,GAPiB,2CAAH,qDAUjBi5B,EAAwB,uCAAG,8BAAAr4B,EAAA,sEAGRlB,MAAM,+BAAgC,CACzDE,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBALA,cAGzBE,EAHyB,gBAQZA,EAASC,OARG,cAQzBA,EARyB,yBASxBA,GATwB,2CAAH,qDAqCxBu0B,EAAe,uCAAG,kCAAA3zB,EAAA,6DAChBd,EAAO,CACXF,OAAQ,aACR8qB,QAAS,MACTC,OAAQ,CAENztB,EAAQC,WAEVgG,GAAI,wCARgB,SAWCzD,MAAMsc,IAAoB,CAE/Cpc,OAAQ,OACRE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBAfP,cAWhBE,EAXgB,gBAkBHA,EAASC,OAlBN,cAkBhBA,EAlBgB,OAmBhB4qB,EAAe5qB,EAAKuM,OAAO5F,MAnBX,kBAoBfikB,GApBe,2CAAH,qDA0Df8J,EAAoB,uCAAG,8BAAA9zB,EAAA,sEACJlB,MAAM,uCAAwC,CACnEE,OAAQ,MAERC,QAAS,CAAE,eAAgB,sBAC1ByM,OAAM,SAACd,GAER,OADAvR,QAAQC,IAAI,0BACL,MAPkB,cACrB6F,EADqB,yBAWNA,EAASC,OAXH,cAWnBA,EAXmB,yBAYlBA,GAZkB,2DAaV,MAbU,0DAAH,qDA6BpBm1B,EAAW,uCAAG,oDAAAv0B,EAAA,yDACb0W,EADa,wBAGhBC,GAAW,GAEPgP,EAAY0M,EACZmC,EAAcjC,EACdmC,EAAejC,EACfrJ,EAAW2O,EARC,SASiD5N,QAAQC,IAAI,CAAC4N,IAAsBrE,IAAmB0E,IAA4BD,MATnI,sCASXE,EATW,eASuBC,EATvB,KAeM,GAGlBC,EAAe,GAEfxD,EAAY,GAEXN,EAtBW,kCAuBYvK,QAAQC,IAAI,CAAC0J,MAvBzB,0CA8BZz6B,QAAQC,IAAI,WA9BA,QAkMhBqsB,GA1JAA,EAAYA,EAAUllB,KAAI,SAAChC,GAAW,IAAD,UAStB,EARTqhB,EAAOrhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKlD,KACtCE,EAAUvhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAYoP,SACrDC,EAAWzV,GAAQsJ,EAAS7jB,IAAIua,GAChCsV,EAASG,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CC,MAAO,EAC/GC,EAAkBJ,IAAQ,UAAIA,EAASC,kBAAb,aAAI,EAAqBC,eAAlC,UAAkDjB,EAAYe,EAASC,WAAWC,oBAAlF,aAAkD,EAA8CE,iBAAkB,GAInIJ,IACF,UAAIA,EAASC,kBAAb,OAAI,EAAqBC,aAOrBT,EAAUjwB,KAAK,CACb+a,KAAMA,EACN8V,OAAQL,GAAYA,EAASK,QAAU,UACvC7V,QAASwV,GAAYA,EAASxV,SAAW,GACzCqV,MAAOA,EACPO,eAAgBA,EAChBE,UAAW,MAoHnB,OA5GK7V,EAAU,GAC8C,IAAvDvhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAYhI,UAE/C8Q,OAAO5M,KAAKsS,EAAa+D,OAAOtzB,SAAQ,SAASyH,GAAM,IAAD,IACE,EAAtD,aAAI8nB,EAAa+D,MAAM7rB,GAAK8rB,kBAA5B,OAAI,EAAoCC,eACtC,IAAI,UAAAjE,EAAa+D,MAAM7rB,GAAK8rB,kBAAxB,eAAoCC,gBAAiBl6B,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKlD,KAAK,CAAC,IAAD,MAKvF8Y,EAAS,GAEblE,EAAa+D,MAAM7rB,GAAKisB,GAAGD,OAAOn4B,KAAI,SAACq4B,GACrC,IAAIC,EAAYD,EAAMhZ,MAAQsJ,EAAS7jB,IAAIuzB,EAAMhZ,MACjD8Y,EAAO7zB,KAAK,CACV3G,KAAM26B,GAAaA,EAAUnD,QAAU,UACvCv3B,KAAM06B,GAAaA,EAAUhZ,SAAW,QAK5CyY,EAAazzB,KAAK,CAChBib,QAASA,EACTgZ,cAAe,EACflD,UAAW,KACXmD,QAAS,EACTC,KAAK,UAAAxE,EAAa+D,MAAM7rB,UAAnB,eAAyBssB,MAAO,GACrCnzB,MAAOia,KAAS,UAAC0U,EAAa+D,MAAM7rB,UAApB,iBAAC,EAAyBisB,UAA1B,aAAC,EAA6BzD,QAAS,GACvD+D,SAAUP,EACVQ,SAvBmB,gBAwBnBC,WAAY56B,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKlD,KAC3CwZ,WAAY,KACZC,YAzBuB,qIA0BvBC,kBAAmB,UAKlB,aAAI9E,EAAa+D,MAAM7rB,GAAKisB,UAA5B,OAAI,EAA4B/Y,KAAK,CAAC,IAAD,EAWkC,EAA5E,IAAI,UAAA4U,EAAa+D,MAAM7rB,GAAKisB,UAAxB,eAA4B/Y,OAAQrhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKlD,KAIrE,GAAyC,YAArC,UAAA4U,EAAa+D,MAAM7rB,UAAnB,eAAyB6sB,gBACtB,GAAwC,WAApC/E,EAAa+D,MAAM7rB,GAAK6sB,SAAsB,CAAC,IAAD,EAEvDpgC,QAAQC,IAAI,cAAcsF,KAAKC,UAAU61B,EAAa+D,MAAM7rB,KAE5D,IAIIgsB,EAAS,GACblE,EAAa+D,MAAM7rB,GAAKisB,GAAGD,OAAOn4B,KAAI,SAACq4B,GACrC,IAAIC,EAAYD,EAAMhZ,MAAQsJ,EAAS7jB,IAAIuzB,EAAMhZ,MACjD8Y,EAAO7zB,KAAK,CACV3G,KAAM26B,GAAaA,EAAUnD,QAAU,UACvCv3B,KAAM06B,GAAaA,EAAUhZ,SAAW,QAI5C,IACI2Z,EAAI,EACR,UAAIhF,EAAa+D,MAAM7rB,UAAvB,OAAI,EAAyB+sB,cAC3BjF,EAAa+D,MAAM7rB,GAAK+sB,aAAal5B,KAAI,SAACm5B,GACpCF,EAAE,GACM,IACFhF,EAAaR,OAAO0F,EAAO9Z,MAAM8V,OAC3C8D,OAIM,GAALA,GAAUhF,EAAa+D,MAAM7rB,GAAKisB,GAAG9yB,WA0B7C,CACL+Z,KAAMA,EACN8V,OAAQL,GAAYA,EAASK,QAAU,UACvCH,YAAaF,IAAQ,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAUC,kBAAd,aAAI,EAAsBC,cAAe,GAC9DzV,QAASA,EACToV,MAAOA,GAASA,EAChBrvB,MAAOqvB,GAASA,EAAQpV,EACxB8V,UAAWhW,GAAQsJ,EAAS7jB,IAAIua,GAChC6V,eAAgBA,MAGjB/vB,QAAO,SAACnH,GACT,OAAQA,EAAMuhB,QAAU,GAAOvhB,EAAM22B,MAAQ,GAA+B,qBAAlB32B,EAAMuhB,YAG5Cpf,MAAK,SAASZ,EAAGC,GACnC,OAAOA,EAAE8F,MAAQ/F,EAAE+F,SAGvBuyB,EAASA,EAAO73B,KAAI,SAACo5B,GACjB,IAAQ77B,EAAS67B,EAAiBjX,YAA1B5kB,KACF87B,EAAgBlC,EAA+B7I,OAAO/wB,GACtD+7B,EAASD,EAAcC,OAAOxuB,WAE9ByuB,GADcF,EAAcG,YAAY1uB,WACjC2uB,YAAgBH,IAI7B,IAAIC,EACF,MAAO,CACLha,QAAS,GAIb,IAGMma,EAAO5B,EAAiBpD,MAAK,SAAAgF,GACjC,OAAOA,EAAK/7B,OAAS47B,EAAK57B,QAIxBg8B,GAAS,EADGJ,EAAKnB,GAAGwB,KAAKnc,SAGzB8B,EAAU,IAAI3B,KAAWyb,EAAcQ,gBAC3Cta,EAAUA,EAAQua,UAAUH,GAE5B,IAAIpB,EAAgB,IAAI3a,KAAWyb,EAAcU,YACjDxB,EAAgBA,EAAcuB,UAAUH,GAExC,IAAIK,EAAiB,IAAIzc,IAAY8b,EAAcQ,eAAe5T,WAAY,GAC9E+T,EAAiBhQ,WAAWgQ,EAAevlB,UAE3C,IAAIwlB,EAAuB,IAAI1c,IAAY8b,EAAcU,WAAW9T,WAAY,GAChFgU,EAAuBjQ,WAAWiQ,EAAqBxlB,UAMvD,IAAIylB,EAAYR,EAAK/E,MAAQpV,EACzB4a,EAAU,EAEVhC,EAAS,GAqBb,OAnBA5J,OAAO5M,KAAKsS,EAAa+D,OAAOtzB,SAAQ,SAASyH,GAAM,IAAD,EACf,EACY,MADjD,UAAI8nB,EAAa+D,MAAM7rB,UAAvB,OAAI,EAAyB9T,WACvB,UAAA47B,EAAa+D,MAAM7rB,UAAnB,eAAyB9T,UAAWihC,IAEtCrF,EAAa+D,MAAM7rB,GAAKisB,GAAGD,OAAOn4B,KAAI,SAACq4B,GACrC,IAAIC,EAAYD,EAAMhZ,MAAQsJ,EAAS7jB,IAAIuzB,EAAMhZ,MACjD8Y,EAAO7zB,KAAK,CACV3G,KAAM26B,GAAaA,EAAUnD,QAAU,UACvCv3B,KAAM06B,GAAaA,EAAUhZ,SAAW,QAI5C4a,EAAY3a,KAAS,UAAC0U,EAAa+D,MAAM7rB,UAApB,iBAAC,EAAyBisB,UAA1B,aAAC,EAA6BzD,QAAS,GAC5DwF,GAAU,UAAAlG,EAAa+D,MAAM7rB,UAAnB,eAAyBssB,MAAO,OAMzC,CACHlZ,UACAgZ,gBACAlD,UAAW,KACXmD,QAAUkB,EAAK/E,MACfrvB,MAAQ40B,EACRxB,SAAUP,EACVM,IAAK0B,EACLxB,SA1DiB,UA2DjBC,WAAYU,EACZT,WAAYt7B,EACZu7B,YA5DqB,+BA6DrBC,kBAAmB,MAExB5zB,QAAO,SAACnH,GACP,OAAOA,EAAMuhB,QAAU,KAGV,MAAhBwY,IACC,EAAAF,GAAOvzB,KAAP,QAAeyzB,GAGjB7F,EAAoB,CAChB2F,WAOJ3hB,GAAW,GArSK,iDAySd,cAAC,IAAD,CAAMpZ,MAAI,EAACC,GAAI,GAAI8I,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,cAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,CACFqT,EAAG,EACHnI,QAAS,OACTqN,cAAe,SACfvT,UAAW,KANf,SASE,cAAC,IAAD,CAAKhF,GAAI,CAAEkL,QAAS,OAAQK,WAAY,UAAxC,SACE,cAAC,IAAD,aArTM,4CAAH,qDAyUjB,OAAIie,GATiB,EAsCLA,EAAmBmU,OAAOhE,QAAO,SAACgC,EAAK73B,GACjD,OAAO63B,EAAM73B,EAAMsH,QACpB,GAMD,cAAC,WAAD,UAEIoe,EAAmBmU,QAAUnU,EAAmBmU,OAAOv/B,OACzD,cAAC,WAAD,UAmBE,cAAC,IAAD,CAAMwE,MAAI,EAACC,GAAI,GAAI8I,GAAI,GAAIC,GAAI,GAA/B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,eAAC,IAAD,CAAKA,MAAM,cAAX,UACE,cAAC,IAAD,CAAK/C,GAAI,CAAEkL,QAAS,OAAQK,WAAY,UAAxC,SACE,cAAC,IAAD,CAAKxI,MAAM,mCAAmC/C,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAApE,SACE,cAAC,IAAD,CAAYC,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,+BAKJ,cAAC,IAAD,CAAYgwB,SAAUtS,EAAmBmU,OAAQuC,QAAQ,aAI7C,4BAvEpBv+B,EAAQC,WACVg4B,IAEA,cAAC,WAAD,UACE,cAAC,IAAD,CAAMh3B,MAAI,EAACC,GAAI,GAAI8I,GAAI,GAAIC,GAAI,GAA/B,SACE,cAAC,IAAD,CAAO7I,MAAM,yBAAb,SACE,cAAC,IAAD,CACEA,MAAM,cACN/C,GAAI,CACFqT,EAAG,EACHnI,QAAS,OACTqN,cAAe,UALnB,SAQE,cAAC,IAAD,CAAKvY,GAAI,CAAEQ,MAAO,OAAQ6S,EAAE,GAA5B,SACE,cAAC,IAAD,CACE8oB,UAAU,OACV37B,MAAM,OACNR,GAAI,CAAEqU,GAAI,mB,kYC3nBtB1P,EAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAC9C,uBAAwB,CACpBK,aAAc,wCAIhBg7B,EAAQv7B,YAAO,QAAPA,CAAgB,CAC1BsG,QAAS,SAGN,SAASk1B,EAAatiC,GACzB,MAA8BF,IAAMyB,UAAS,GAA7C,mBAAO0c,EAAP,KAAgBC,EAAhB,KACMiK,EAAiB,IAAIC,aAAWC,KAC9B5W,EAAeE,cAAfF,WACR,EAA+C7N,cAAvCE,EAAR,EAAQA,UAAmBuN,GAA3B,EAAmBtN,OAAnB,EAA2BsN,iBAE3B,EAA8BvR,IAAMyB,SAAS,IAA7C,mBAAOoO,EAAP,KAAgB4yB,EAAhB,KACA,EAAwBziC,IAAMyB,SAAS,IAAvC,mBAAOgE,EAAP,KAAai9B,EAAb,KACA,EAAgC1iC,IAAMyB,SAAS,MAA/C,mBAAO0mB,EAAP,KAAiBC,EAAjB,KACA,EAAwDpoB,IAAMyB,SAAS,MAAvE,mBAAOkhC,GAAP,KAA6BC,GAA7B,KACA,GAAoD5iC,IAAMyB,SAAS,GAAnE,qBAAOohC,GAAP,MAA2BC,GAA3B,MACA,GAA4D9iC,IAAMyB,SAAS,GAA3E,qBAA+BshC,IAA/B,aAEA,GAA2C7wB,cAAnCD,GAAR,GAAQA,gBAAiBuW,GAAzB,GAAyBA,cACTpW,uBACZ,SAACC,GACGJ,GAAgBI,EAAM5P,QAAN,UAAmB4P,EAAMxM,KAAzB,aAAkCwM,EAAM5P,SAAY4P,EAAMxM,KAAM,CAAExF,QAAS,UAC3FS,QAAQuR,MAAMA,KAElB,CAACJ,KAnBgC,SAsBtB+wB,GAtBsB,mFAsBrC,WAAmCC,EAA2B1K,GAA9D,iBAAA9wB,EAAA,6DACQ8wB,GACA0K,EAAavvB,IACT,IAAIkW,yBAAuB,CACvBC,KAAM,CAAC,CAAE9W,OAAQ/O,EAAW8lB,UAAU,EAAMC,YAAY,IACxDtkB,KAAMukB,EAAOC,KAAK5jB,KAAKC,UAAUiyB,GAAO,SACxC9Z,UAAW,IAAIhe,YAAU,kDANzC,SAYQwR,GAAgB,yBAAyB,CAAE5R,QAAS,SAZ5D,SAagCkR,EAAgB0xB,EAAc5a,GAb9D,cAacliB,EAbd,OAkBc+jB,EAAWjY,GAAgB,yBAAyB,CAAE5R,QAAS,OAAQ+T,OAHvD,SAACC,GAAD,OAClB,cAAC,IAAD,CAAkBjS,GAAI,CAACkF,QAAQ,WAEgE6iB,SAAS,IAlBpH,UAmBcxY,EAAWgG,mBAAmBxR,EAAW,aAnBvD,eAoBQqiB,GAAc0B,GApBtB,UAsBcvY,EAAWgG,mBAAmBxR,EAAW,aAtBvD,QAuBQ8L,GAAgB,mBAAD,OAAoB9L,GAAY,CAAE9F,QAAS,YAE1DuiC,GAAwBz8B,GAzBhC,kDA2BQqiB,KACAvW,GAAgB,UAAD,aAAiB,CAAE5R,QAAS,UA5BnD,2DAtBqC,+BAuDtB6iC,GAvDsB,qFAuDrC,WAAwCva,EAA0B5O,EAAY6O,GAA9E,2CAAAnhB,EAAA,yDACUohB,EAAa7kB,EACb8kB,EAAW,IAAIroB,YAAUsZ,GACzBgP,EAAa,IAAItoB,YAAUkoB,GAC3BK,GAAgBJ,EAChBK,EAAe,IAAIxoB,YAAUsoB,GAEX,+CAApBJ,EAPR,wBAQyB,EACXU,EAAuBL,EAAe/f,KAAKqgB,IAAI,GADpC,GAEXhX,GAAc,IAAImB,eACvBC,IACG6V,gBAAcC,SAAS,CACnBC,WAAYZ,EACZa,SAAUZ,EACVa,SAAUN,KAf1B,kBAmBe/W,GAnBf,yBAqBkCX,EAAWyY,qBAAqBnB,GArBlE,eAqBcoB,EArBd,OAsBcC,EAAgBjkB,KAAKkkB,MAAMlkB,KAAKC,UAAU+jB,EAAY7c,MAAM/H,OAC5DkgB,EAAW2E,EAAcE,OAAOC,KAAK9E,SAvBnD,UAyB4B+E,QAAMC,0BACtBC,8BACAC,mBACA9B,EACAF,GA7BZ,eAyBYiC,EAzBZ,iBAgC0BJ,QAAMC,0BACpBC,8BACAC,mBACA9B,EACAD,GApCZ,eAgCYiC,EAhCZ,OAuCc1B,EAAuBL,EAAe/f,KAAKqgB,IAAI,GAAI3D,GAvCjE,UAwCsChU,EAAWqZ,eAAeD,GAxChE,WA0CgC,OA1ChC,+BA2CkBzY,GAAc,IAAImB,eACvBC,IACGgX,QAAMO,wCACFL,8BACAC,mBACA9B,EACAgC,EACAjC,EACAD,IAGPnV,IACGgX,QAAMQ,0BACFL,mBACAC,EACAC,EACA/mB,EACA,GACAqlB,IA7DpB,kBAkEmB/W,GAlEnB,eAoEkBA,GAAc,IAAImB,eACvBC,IACGgX,QAAMQ,0BACNL,mBACAC,EACAC,EACA/mB,EACA,GACAqlB,IA5EhB,kBAgFmB/W,GAhFnB,6CAvDqC,oEAkNvC,WAA4BxQ,GAA5B,6BAAA2F,EAAA,yDACE3F,EAAMqpB,iBAMU9kB,KAAKkkB,MAAMlkB,KAAKC,UAAUb,IACtC09B,EAAM,IACN19B,EAAKjF,QAAU,IATrB,wBAUU4iC,EAAU,IAAI3vB,cAVxB,SAY6ByvB,GAAyB,+CAAgD,+CAAgD,GAZtJ,OAYUG,EAZV,qBAcwB59B,GAdxB,gEAce+H,EAdf,SAiBoBtH,OAASsH,EAAMjN,SAAWiN,EAAMob,SAAWpb,EAAMob,OAAS,GAjB9E,oBAkBkB0a,EAAa91B,EAAMtH,MAClB5F,YAAgBgjC,KACjBA,EAAa,gDAEE,iDAAfA,GACQvgC,OAAOkzB,QAAQ,sBAAsBqN,EAAW,+DAA+D91B,EAAMtH,SAEzHo9B,EAAa,iDAGjBhjC,YAAgBkN,EAAMjN,SA5BxC,kCA6BuC2iC,GAAyBI,EAAY91B,EAAMjN,SAAUiN,EAAMob,QA7BlG,QA6BsB2a,EA7BtB,OA8BkBJ,IAAM31B,EAAMob,OAEZwa,EAAQ1vB,IAAI6vB,GAhC9B,wBAkCkBziC,QAAQC,IAAI,YAAYyM,EAAMjN,SAlChD,gJAuCM6iC,EAAQ1vB,IAAI2vB,GACJtgC,OAAOkzB,QAAQ,yBAAyBkN,EAAI,oEAAoE19B,EAAKjF,OAAO,gBAEhIwiC,GAAoBI,EAASjb,GA1CvC,wBA4CMlW,GAAgB,sDAAsD,CAAE5R,QAAS,UA5CvF,iEAlNuC,sBAiQrC,IAAM46B,GAAa,uCAAG,kCAAAxzB,EAAA,6DACZd,EAAO,CACbF,OAAQ,0BACR8qB,QAAS,MACTC,OAAQ,CAEJxtB,EAAUsR,WACV,CAAEmJ,UAAW,+CACb,CAAEyc,SAAU,aAAcC,WAAY,cAE1CnxB,GAAI,wCAVc,SAaKzD,MAAMsc,IAAoB,CAC7Cpc,OAAQ,OACRE,KAAMN,KAAKC,UAAUK,GACrBD,QAAS,CAAE,eAAgB,sBAhBb,cAaZE,EAbY,gBAkBCA,EAASC,OAlBV,cAkBZA,EAlBY,OAmBZ4qB,EAAe5qB,EAAKuM,OAAO5F,MAnBf,kBAoBXikB,GApBW,2CAAH,qDAwBb+R,GAA8B,uCAAG,sCAAA/7B,EAAA,yDACnC2W,GAAW,IACPpa,EAF+B,iCAIa4tB,QAAQC,IAAI,CAACoJ,KAAiBwI,OAJ3C,mCAI1BC,EAJ0B,KAIXC,EAJW,KAM3BC,EAAc,EAClB,IACI,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAAgBtkB,eAApB,OAAI,EAAyBC,8BACzBskB,GAAeD,EAAetkB,QAAQC,4BAA4B,IAClEyjB,IAA2BY,EAAetkB,QAAQC,4BAA4B,KAAW,IAEhG,MAAMze,GACHC,QAAQC,IAAI,QAAQF,GAGxB,IAGI6iC,EAAcx7B,KAAI,SAAChC,GACf,IAAIqhB,EAAOrhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKlD,KACtCE,EAAUvhB,EAAMmZ,QAAQ5Z,KAAK+kB,OAAOC,KAAKkD,YAAYoP,SAC5C,iDAATxV,GACAub,GAAsBc,EAAYnc,MAG5C,MAAM5mB,GAAGC,QAAQC,IAAI,QAAQF,GA1BA,QA6BnCud,GAAW,GA7BwB,4CAAH,qDA+B9BqlB,GAAoB,uCAAG,oCAAAh8B,EAAA,sEAEfgX,EAAY,IAAIhe,YAAU,gDAC1Bie,EAAU,IAAIje,YAAU,+CACxBke,EAAqB,IAAIle,YAAU,gDACnCme,EAAsB5a,EALP,SAOM6a,sCACvBlN,EACA8M,EACAC,EACAC,EACAC,GAZiB,cAOfE,EAPe,yBAedA,GAfc,kCAgBdhe,QAAQC,IAAI,QAAQ,EAAR,IAhBE,0DAAH,qDAwB1B,OALAf,IAAMyE,WAAU,WACRT,IAAcma,GACdqlB,OACL,CAACx/B,IAEAma,EACQ,kDAGA,cAAC,IAAMtb,SAAP,UACI,cAAC,IAAD,CAAMmC,MAAI,EAACC,GAAI,GAAI8I,GAAI,GAAIC,GAAI,GAA/B,SACI,cAAC,IAAD,CAAO8K,UAAU,yBAAjB,SACI,eAAC,IAAD,CAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAK1W,GAAI,CAAEkL,QAAS,OAAQK,WAAY,UAAxC,SACI,cAAC,IAAD,CAAKmL,UAAU,mCAAmC1W,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAAxE,SACI,cAAC,IAAD,CAAYC,cAAY,EAAC9N,QAAQ,KAAKkD,UAAU,MAAMnB,GAAI,CAAE6L,EAAG,EAAGC,SAAU,YAA5E,8BAKP20B,IAAsBA,GAAqB,KACxC,eAAC,IAAD,CAAKzgC,GAAI,CAAEuL,WAAY,UAAvB,UAEKg1B,GACG,cAAC,IAAD,CACI79B,WAAS,EACT6I,WAAW,SACX2C,eAAe,SAHnB,SAKI,cAAC,IAAD,CAAMrL,GAAI,GAAV,SAEI,eAAC,IAAD,CAAY5E,QAAQ,UAApB,6BAGI,cAAC,IAAD,CAAQ4B,KAAK,QAAQ5B,QAAQ,OAA7B,SACI,cAAC,kBAAD,CACA6B,KAAMygC,GACNxgC,OAAQ,kBAAM8P,GAAgB,UAAD,OAAW0wB,IAAuB,CAAEtiC,QAAS,aAF1E,SAII,cAAC,IAAD,CAAiB+B,GAAI,CAAEC,SAAS,OAAQC,GAAG,SAGnD,cAAC,IAAD,CACIjC,QAAQ,OACR4C,KAAI,yCAAoC0/B,IACxCn/B,OAAO,SAHX,SAKCm/B,YAMb,eAAC,IAAD,CACI79B,WAAS,EACT6I,WAAW,SACX2C,eAAe,SAHnB,UAMI,eAAC,IAAD,CAAMtL,MAAI,EAACC,GAAI,GAAI7C,GAAI,CAACqT,EAAE,EAAExH,EAAE,GAA9B,UAEI,eAAC,IAAD,CAAY5N,QAAQ,UAAUkD,UAAU,MAAM6B,MAAM,UAApD,UACA,iDACA,uBAAK,qHACL,+BACI,mDACA,0DACA,uDACA,sDACA,qDACA,2DAKJ,eAAC,IAAD,CAAY/E,QAAQ,UAAUkD,UAAU,MAAM6B,MAAM,UAApD,UACA,mDACA,+BACI,mEACA,uFACA,wIACA,8GAGJ,eAAC,IAAD,CAAY/E,QAAQ,UAAUkD,UAAU,MAAM6B,MAAM,UAApD,UACA,4CADA,qHAMJ,cAAC,IAAD,CAAMJ,MAAI,EAACC,GAAI,GAAf,SACI,wBAAO4+B,QAAQ,wBAAf,UACI,cAACtB,EAAD,CAAOv4B,GAAG,wBACN6W,KAAK,OACLijB,OAAO,kBACPx1B,SA1OjC,SAACzN,GACxB,IAAMkjC,EAAOljC,EAAE2C,OAAOwgC,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GAEf,IAAMC,EAAOD,EAAI5gC,OAAO4P,OAClBkxB,EAAKC,IAAUF,EAAM,CAAExjB,KAAM,WAE7B2jB,EAASF,EAAGG,WAAW,GACvBC,EAAKJ,EAAGK,OAAOH,IAjDL,SAACI,GAKnB,IAJA,IAAMC,EAAkBD,EAAWE,MAAM,WACnCp+B,EAAUm+B,EAAgB,GAAGC,MAAM,uCAEnCC,EAAO,GACJC,EAAI,EAAGA,EAAIH,EAAgBrkC,OAAQwkC,IAAK,CAC/C,IAAMC,EAAMJ,EAAgBG,GAAGF,MAAM,uCACrC,GAAIp+B,GAAWu+B,EAAIzkC,QAAUkG,EAAQlG,OAAQ,CAE3C,IADA,IAAM0kC,EAAM,GACHC,EAAI,EAAGA,EAAIz+B,EAAQlG,OAAQ2kC,IAAK,CACvC,IAAI9sB,EAAI4sB,EAAIE,GACR9sB,EAAE7X,OAAS,IACD,KAAR6X,EAAE,KACJA,EAAIA,EAAEjV,UAAU,EAAGiV,EAAE7X,OAAS,IACT,KAAnB6X,EAAEA,EAAE7X,OAAS,KACf6X,EAAIA,EAAEjV,UAAUiV,EAAE7X,OAAS,EAAG,KAE9BkG,EAAQy+B,KACVD,EAAIx+B,EAAQy+B,IAAM9sB,GAKlBoe,OAAOC,OAAOwO,GAAK73B,QAAO,SAAAirB,GAAC,OAAIA,KAAG93B,OAAS,GAC7CukC,EAAKv4B,KAAK04B,IAMhB,IAAMr1B,EAAUnJ,EAAQwB,KAAI,SAACk9B,GAAD,MAAY,CACtCv/B,KAAMu/B,EACNC,SAAUD,MAGZ1C,EAAQqC,GACRtC,EAAW5yB,GAiBTy1B,CAFaf,IAAWgB,aAAab,KAIvCT,EAAOuB,mBAAmBzB,MA4N0B,eAAC,IAAD,CACI1jC,QAAQ,YACRkD,UAAU,OACVnB,GAAI,CACAyI,OAAO,GAJf,UAOA,cAAC,IAAD,IAPA,eAWR,cAAC,IAAD,CAAM7F,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACI+E,GAAG,YACH2M,WAAS,EACT2U,YAAY,kCACZne,MAAM,OACN9M,QAAQ,WACRkrB,aAAa,MACbjd,SAAU,SAACzN,GAAOunB,EAAYvnB,EAAE2C,OAAOgK,QACvCpL,GAAI,CACAyI,OAAO,GAEX2gB,WAAY,CACRjc,WAAY,CACR7K,MAAO,CACHmW,UAAU,cAM9B,cAAC,IAAD,CAAM5V,GAAI,GAAV,SACI,eAAC,IAAD,CACI8D,QA7cf,6CA8ce1I,QAAQ,WACRgK,MAAM,UACNrB,SAAWvD,EAAKjF,OAAS,EACzB4B,GAAI,CACAyI,OAAO,GANf,qBAQcpF,EAAKjF,OAAS,GAAKiF,EAAKjF,eAMlD,cAACuG,EAAD,CAAa9E,KAAK,QAAQ,aAAW,iBAArC,SACI,cAAC,IAAD,CACIoI,MAAO,GACP5E,KAAMA,EACNoK,QAASA,EACTzC,QAnV5B,CACZ0C,WAAW,SACXC,gBAAgB,EAChBC,UAAS,EACTC,OAAM,EACNC,aAAY,EACZ7C,QAAO,EACP3E,YAAY,GACZ2G,mBAAmB,CAAC,GAAI,GAAI,aAkVA,cAAC,IAAD,CACAvK,WAAS,EACT6I,WAAW,SACX2C,eAAe,SAHf,SAKI,cAAC,IAAD,CAAMtL,MAAI,EAACC,GAAI,GACf0I,WAAW,SACX2C,eAAe,SAFf,SAGI,cAAC,IAAD,CAAYjQ,QAAQ,KAAKkD,UAAU,MAC/B6B,MAAM,SADV,8D,ibC1etC2B,EAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAC9C,uBAAwB,CACpBK,aAAc,wCAItB,SAASe,EAAuBpI,GAC5B,IAAMgH,EAAQqB,cACNC,EAA2CtI,EAA3CsI,MAAOC,EAAoCvI,EAApCuI,KAAMC,EAA8BxI,EAA9BwI,YAAaC,EAAiBzI,EAAjByI,aAkBlC,OACI,eAAC,IAAD,CAAKvG,GAAI,CAAEyG,WAAY,EAAG3F,GAAI,KAA9B,UACI,cAAC,IAAD,CACI6F,QAnBuB,SAACjH,GAChC6G,EAAa7G,EAAO,IAmBZkH,SAAmB,IAATP,EACV,aAAW,aAHf,SAKyB,QAApBvB,EAAM5B,UAAsB,cAAC,IAAD,IAAmB,cAAC,IAAD,MAEpD,cAAC,IAAD,CACIyD,QAtBkB,SAACjH,GAC3B6G,EAAa7G,EAAO2G,EAAO,IAsBnBO,SAAmB,IAATP,EACV,aAAW,gBAHf,SAKyB,QAApBvB,EAAM5B,UACH,cAAC,IAAD,IAEA,cAAC,IAAD,MAGR,cAAC,IAAD,CACIyD,QA7BkB,SAACjH,GAC3B6G,EAAa7G,EAAO2G,EAAO,IA6BnBO,SAAUP,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHf,SAKyB,QAApBxB,EAAM5B,UACH,cAAC,IAAD,IAEA,cAAC,IAAD,MAGR,cAAC,IAAD,CACIyD,QApCsB,SAACjH,GAC/B6G,EAAa7G,EAAOmH,KAAKE,IAAI,EAAGF,KAAKC,KAAKV,EAAQE,GAAe,KAoCzDM,SAAUP,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHf,SAKyB,QAApBxB,EAAM5B,UAAsB,cAAC,IAAD,IAAoB,cAAC,IAAD,SAajE,SAAShC,EAAYrC,GACjB,IAAKA,EAAM,OAAOA,EAClB,IAAIkC,EAAQlC,EAAKmC,UAAU,EAAG,GAC1BC,EAAMpC,EAAKmC,UAAUnC,EAAKT,OAAS,GACvC,MAAM,GAAN,OAAU2C,EAAV,cAAqBE,GAGzB,IAAMoiC,EAAY,SAACvlC,GACf,IAAOq9B,EAAmBr9B,EAAnBq9B,UAAWhW,EAAQrnB,EAARqnB,KACZme,EAAYnI,GAAaA,EAAU/V,QACnCme,EAAYpI,IAAS,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAW13B,MAE1C,OACI,eAAC,IAAD,CAAMf,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,CAAEwY,SAAS,oBAAnE,UACI,cAAC,IAAD,CAAM5V,MAAI,EAAV,SACK0gC,EACG,cAAC,IAAD,CAAQniC,UAAW2B,IACf9E,UAAW,EACXyJ,IAAI,QACJC,IAAK47B,EACLtjC,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,UACrC,cAAC,IAAD,MAEb,cAAC,IAAD,CAAM/E,MAAI,EAAC5C,GAAI,CAAEc,GAAI,GAArB,SACKyiC,GAAcpe,GAAQjkB,EAAYikB,IAAU,SAMvDqe,EAAgB,SAAC1lC,GACnB,IAAQ2lC,EAAmC3lC,EAAnC2lC,iBAAkBC,EAAiB5lC,EAAjB4lC,aAC1B,IACI,QAAQ,GACJ,KAAOD,EAAmB,KACtB,OAAO,cAAC,IAAD,CAAoB5T,OAAQ4T,EAAiBxf,QAAQ,KAE/D,KAAOwf,EAAmB,GACvB,OAAO,cAAC,IAAD,CAAoB5T,OAAQ4T,EAAiBxf,QAAQ,KAE/D,QACG,OAAO,cAAC,IAAD,CAAoB4L,OAAQ4T,EAAiBxf,QAAQyf,MAItE,MAAMjlC,GACJ,OAAOglC,IAIf,SAASE,EAAa7lC,GAAQ,IAAD,YACjBgG,EAAiBhG,EAAjBgG,MAAOkC,EAAUlI,EAAVkI,MACf,EAAwBpI,YAAe,GAAvC,mBAAOuC,EAAP,KAAa8G,EAAb,KAEA,OACI,eAAC,WAAD,WACI,eAAC,IAAD,CAAsBjH,GAAI,CAAE,QAAS,CAAEmF,aAAc,UAArD,UACI,cAAC,IAAD,CAAWnC,MAAM,SAAShD,GAAI,CAACmF,aAAa,QAA5C,SACI,cAAC,IAAD,CACI,aAAW,aACXtF,KAAK,QACL8G,QAAS,kBAAMM,GAAS9G,IAH5B,SAKKA,EAAO,cAAC,IAAD,IAA0B,cAAC,IAAD,QAG1C,cAAC,IAAD,CAAW6C,MAAM,OAAOhD,GAAI,CAACmF,aAAa,QAA1C,SACI,cAACk+B,EAAD,CAAWlI,UAAWr3B,EAAMq3B,UAAWhW,KAAMrhB,EAAMqhB,SAEvD,cAAC,IAAD,CAAWniB,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,SAAoD,cAACq+B,EAAD,CAAeC,iBAAkB3/B,EAAMuhB,QAASqe,aAAc,MAClH,cAAC,IAAD,CAAW1gC,MAAM,QAAQhD,GAAI,CAACmF,aAAa,OAAQqT,SAAS,oBAA5D,SACK1U,EAAMk3B,eACH,mCACCl3B,EAAMk3B,eAAiB,EACpB,cAAC,IAAD,CAAY/8B,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,QAAzC,SACI,eAAC,IAAD,CAAMpF,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,CAAEwY,SAAS,oBAAnE,UACI,eAAC,IAAD,CAAM5V,MAAI,EAAV,UACKkB,EAAMk3B,eAAe/W,QAAQ,GADlC,OAGA,cAAC,IAAD,CAAMrhB,MAAI,EAAV,SACI,cAAC,IAAD,CAAmB3C,SAAS,mBAKxC,cAAC,IAAD,CAAYhC,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,SACI,eAAC,IAAD,CAAMpF,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,CAAEwY,SAAS,oBAAnE,UACI,eAAC,IAAD,CAAM5V,MAAI,EAAV,UACKkB,EAAMk3B,eAAe/W,QAAQ,GADlC,OAGA,cAAC,IAAD,CAAMrhB,MAAI,EAAV,SACI,cAAC,IAAD,CAAiB3C,SAAS,qBAO1C,2CAKR,eAAC,IAAD,CAAW+C,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,UACI,cAAC,IAAD,CAAYlH,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAM22B,MAAOiJ,aAAc,OAEnI,eAAC,IAAD,CAAW1gC,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,UAAoD,cAAC,IAAD,CAAYlH,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAMsH,MAAOs4B,aAAc,OACnL,cAAC,IAAD,UACI,cAAC,IAAD,CAAWve,KAAMrhB,EAAMqhB,KAAM1hB,KAAI,UAAEK,EAAMq3B,iBAAR,aAAE,EAAiB13B,KAAM2hB,QAAO,UAAEthB,EAAMq3B,iBAAR,aAAE,EAAiB/V,QAASC,QAASvhB,EAAMuhB,QAASC,eAAgBxhB,EAAMsH,MAAMtH,EAAMuhB,QAAST,eAAe,EAAOY,SAAU,QApDzLxf,GAuDf,cAAC,IAAD,UACI,cAAC,IAAD,CAAW1D,MAAO,CAAE4F,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAGpF,MAAM,SAAzE,SACI,cAAC,IAAD,CAAUsF,GAAInI,EAAMoI,QAAQ,OAAOC,eAAa,EAAhD,SACI,cAAC,IAAD,CAAKxI,GAAI,CAAEyI,OAAQ,GAAnB,SAMI,eAAC,IAAD,CAAM/F,WAAS,EAACC,QAAS,EAAzB,UACI,eAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACI,cAAC,IAAD,CAAYsiB,KAAMrhB,EAAMqhB,KAAM1hB,KAAI,UAAEK,EAAMq3B,iBAAR,aAAE,EAAiB13B,KAAM2hB,QAAO,UAAEthB,EAAMq3B,iBAAR,aAAE,EAAiB/V,QAASC,QAASvhB,EAAMuhB,UAC5GvhB,EAAM3F,SACP,cAAC,IAAD,CAAoBA,QAAS2F,EAAM3F,QAASgnB,KAAMrhB,EAAMqhB,KAAMye,aAAc9/B,EAAM8/B,aAAcngC,KAAI,UAAEK,EAAMq3B,iBAAR,aAAE,EAAiB13B,KAAM2hB,QAAO,UAAEthB,EAAMq3B,iBAAR,aAAE,EAAiB/V,QAASC,QAASvhB,EAAMuhB,aAGnL,cAAC,IAAD,CAAMziB,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAqBhE,KAAMiF,EAAMqhB,KAAMrmB,KAAM,EAAGC,YAAY,EAAMC,SAAS,EAAMC,SAAU,qBAqHhH4kC,IA5FmB,SAAC/lC,GAC/B,IAAMg+B,EAAWh+B,EAAMg+B,UAAY,GACnC,EAAwBl+B,WAAe,GAAvC,mBAAOyI,EAAP,KAAay9B,EAAb,KACA,EAAsClmC,WAAe,GAArD,mBAAO0I,EAAP,KAAoBy9B,EAApB,KAEMC,EAAY39B,EAAO,EAAIQ,KAAKE,IAAI,GAAI,EAAIV,GAAQC,EAAcw1B,EAAS19B,QAAU,EAWnF6lC,EAAqB,EAgBzB,OAdIA,EADJnmC,EAAMoiC,OACmB,EAEA,EAarB,cAAC,WAAD,UACI,qBAAK59B,MAAO,CAAC9B,MAAO,OAAQuc,UAAW,UAAvC,SACI,cAAC,IAAD,UACI,eAACpY,EAAD,CAAa3E,GAAI,CAAEuM,SAAU,KAAO1M,KAAK,QAAQ,aAAW,kBAA5D,UACI,cAAC,IAAD,WACM/B,EAAMoiC,QACJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAWlgC,GAAI,CAACQ,MAAM,QACtB,cAAC,IAAD,UAAW,cAAC,IAAD,CAAYvC,QAAQ,UAApB,qBACX,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,uBACzB,cAAC,IAAD,CAAW+E,MAAM,UACjB,cAAC,IAAD,CAAWA,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,qBACzB,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,qBACzB,cAAC,IAAD,SAIZ,eAAC,IAAD,YACMqI,EAAc,EACVw1B,EAAShvB,MAAMzG,EAAOC,EAAaD,EAAOC,EAAcA,GACxDw1B,GACJh2B,KAAI,SAAChC,EAAOkC,GACV,OAAQlI,EAAMoiC,QACV,cAACyD,EAAD,CAAc7/B,MAAOA,EAAOkC,MAAOA,OAE1Cg+B,EAAY,GACT,cAAC,IAAD,CAAU1hC,MAAO,CAAEC,OAAQ,GAAKyhC,GAAhC,SACA,cAAC,IAAD,CAAW57B,QAAS,SAI5B,cAAC,IAAD,UACA,cAAC,IAAD,UACI,cAAC,IAAD,CACA6E,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAElC,MAAO,MAAOK,OAAQ,IACxDhD,QAAS67B,EACT79B,MAAO01B,EAAS19B,OAChBkI,YAAaA,EACbD,KAAMA,EACN6G,YAAa,CACTC,WAAY,CACZ,aAAc,iBAEdC,QAAQ,GAGZ7G,aAxEC,SAAC7G,EAAO2N,GAC7By2B,EAAQz2B,IAwEYC,oBArEQ,SAAC5N,GAC7BqkC,EAAex2B,SAAS7N,EAAM0B,OAAOgK,MAAO,KAC5C04B,EAAQ,IAoEYt2B,iBAAkBtH,mB,8FC9V/B,SAASg+B,EAAgBpmC,GACpC,OACI,cAAC,IAAD,2BAAaA,GAAb,aACI,sBAAMmY,EAAE,6zHAA6zHrO,GAAG,e,0WCqC90HjD,EAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAC9C,uBAAwB,CACpBK,aAAc,wCAItB,SAASe,EAAuBpI,GAC5B,IAAMgH,EAAQqB,cACNC,EAA2CtI,EAA3CsI,MAAOC,EAAoCvI,EAApCuI,KAAMC,EAA8BxI,EAA9BwI,YAAaC,EAAiBzI,EAAjByI,aAkBlC,OACI,eAAC,IAAD,CAAKvG,GAAI,CAAEyG,WAAY,EAAG3F,GAAI,KAA9B,UACI,cAAC,IAAD,CACI6F,QAnBuB,SAACjH,GAChC6G,EAAa7G,EAAO,IAmBZkH,SAAmB,IAATP,EACV,aAAW,aAHf,SAKyB,QAApBvB,EAAM5B,UAAsB,cAAC,IAAD,IAAmB,cAAC,IAAD,MAEpD,cAAC,IAAD,CACIyD,QAtBkB,SAACjH,GAC3B6G,EAAa7G,EAAO2G,EAAO,IAsBnBO,SAAmB,IAATP,EACV,aAAW,gBAHf,SAKyB,QAApBvB,EAAM5B,UACH,cAAC,IAAD,IAEA,cAAC,IAAD,MAGR,cAAC,IAAD,CACIyD,QA7BkB,SAACjH,GAC3B6G,EAAa7G,EAAO2G,EAAO,IA6BnBO,SAAUP,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHf,SAKyB,QAApBxB,EAAM5B,UACH,cAAC,IAAD,IAEA,cAAC,IAAD,MAGR,cAAC,IAAD,CACIyD,QApCsB,SAACjH,GAC/B6G,EAAa7G,EAAOmH,KAAKE,IAAI,EAAGF,KAAKC,KAAKV,EAAQE,GAAe,KAoCzDM,SAAUP,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHf,SAKyB,QAApBxB,EAAM5B,UAAsB,cAAC,IAAD,IAAoB,cAAC,IAAD,SAajE,SAAShC,EAAYrC,GACjB,IAAKA,EAAM,OAAOA,EAClB,IAAIkC,EAAQlC,EAAKmC,UAAU,EAAG,GAC1BC,EAAMpC,EAAKmC,UAAUnC,EAAKT,OAAS,GACvC,MAAM,GAAN,OAAU2C,EAAV,cAAqBE,GAGzB,IA8DMoiC,EAAY,SAACvlC,GACf,IAAOq9B,EAAmBr9B,EAAnBq9B,UAAWhW,EAAQrnB,EAARqnB,KACZme,EAAYnI,GAAaA,EAAU/V,QACnCme,EAAYpI,GAAaA,EAAU13B,KAEzC,OACI,eAAC,IAAD,CAAMf,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,CAAEwY,SAAS,oBAAnE,UACI,cAAC,IAAD,CAAM5V,MAAI,EAAV,SACK0gC,EACG,cAAC,IAAD,CAAQniC,UAAW2B,IACf9E,UAAW,EACXyJ,IAAI,QACJC,IAAK47B,EACLtjC,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,UACrC,cAAC,IAAD,MAEb,cAAC,IAAD,CAAM/E,MAAI,EAAC5C,GAAI,CAAEc,GAAI,GAArB,SACKyiC,GAAcpe,GAAQjkB,EAAYikB,IAAU,SAMvDqe,EAAgB,SAAC1lC,GACnB,IAAQ2lC,EAAmC3lC,EAAnC2lC,iBAAkBC,EAAiB5lC,EAAjB4lC,aAC1B,IACI,QAAQ,GACJ,KAAOD,EAAmB,KACtB,OAAO,cAAC,IAAD,CAAoB5T,OAAQ4T,EAAiBxf,QAAQ,KAE/D,KAAOwf,EAAmB,GACvB,OAAO,cAAC,IAAD,CAAoB5T,OAAQ4T,EAAiBxf,QAAQ,KAE/D,QACG,OAAO,cAAC,IAAD,CAAoB4L,OAAQ4T,EAAiBxf,QAAQyf,MAItE,MAAMjlC,GACJ,OAAOglC,IAIf,SAASE,EAAa7lC,GAClB,IAAQgG,EAAiBhG,EAAjBgG,MAAOkC,EAAUlI,EAAVkI,MACf,EAAwBpI,YAAe,GAAvC,6BAEA,OACI,cAAC,WAAD,UACI,eAAC,IAAD,CAAsBoC,GAAI,CAAE,QAAS,CAAEmF,aAAc,UAArD,UACI,cAAC,IAAD,CAAWnC,MAAM,OAAOhD,GAAI,CAACmF,aAAa,QAA1C,SACI,cAACk+B,EAAD,CAAWlI,UAAWr3B,EAAMq3B,UAAWhW,KAAMrhB,EAAMqhB,SAEvD,cAAC,IAAD,CAAWniB,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,SAAoD,cAACq+B,EAAD,CAAeC,iBAAkB3/B,EAAMuhB,QAASqe,aAAc,MAClH,cAAC,IAAD,CAAW1gC,MAAM,QAAQhD,GAAI,CAACmF,aAAa,OAAQqT,SAAS,oBAA5D,SACK1U,EAAMk3B,eACH,mCACCl3B,EAAMk3B,eAAiB,EACpB,cAAC,IAAD,CAAY/8B,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,QAAzC,SACI,eAAC,IAAD,CAAMpF,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,CAAEwY,SAAS,oBAAnE,UACI,eAAC,IAAD,CAAM5V,MAAI,EAAV,UACKkB,EAAMk3B,eAAe/W,QAAQ,GADlC,OAGA,cAAC,IAAD,CAAMrhB,MAAI,EAAV,SACI,cAAC,IAAD,CAAmB3C,SAAS,mBAKxC,cAAC,IAAD,CAAYhC,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,SACI,eAAC,IAAD,CAAMpF,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,CAAEwY,SAAS,oBAAnE,UACI,eAAC,IAAD,CAAM5V,MAAI,EAAV,UACKkB,EAAMk3B,eAAe/W,QAAQ,GADlC,OAGA,cAAC,IAAD,CAAMrhB,MAAI,EAAV,SACI,cAAC,IAAD,CAAiB3C,SAAS,qBAO1C,2CAKR,eAAC,IAAD,CAAW+C,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,UACI,cAAC,IAAD,CAAYlH,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAM22B,MAAOiJ,aAAc,OAEnI,eAAC,IAAD,CAAW1gC,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,UAAoD,cAAC,IAAD,CAAYlH,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAMsH,MAAOs4B,aAAc,OACnL,cAAC,IAAD,UACI,cAAC,IAAD,CAAWve,KAAMrhB,EAAMqhB,KAAM1hB,KAAMK,EAAMq3B,UAAU13B,KAAM2hB,QAASthB,EAAMq3B,UAAU/V,QAASC,QAASvhB,EAAMuhB,QAASC,eAAgBxhB,EAAMsH,MAAMtH,EAAMuhB,QAAST,eAAe,EAAOY,SAAU,QA3CvLxf,KAgIZm+B,IA9EoB,SAACrmC,GAChC,IAAMg+B,EAAWh+B,EAAMg+B,UAAY,GACnC,EAAwBl+B,WAAe,GAAvC,mBAAOyI,EAAP,KAAay9B,EAAb,KACA,EAAsClmC,WAAe,GAArD,mBAAO0I,EAAP,KAAoBy9B,EAApB,KAEMC,EAAY39B,EAAO,EAAIQ,KAAKE,IAAI,GAAI,EAAIV,GAAQC,EAAcw1B,EAAS19B,QAAU,EAavF,OACI,cAAC,WAAD,UACI,qBAAKkE,MAAO,CAAC9B,MAAO,OAAQuc,UAAW,UAAvC,SACI,cAAC,IAAD,UACI,eAACpY,EAAD,CAAa3E,GAAI,CAAEuM,SAAU,KAAO1M,KAAK,QAAQ,aAAW,kBAA5D,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,CAAY5B,QAAQ,UAApB,qBACX,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,uBACzB,cAAC,IAAD,CAAW+E,MAAM,UACjB,cAAC,IAAD,CAAWA,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,qBACzB,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,qBACzB,cAAC,IAAD,SAGR,eAAC,IAAD,YACMqI,EAAc,EACVw1B,EAAShvB,MAAMzG,EAAOC,EAAaD,EAAOC,EAAcA,GACxDw1B,GACJh2B,KAAI,SAAChC,EAAOkC,GACV,OACI,mCACI,cAAC29B,EAAD,CAAc7/B,MAAOA,EAAOkC,MAAOA,SAI9Cg+B,EAAY,GACT,cAAC,IAAD,CAAU1hC,MAAO,CAAEC,OAAQ,GAAKyhC,GAAhC,SACA,cAAC,IAAD,CAAW57B,QAAS,SAI5B,cAAC,IAAD,UACA,cAAC,IAAD,UACI,cAAC,IAAD,CACA6E,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAElC,MAAO,MAAOK,OAAQ,IACxDhD,QAtCC,EAuCDhC,MAAO01B,EAAS19B,OAChBkI,YAAaA,EACbD,KAAMA,EACN6G,YAAa,CACTC,WAAY,CACZ,aAAc,iBAEdC,QAAQ,GAGZ7G,aA1DC,SAAC7G,EAAO2N,GAC7By2B,EAAQz2B,IA0DYC,oBAvDQ,SAAC5N,GAC7BqkC,EAAex2B,SAAS7N,EAAM0B,OAAOgK,MAAO,KAC5C04B,EAAQ,IAsDYt2B,iBAAkBtH,mB,yZCxTxCvB,EAAcC,YAAOC,IAAPD,EAAc,cAAGE,MAAH,MAAgB,CAC9C,uBAAwB,CACpBK,aAAc,wCAItB,SAASe,EAAuBpI,GAC5B,IAAMgH,EAAQqB,cACNC,EAA2CtI,EAA3CsI,MAAOC,EAAoCvI,EAApCuI,KAAMC,EAA8BxI,EAA9BwI,YAAaC,EAAiBzI,EAAjByI,aAkBlC,OACI,eAAC,IAAD,CAAKvG,GAAI,CAAEyG,WAAY,EAAG3F,GAAI,KAA9B,UACI,cAAC,IAAD,CACI6F,QAnBuB,SAACjH,GAChC6G,EAAa7G,EAAO,IAmBZkH,SAAmB,IAATP,EACV,aAAW,aAHf,SAKyB,QAApBvB,EAAM5B,UAAsB,cAAC,IAAD,IAAmB,cAAC,IAAD,MAEpD,cAAC,IAAD,CACIyD,QAtBkB,SAACjH,GAC3B6G,EAAa7G,EAAO2G,EAAO,IAsBnBO,SAAmB,IAATP,EACV,aAAW,gBAHf,SAKyB,QAApBvB,EAAM5B,UACH,cAAC,IAAD,IAEA,cAAC,IAAD,MAGR,cAAC,IAAD,CACIyD,QA7BkB,SAACjH,GAC3B6G,EAAa7G,EAAO2G,EAAO,IA6BnBO,SAAUP,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHf,SAKyB,QAApBxB,EAAM5B,UACH,cAAC,IAAD,IAEA,cAAC,IAAD,MAGR,cAAC,IAAD,CACIyD,QApCsB,SAACjH,GAC/B6G,EAAa7G,EAAOmH,KAAKE,IAAI,EAAGF,KAAKC,KAAKV,EAAQE,GAAe,KAoCzDM,SAAUP,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnD,aAAW,YAHf,SAKyB,QAApBxB,EAAM5B,UAAsB,cAAC,IAAD,IAAoB,cAAC,IAAD,SAajE,SAAShC,EAAYrC,GACjB,IAAKA,EAAM,OAAOA,EAClB,IAAIkC,EAAQlC,EAAKmC,UAAU,EAAG,GAC1BC,EAAMpC,EAAKmC,UAAUnC,EAAKT,OAAS,GACvC,MAAM,GAAN,OAAU2C,EAAV,cAAqBE,GAGzB,IAAMmjC,EAAY,SAACtmC,GACf,IAAOumC,EAAUvmC,EAAVumC,MAIP,IAEI,OACI,eAAC,IAAD,CAAM3hC,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,CAAEwY,SAAS,oBAAnE,UACI,cAAC,IAAD,CAAM5V,MAAI,EAAV,SACI,cAAC,IAAD,CACI5C,GAAI,CAAEE,GAAG,GADb,SAGKmkC,EAAMv+B,KAAI,SAACw+B,EAAW1B,GAAZ,OACP,cAAC,IAAD,CACIzhC,UAAW2B,IACX9E,UAAW,EACXyJ,IAAK68B,EAAU7gC,KACfiE,IAAK48B,EAAU5gC,KACf1D,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,iBAKtD,cAAC,IAAD,CAAM/E,MAAI,EAAV,SACKyhC,EAAMv+B,KAAI,SAACw+B,EAAW1B,GAAZ,OACP,qCACKA,EAAE,GAAM,IACR0B,EAAU7gC,gBAMjC,MAAMhF,GACJC,QAAQC,IAAI,QAAQF,GAGxB,MAAO,SAGL8lC,EAAW,SAACzmC,GACd,IAAQ8gC,EAA0B9gC,EAA1B8gC,YAAaH,EAAa3gC,EAAb2gC,SAErB,OACG,eAAC,IAAD,CAAM/7B,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAASvL,GAAI,CAAEwY,SAAS,oBAAnE,UACI,cAAC,IAAD,CAAM5V,MAAI,EAAV,SACK,cAAC,IAAD,CACIzB,UAAW2B,IACX9E,UAAW,EACXyJ,IAAI,QACJC,IAAKk3B,EACL5+B,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,YAG/C,cAAC,IAAD,CAAM/E,MAAI,EAAC5C,GAAI,CAAEc,GAAI,GAArB,SACM29B,QAMX4E,EAAY,SAACvlC,GACf,IAAOq9B,EAAmBr9B,EAAnBq9B,UAAWhW,EAAQrnB,EAARqnB,KACZme,EAAYnI,GAAaA,EAAU/V,QACnCme,EAAYpI,GAAaA,EAAU13B,KAEzC,OACI,eAAC,IAAD,CAAMf,WAAS,EAACQ,UAAU,MAAMqI,WAAW,SAA3C,UACI,cAAC,IAAD,CAAM3I,MAAI,EAAV,SACK0gC,EACG,cAAC,IAAD,CAAQniC,UAAW2B,IACf9E,UAAW,EACXyJ,IAAI,QACJC,IAAK47B,EACLtjC,GAAI,CAAEQ,MAAO,GAAI+B,OAAQ,GAAIoF,QAAS,UACrC,cAAC,IAAD,MAEb,cAAC,IAAD,CAAM/E,MAAI,EAAC5C,GAAI,CAAEc,GAAI,GAArB,SACKyiC,GAAcpe,GAAQjkB,EAAYikB,IAAU,SAMvDqe,EAAgB,SAAC1lC,GACnB,IAAQ2lC,EAAmC3lC,EAAnC2lC,iBAAkBC,EAAiB5lC,EAAjB4lC,aAC1B,IACI,QAAQ,GACJ,KAAOD,EAAmB,KACtB,OAAO,cAAC,IAAD,CAAoB5T,OAAQ4T,EAAiBxf,QAAQ,KAE/D,KAAOwf,EAAmB,GACvB,OAAO,cAAC,IAAD,CAAoB5T,OAAQ4T,EAAiBxf,QAAQ,KAE/D,QACG,OAAO,cAAC,IAAD,CAAoB4L,OAAQ4T,EAAiBxf,QAAQyf,MAItE,MAAMjlC,GACJ,OAAOglC,IAIf,SAASE,EAAa7lC,GAClB,IAAQgG,EAAiBhG,EAAjBgG,MAAOkC,EAAUlI,EAAVkI,MACf,EAAwBpI,YAAe,GAAvC,mBAAOuC,EAAP,KAAa8G,EAAb,KAEA,OACI,eAAC,WAAD,WACI,eAAC,IAAD,CAAsBjH,GAAI,CAAE,QAAS,CAAEmF,aAAc,UAArD,UACI,cAAC,IAAD,CAAWnC,MAAM,SAAShD,GAAI,CAACmF,aAAa,QAA5C,SACI,cAAC,IAAD,CACI,aAAW,aACXtF,KAAK,QACL8G,QAAS,kBAAMM,GAAS9G,IAH5B,SAKKA,EAAO,cAAC,IAAD,IAA0B,cAAC,IAAD,QAG1C,cAAC,IAAD,CAAW6C,MAAM,OAAOhD,GAAI,CAACmF,aAAa,QAA1C,SACI,cAACk+B,EAAD,CAAWlI,UAAWr3B,EAAMq3B,UAAWhW,KAAMrhB,EAAMqhB,SAEvD,cAAC,IAAD,CAAWniB,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,SAAoD,cAACq+B,EAAD,CAAeC,iBAAkB3/B,EAAMuhB,QAASqe,aAAc,MAClH,cAAC,IAAD,CAAW1gC,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,SACKrB,EAAMk3B,eACH,mCACCl3B,EAAMk3B,eAAiB,EACpB,qCACI,eAAC,IAAD,CAAY/8B,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,QAAzC,UAAmDhE,EAAMk3B,eAAe/W,QAAQ,GAAhF,KAAqF,cAAC,IAAD,CAAmBhkB,SAAS,eADrH,IAC+I,cAAC,IAAD,CAAYhC,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAM22B,MAAOiJ,aAAc,OAG9Q,qCACI,eAAC,IAAD,CAAYzlC,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,UAAsDhE,EAAMk3B,eAAe/W,QAAQ,GAAnF,KAAwF,cAAC,IAAD,CAAiBhkB,SAAS,eADtH,IACgJ,cAAC,IAAD,CAAYhC,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAM22B,MAAOiJ,aAAc,SAKnR,qCACQ,cAAC,IAAD,CAAYzlC,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAM22B,MAAOiJ,aAAc,SAI/I,eAAC,IAAD,CAAW1gC,MAAM,QAAQhD,GAAI,CAACmF,aAAa,QAA3C,UAAoD,cAAC,IAAD,CAAYlH,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAMsH,MAAOs4B,aAAc,OACnL,cAAC,IAAD,UACI,cAAC,IAAD,CAAWve,KAAMrhB,EAAMqhB,KAAM1hB,KAAMK,EAAMq3B,UAAU13B,KAAM2hB,QAASthB,EAAMq3B,UAAU/V,QAASC,QAASvhB,EAAMuhB,QAASC,eAAgBxhB,EAAMsH,MAAMtH,EAAMuhB,QAAST,eAAe,QAnCtK5e,GAsCf,cAAC,IAAD,UACI,cAAC,IAAD,CAAW1D,MAAO,CAAE4F,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAGpF,MAAM,SAAzE,SACI,cAAC,IAAD,CAAUsF,GAAInI,EAAMoI,QAAQ,OAAOC,eAAa,EAAhD,SACI,cAAC,IAAD,CAAKxI,GAAI,CAAEyI,OAAQ,GAAnB,SAMI,eAAC,IAAD,CAAM/F,WAAS,EAACC,QAAS,EAAzB,UACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAYsiB,KAAMrhB,EAAMqhB,KAAM1hB,KAAMK,EAAMq3B,UAAU13B,KAAM2hB,QAASthB,EAAMq3B,UAAU/V,QAASC,QAASvhB,EAAMuhB,YAE/G,cAAC,IAAD,CAAMziB,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CAAqBhE,KAAMiF,EAAMqhB,KAAMrmB,KAAM,EAAGC,YAAY,EAAMC,SAAS,EAAMC,SAAU,qBA0IhHulC,IAjHe,SAAC1mC,GAC3B,IAAMg+B,EAAWh+B,EAAMg+B,UAAY,GACnC,EAAwBl+B,WAAe,GAAvC,mBAAOyI,EAAP,KAAay9B,EAAb,KACA,EAAsClmC,WAAe,GAArD,mBAAO0I,EAAP,KAAoBy9B,EAApB,KAEMC,EAAY39B,EAAO,EAAIQ,KAAKE,IAAI,GAAI,EAAIV,GAAQC,EAAcw1B,EAAS19B,QAAU,EAWnF6lC,EAAqB,EAgBzB,OAdIA,EADJnmC,EAAMoiC,OACmB,EAEA,EAarB,cAAC,WAAD,UACI,qBAAK59B,MAAO,CAAC9B,MAAO,OAAQuc,UAAW,UAAvC,SACI,cAAC,IAAD,UACI,eAACpY,EAAD,CAAa3E,GAAI,CAAEuM,SAAU,KAAO1M,KAAK,QAAQ,aAAW,kBAA5D,UACI,cAAC,IAAD,UACK/B,EAAMoiC,OACH,eAAC,IAAD,WACI,cAAC,IAAD,UAAW,cAAC,IAAD,CAAYjiC,QAAQ,UAApB,wBACX,cAAC,IAAD,UAAW,cAAC,IAAD,CAAYA,QAAQ,UAApB,qBACX,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,yBACzB,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,mBACzB,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,wBAG7B,eAAC,IAAD,WACI,cAAC,IAAD,CAAW+B,GAAI,CAACQ,MAAM,QACtB,cAAC,IAAD,UAAW,cAAC,IAAD,CAAYvC,QAAQ,UAApB,qBACX,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,uBACzB,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,qBACzB,cAAC,IAAD,CAAW+E,MAAM,QAAjB,SAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAApB,qBACzB,cAAC,IAAD,SAIZ,eAAC,IAAD,YACMqI,EAAc,EACVw1B,EAAShvB,MAAMzG,EAAOC,EAAaD,EAAOC,EAAcA,GACxDw1B,GACJh2B,KAAI,SAAChC,EAAOkC,GACV,OAAOlI,EAAMoiC,OACT,cAAC,WAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAW59B,MAAO,CAAE0a,cAAe,UAAnC,SACI,cAACunB,EAAD,CAAU3F,YAAa96B,EAAM86B,YAAaH,SAAU36B,EAAM26B,aAE9D,cAAC,IAAD,CAAWz7B,MAAM,SAASV,MAAO,CAAE0a,cAAe,UAAlD,SACI,cAAConB,EAAD,CAAWC,MAAOvgC,EAAM06B,aAE5B,cAAC,IAAD,CAAWx7B,MAAM,QAAjB,SAAyB,cAACwgC,EAAD,CAAeC,iBAAkB3/B,EAAMuhB,QAASqe,aAAc,MACvF,eAAC,IAAD,CAAW1gC,MAAM,QAAjB,UAAyB,cAACwgC,EAAD,CAAeC,iBAAkB3/B,EAAMy6B,IAAKmF,aAAc,IAAnF,OACA,eAAC,IAAD,CAAW1gC,MAAM,QAAjB,UAAyB,cAAC,IAAD,CAAY/E,QAAQ,UAAU+B,GAAI,CAAC8H,MAAM,WAAzC,eAAmE,cAAC07B,EAAD,CAAeC,iBAAkB3/B,EAAMsH,MAAOs4B,aAAc,YAIhK,cAACC,EAAD,CAAc7/B,MAAOA,EAAOkC,MAAOA,OAE1Cg+B,EAAY,GACT,cAAC,IAAD,CAAU1hC,MAAO,CAAEC,OAAQ,GAAKyhC,GAAhC,SACA,cAAC,IAAD,CAAW57B,QAAS,SAI5B,cAAC,IAAD,UACA,cAAC,IAAD,UACI,cAAC,IAAD,CACA6E,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAElC,MAAO,MAAOK,OAAQ,IACxDhD,QAAS67B,EACT79B,MAAO01B,EAAS19B,OAChBkI,YAAaA,EACbD,KAAMA,EACN6G,YAAa,CACTC,WAAY,CACZ,aAAc,iBAEdC,QAAQ,GAGZ7G,aA7FC,SAAC7G,EAAO2N,GAC7By2B,EAAQz2B,IA6FYC,oBA1FQ,SAAC5N,GAC7BqkC,EAAex2B,SAAS7N,EAAM0B,OAAOgK,MAAO,KAC5C04B,EAAQ,IAyFYt2B,iBAAkBtH,mB,gHCxYjCu+B,GAlBoB,IAAIpmC,YAAU,oCACf,IAAIA,YAAU,+CACf,IAAIA,YAAU,+CACd,IAAIA,YAAU,+CACb,IAAIA,YAAU,+CACH,IAAIA,YAAU,gDAazB,gDACnBqmC,EAAsB,8CACtBC,EAAsB,+C,uBCoD5B,IAAMC,EAAwF,CACnGC,QAAS,CAAEC,UAAU,EAAMC,MAAM,EAAMC,QAAS,wBAChDC,QAAS,CAAEH,UAAU,EAAMC,MAAM,EAAMC,QAAS,qBAChDE,OAAQ,CAAEJ,UAAU,EAAOC,MAAM,EAAOC,QAAS,qBACjDG,WAAY,CAAEL,UAAU,EAAOC,MAAM,EAAMC,QAAS,+BAGzCI,EAAwB,CACnCnK,OAAQ,MACRx3B,KAAM,gBACN4hC,YAAa,mCACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAGIC,EAAiB,CAC5BC,KAAM,CACJvK,OAAQ,OACRx3B,KAAM,iBACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETI,IAAK,CACHzK,OAAQ,MACRx3B,KAAM,kBACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETK,IAAK,CACH1K,OAAQ,MACRx3B,KAAM,mBACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETM,KAAM,CACJ3K,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETO,MAAO,CACL5K,OAAQ,QACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETQ,KAAM,CACJ7K,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETS,MAAO,CACL9K,OAAQ,QACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETU,IAAK,CACH/K,OAAQ,MACRx3B,KAAM,cACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETW,KAAM,CACJhL,OAAQ,OACRx3B,KAAM,oBACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETY,IAAK,CACHjL,OAAQ,MACRx3B,KAAM,cACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETa,MAAO,CACLlL,OAAQ,QACRx3B,KAAM,gBACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETc,MAAO,CACLnL,OAAQ,QACRx3B,KAAM,gBACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETe,IAAK,CACHpL,OAAQ,MACRx3B,KAAM,cACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETgB,KAAM,CACJrL,OAAQ,OACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETiB,MAAO,CACLtL,OAAQ,QACRx3B,KAAM,gBACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETkB,IAAK,CACHvL,OAAQ,MACRx3B,KAAM,cACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETmB,IAAK,CACHxL,OAAQ,MACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAEToB,IAAK,CACHzL,OAAQ,MACRx3B,KAAM,cACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETqB,KAAM,CACJ1L,OAAQ,OACRx3B,KAAM,YACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETsB,KAAM,CACJ3L,OAAQ,OACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETuB,MAAO,CACL5L,OAAQ,QACRx3B,KAAM,gBACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETwB,IAAK,CACH7L,OAAQ,MACRx3B,KAAM,cACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETyB,KAAM,CACJ9L,OAAQ,OACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET0B,KAAM,CACJ/L,OAAQ,OACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET2B,KAAM,CACJhM,OAAQ,OACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET4B,KAAM,CACJjM,OAAQ,OACRx3B,KAAM,UACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET6B,IAAK,CACHlM,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET8B,KAAM,CACJnM,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET+B,IAAK,CACHpM,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETgC,IAAK,CACHrM,OAAQ,MACRx3B,KAAM,UACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETiC,MAAO,CACLtM,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETkC,KAAM,CACJvM,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,8CACVH,KAAM,CAAC,YAETmC,KAAM,CACJxM,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAEToC,MAAO,CACLzM,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CAEVlP,QACE,2oBACFoR,KAAM,CACJC,QAAS,yBACTC,WAAY,wCAEdC,QAAS,CACPC,QAAS,gCACTC,SAAU,yBACVC,OAAQ,uCAEV3C,KAAM,CAAC,YAET4C,KAAM,CACJjN,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET6C,IAAK,CACHlN,OAAQ,MACRx3B,KAAM,YACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CAEVlP,QACE,4rDACFoR,KAAM,CACJC,QAAS,iCACTC,WAAY,6DAEdC,QAAS,CACPC,QAAS,kCACTC,SAAU,2BACVC,OAAQ,mCAEV3C,KAAM,CAAC,YAET8C,MAAO,CACLnN,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET+C,IAAK,CACHpN,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CAEV6C,WAAY,+EACZ/R,QACE,k3BACFoR,KAAM,CACJC,QAAS,yBACTC,WAAY,6DAEdC,QAAS,CACPC,QAAS,iCACTC,SAAU,0BACVC,OAAQ,kCAEV3C,KAAM,CAAC,YAETiD,KAAM,CACJtN,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CAEV6C,WAAY,+EACZ/R,QACE,goBACFoR,KAAM,CACJC,QAAS,2BACTD,KAAM,iCAERG,QAAS,CACPC,QAAS,qCACTC,SAAU,8BACVC,OAAQ,iCAEV3C,KAAM,CAAC,YAETkD,IAAK,CACHvN,OAAQ,MACRx3B,KAAM,mBACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETmD,IAAK,CACHxN,OAAQ,MACRx3B,KAAM,kBACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAEToD,KAAM,CACJzN,OAAQ,OACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETqD,OAAQ,CACN1N,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETsD,QAAS,CACP3N,OAAQ,UACRx3B,KAAM,UACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETuD,KAAM,CACJ5N,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CAEV6C,WAAY,6EACZ/R,QACE,ycACFoR,KAAM,CACJC,QAAS,oBACTC,WAAY,mCAEdC,QAAS,CACPC,QAAS,+BACTC,SAAU,wBACVC,OAAQ,+BACRa,QAAS,iCAEXxD,KAAM,CAAC,YAETyD,IAAK,CACH9N,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET0D,KAAM,CACJ/N,OAAQ,OACRx3B,KAAM,6BACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET2D,IAAK,CACHhO,OAAQ,MACRx3B,KAAM,eACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET4D,KAAM,CACJjO,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET6D,KAAM,CACJlO,OAAQ,OACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET8D,IAAK,CACHnO,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAET+D,MAAO,CACLpO,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CAEV6C,WAAY,kFACZ/R,QACE,mmBACFoR,KAAM,CACJC,QAAS,yBACTC,WAAY,0DAEdC,QAAS,CACPC,QAAS,gCACTC,SAAU,6BACVC,OAAQ,gCACRa,QAAS,+BACTQ,OAAQ,sCACRC,QAAS,mEAEXjE,KAAM,CAAC,YAETkE,MAAO,CACLvO,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CAEV6C,WAAY,kFACZ/R,QACE,mmBACFoR,KAAM,CACJC,QAAS,yBACTC,WAAY,0DAEdC,QAAS,CACPC,QAAS,gCACTC,SAAU,6BACVC,OAAQ,gCACRa,QAAS,+BACTQ,OAAQ,sCACRC,QAAS,mEAEXjE,KAAM,CAAC,YAETmE,MAAO,CACLxO,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,8CAEV6C,WAAY,mFACZ/R,QACE,y/BACFoR,KAAM,CACJC,QAAS,2BAGXE,QAAS,CACPgB,QAAS,sCACTb,OAAQ,+BACRF,QAAS,oCACTuB,OAAQ,sCAEVhE,KAAM,CAAC,YAEToE,KAAM,CACJzO,OAAQ,OACRx3B,KAAM,WACN4hC,YAAa,+CACb9hB,SAAU,EAEV+kB,WAAY,gFACZ/R,QACE,kVACFoR,KAAM,CACJC,QAAS,4BAGXE,QAAS,CACPgB,QAAS,8BACTb,OAAQ,+BACRF,QAAS,gCAEXzC,KAAM,CAAC,YAETqE,IAAK,CACH1O,OAAQ,MACRx3B,KAAM,YACN4hC,YAAa,+CACb9hB,SAAU,EAEV+kB,WAAY,iFACZ/R,QACE,2SACFoR,KAAM,CACJC,QAAS,yBAGXE,QAAS,CACPgB,QAAS,8BACTb,OAAQ,+BACRF,QAAS,gCACTC,SAAU,kCAEZ1C,KAAM,CAAC,YAETsE,OAAQ,CACN3O,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,GACVH,KAAM,CAAC,YAETuE,MAAO,CACL5O,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETwE,MAAO,CACL7O,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACVkiB,SAAU,+CACVH,KAAM,CAAC,YAETyE,IAAK,CACH9O,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET0E,KAAM,CACJ/O,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET2E,KAAM,CACJhP,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET4E,IAAK,CACHjP,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET6E,IAAK,CACHlP,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET8E,KAAM,CACJnP,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET+E,KAAM,CACJpP,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETgF,IAAK,CACHrP,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETiF,IAAK,CACHtP,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETkF,IAAK,CACHvP,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETmF,IAAK,CACHxP,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAEToF,IAAK,CACHzP,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETqF,IAAK,CACH1P,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETsF,KAAM,CACJ3P,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETuF,KAAM,CACJ5P,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETwF,IAAK,CACH7P,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETyF,KAAM,CACJ9P,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET0F,KAAM,CACJ/P,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET2F,KAAM,CACJhQ,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET4F,OAAQ,CACNjQ,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET6F,MAAO,CACLlQ,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET8F,QAAS,CACPnQ,OAAQ,UACRx3B,KAAM,UACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET+F,KAAM,CACJpQ,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETgG,GAAI,CACFrQ,OAAQ,KACRx3B,KAAM,KACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETiG,OAAQ,CACNtQ,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETkG,MAAO,CACLvQ,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETmG,MAAO,CACLxQ,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAEToG,OAAQ,CACNzQ,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETqG,IAAK,CACH1Q,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETsG,KAAM,CACJ3Q,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETuG,IAAK,CACH5Q,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETwG,OAAQ,CACN7Q,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETyG,OAAQ,CACN9Q,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET0G,KAAM,CACJ/Q,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET2G,KAAM,CACJhR,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET4G,IAAK,CACHjR,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET6G,MAAO,CACLlR,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET8G,MAAO,CACLnR,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET+G,IAAK,CACHpR,OAAQ,MACRx3B,KAAM,YACN4hC,YAAa,+CACb9hB,SAAU,EAEV+kB,WAAY,iFACZ/R,QACE,seACFoR,KAAM,CACJC,QAAS,2BAGXE,QAAS,CACPC,QAAS,mCACTC,SAAU,6BAEZ1C,KAAM,CAAC,YAETgH,KAAM,CACJrR,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETiH,KAAM,CACJtR,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETkH,OAAQ,CACNvR,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETmH,SAAU,CACRxR,OAAQ,WACRx3B,KAAM,WACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAEToH,KAAM,CACJzR,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETqH,IAAK,CACH1R,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETsH,GAAI,CACF3R,OAAQ,KACRx3B,KAAM,KACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETuH,KAAM,CACJ5R,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETwH,IAAK,CACH7R,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETyH,KAAM,CACJ9R,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET0H,MAAO,CACL/R,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET2H,IAAK,CACHhS,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EAEV+kB,WAAY,+EACZ/R,QACE,gQACFoR,KAAM,CACJC,QAAS,wBAGXE,QAAS,CACPC,QAAS,8BACTC,SAAU,uBACVc,QAAS,iCAGXxD,KAAM,CAAC,YAET4H,KAAM,CACJjS,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EAEV+kB,WAAY,6EACZ/R,QACE,2LACFoR,KAAM,CACJC,QAAS,sBAGXE,QAAS,CACPC,QAAS,oCACTC,SAAU,6BACVc,QAAS,4BAGXxD,KAAM,CAAC,YAET6H,MAAO,CACLlS,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET8H,MAAO,CACLnS,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET+H,MAAO,CACLpS,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETgI,MAAO,CACLrS,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETiI,KAAM,CACJtS,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETkI,OAAQ,CACNvS,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETmI,IAAK,CACHxS,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAEToI,IAAK,CACHzS,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETqI,MAAO,CACL1S,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETsI,KAAM,CACJ3S,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETuI,KAAM,CACJ5S,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETwI,KAAM,CACJ7S,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETyI,IAAK,CACH9S,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET0I,IAAK,CACH/S,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET2I,MAAO,CACLhT,OAAQ,QACRx3B,KAAM,QACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET4I,KAAM,CACJjT,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET6I,IAAK,CACHlT,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET8I,IAAK,CACHnT,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET+I,KAAM,CACJpT,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETgJ,IAAK,CACHrT,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETiJ,GAAI,CACFtT,OAAQ,KACRx3B,KAAM,KACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETkJ,KAAM,CACJvT,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETmJ,KAAM,CACJxT,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EAEV+kB,WAAY,oFACZ/R,QACE,qYACFoR,KAAM,CACJC,QAAS,2BAGXE,QAAS,CACPC,QAAS,oCACTC,SAAU,6BACVc,QAAS,iCAGXxD,KAAM,CAAC,YAEToJ,KAAM,CACJzT,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETqJ,IAAK,CACH1T,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETsJ,IAAK,CACH3T,OAAQ,MACRx3B,KAAM,MACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETuJ,KAAM,CACJ5T,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETwJ,KAAM,CACJ7T,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAETyJ,KAAM,CACJ9T,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET0J,KAAM,CACJ/T,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET2J,KAAM,CACJhU,OAAQ,OACRx3B,KAAM,OACN4hC,YAAa,+CACb9hB,SAAU,EACV+hB,KAAM,CAAC,YAET4J,OAAQ,CACNjU,OAAQ,SACRx3B,KAAM,SACN4hC,YAAa,8CACb9hB,SAAU,EACV+hB,KAAM,CAAC,aAIE6J,EAAoB,CAC/B,YAAa,CACXlU,OAAQ,YACRx3B,KAAM,kBACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOM,OAEhBR,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,UAAW,CACT0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,aAAc,CACZ0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOU,MAClBmJ,GAAG,eAAM7J,EAAOM,OAEhBR,YAAa,+CACb9hB,SAAUgiB,EAAOU,KAAK1iB,UAExB,YAAa,CACX0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOI,KAClByJ,GAAG,eAAM7J,EAAOM,OAEhBR,YAAa,8CACb9hB,SAAUgiB,EAAOI,IAAIpiB,UAEvB,WAAY,CACV0X,OAAQ,WACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,UAAW,CACT0X,OAAQ,UACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAGvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,kBACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOM,OAEhBR,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOI,KAEhBN,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAGvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO2B,MAClBkI,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO2B,KAAK3jB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO8B,KAClB+H,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO8B,IAAI9jB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO6B,MAClBgI,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO6B,KAAK7jB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO4B,KAClBiI,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAU,GAEZ,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM0F,GACXgK,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAU6hB,EAAW7hB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOS,KAClBoJ,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOS,IAAIziB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOkB,KAClB2I,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOkB,IAAIljB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOmB,KAClB0I,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOmB,IAAInjB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOG,KAClB0J,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOG,IAAIniB,UAEvB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOY,OAClBiJ,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOY,MAAM5iB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOqB,MAClBwI,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOqB,KAAKrjB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOU,MAClBmJ,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOU,KAAK1iB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOI,KAClByJ,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOI,IAAIpiB,UAEvB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOgC,OAClB6H,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOgC,MAAMhkB,UAEzB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM0F,GACXgK,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAU6hB,EAAW7hB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOS,KAClBoJ,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOS,IAAIziB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOkB,KAClB2I,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOkB,IAAIljB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOmB,KAClB0I,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOmB,IAAInjB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOG,KAClB0J,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOG,IAAIniB,UAEvB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOY,OAClBiJ,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOY,MAAM5iB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOqB,MAClBwI,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOqB,KAAKrjB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOU,MAClBmJ,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOU,KAAK1iB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOI,KAClByJ,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,8CACb9hB,SAAUgiB,EAAOI,IAAIpiB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOS,KAClBoJ,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAOS,IAAIziB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOmB,KAClB0I,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAOmB,IAAInjB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOG,KAClB0J,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAOG,IAAIniB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOY,OAClBiJ,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAOY,MAAM5iB,UAEzB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOqB,MAClBwI,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAOqB,KAAKrjB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOU,MAClBmJ,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAOU,KAAK1iB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOI,KAClByJ,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAOI,IAAIpiB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOkB,KAClB2I,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAOkB,IAAIljB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOkC,MAClB2H,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOkC,KAAKlkB,UAExB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOmC,OAClB0H,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOmC,MAAMnkB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO2C,MAClBkH,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO2C,KAAK3kB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO4C,KAClBiH,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO4C,IAAI5kB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOiC,MAClB4H,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOiC,KAAKjkB,UAExB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOa,OAClBgJ,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,8CACb9hB,SAAUgiB,EAAOa,MAAM7iB,UAEzB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO6C,OAClBgH,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO6C,MAAM7kB,UAEzB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOiD,KAClB4G,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOiD,IAAIjlB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO8C,KAClB+G,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO8C,IAAI9kB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOkD,KAClB2G,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOkD,IAAIllB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOgD,MAClB6G,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOgD,KAAKhlB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOmD,MAClB0G,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOmD,KAAKnlB,UAExB,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAOoD,QAClByG,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOoD,OAAOplB,UAE1B,kBAAmB,CACjB0X,OAAQ,eACRx3B,KAAM,kBACNi8B,KAAK,eAAM6F,EAAOqD,SAClBwG,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOqD,QAAQrlB,UAE3B,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOkB,KAEhBpB,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAM7J,EAAOI,KAEhBN,YAAa,8CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO+B,KAClB8H,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAO+B,IAAI/jB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOwD,KAClBqG,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOwD,IAAIxlB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOsD,MAClBuG,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,8CACb9hB,SAAUgiB,EAAOsD,KAAKtlB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOyD,MAClBoG,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOyD,KAAKzlB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOyD,MAClBoG,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAOyD,KAAKzlB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO4C,KAClBiH,GAAG,eAAM7J,EAAO0D,KAEhB5D,YAAa,+CACb9hB,SAAUgiB,EAAO4C,IAAI5kB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO2D,MAClBkG,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO2D,KAAK3lB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO4D,MAClBiG,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO4D,KAAK5lB,UAExB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO8D,OAClB+F,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO8D,MAAM9lB,UAEzB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOiE,OAClB4F,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOiE,MAAMjmB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO8D,OAClB+F,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO8D,MAAM9lB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOiE,OAClB4F,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOiE,MAAMjmB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOa,OAClBgJ,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,8CACb9hB,SAAUgiB,EAAOa,MAAM7iB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO6C,OAClBgH,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO6C,MAAM7kB,UAEzB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOgD,MAClB6G,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOgD,KAAKhlB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO4C,KAClBiH,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO4C,IAAI5kB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOmC,OAClB0H,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOmC,MAAMnkB,UAEzB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO8C,KAClB+G,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO8C,IAAI9kB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOsD,MAClBuG,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOsD,KAAKtlB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOiC,MAClB4H,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOiC,KAAKjkB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOI,KAClByJ,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAOI,IAAIpiB,UAEvB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOsE,OAClBuF,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOsE,MAAMtmB,UAEzB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOkE,OAClB2F,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOkE,MAAMlmB,UAEzB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOuE,OAClBsF,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOuE,MAAMvmB,UAEzB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOwE,KAClBqF,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOwE,IAAIxmB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOyE,MAClBoF,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOyE,KAAKzmB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOyD,MAClBoG,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOyD,KAAKzlB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO0E,MAClBmF,GAAG,eAAM7J,EAAOyD,MAEhB3D,YAAa,+CACb9hB,SAAUgiB,EAAO0E,KAAK1mB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOuE,OAClBsF,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,8CACb9hB,SAAUgiB,EAAOuE,MAAMvmB,UAEzB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO2E,KAClBkF,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO2E,IAAI3mB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO4E,KAClBiF,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO4E,IAAI5mB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOI,KAClByJ,GAAG,eAAM7J,EAAOyD,MAEhB3D,YAAa,+CACb9hB,SAAUgiB,EAAOI,IAAIpiB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOyD,MAClBoG,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOyD,KAAKzlB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOG,KAClB0J,GAAG,eAAM7J,EAAOyD,MAEhB3D,YAAa,+CACb9hB,SAAUgiB,EAAOG,IAAIniB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO8E,MAClB+E,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAO8E,KAAK9mB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOsF,MAClBuE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOsF,KAAKtnB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO+E,KAClB8E,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAO+E,IAAI/mB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO2E,KAClBkF,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO2E,IAAI3mB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOuF,KAClBsE,GAAG,eAAMhK,GAETC,YAAa,8CACb9hB,SAAUgiB,EAAOuF,IAAIvnB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOuF,KAClBsE,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOuF,IAAIvnB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOuF,KAClBsE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOuF,IAAIvnB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOiF,KAClB4E,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOiF,IAAIjnB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOwF,MAClBqE,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOwF,KAAKxnB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOwF,MAClBqE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOwF,KAAKxnB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO0F,MAClBmE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO0F,KAAK1nB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOqF,MAClBwE,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAOqF,KAAKrnB,UAExB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO2F,QAClBkE,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAO2F,OAAO3nB,UAE1B,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAO2F,QAClBkE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO2F,OAAO3nB,UAE1B,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO4F,OAClBiE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO4F,MAAM5nB,UAEzB,kBAAmB,CACjB0X,OAAQ,eACRx3B,KAAM,kBACNi8B,KAAK,eAAM6F,EAAO6F,SAClBgE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO6F,QAAQ7nB,UAE3B,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOoF,KAClByE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOoF,IAAIpnB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOmD,MAClB0G,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOmD,KAAKnlB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOkF,KAClB2E,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOkF,IAAIlnB,UAEvB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAO+F,IAClB8D,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO+F,GAAG/nB,UAEtB,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAOgG,QAClB6D,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOgG,OAAOhoB,UAE1B,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOiG,OAClB4D,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOiG,MAAMjoB,UAEzB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOkG,OAClB2D,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOkG,MAAMloB,UAEzB,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAOmG,QAClB0D,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOmG,OAAOnoB,UAE1B,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOgF,KAClB6E,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOgF,IAAIhnB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOoG,KAClByD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,8CACb9hB,SAAUgiB,EAAOoG,IAAIpoB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOqG,MAClBwD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOqG,KAAKroB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOsG,KAClBuD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOsG,IAAItoB,UAEvB,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAOuG,QAClBsD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOuG,OAAOvoB,UAE1B,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAOwG,QAClBqD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOwG,OAAOxoB,UAE1B,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOyG,MAClBoD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOyG,KAAKzoB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOmE,MAClB0F,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOmE,KAAKnmB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOmE,MAClB0F,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOmE,KAAKnmB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO2G,KAClBkD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO2G,IAAI3oB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO8F,MAClB+D,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO8F,KAAK9nB,UAExB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO4G,OAClBiD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO4G,MAAM5oB,UAEzB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO0G,MAClBmD,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAO0G,KAAK1oB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO0G,MAClBmD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO0G,KAAK1oB,UAExB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO6G,OAClBgD,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO6G,MAAM7oB,UAEzB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOoE,KAClByF,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOoE,IAAIpmB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO+G,MAClB8C,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO+G,KAAK/oB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOgH,MAClB6C,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAOgH,KAAKhpB,UAExB,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAOiH,QAClB4C,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOiH,OAAOjpB,UAE1B,mBAAoB,CAClB0X,OAAQ,gBACRx3B,KAAM,mBACNi8B,KAAK,eAAM6F,EAAOkH,UAClB2C,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOkH,SAASlpB,UAE5B,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOyH,OAClBoC,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOyH,MAAMzpB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOwH,MAClBqC,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOwH,KAAKxpB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOuH,KAClBsC,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOuH,IAAIvpB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOsH,MAClBuC,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOsH,KAAKtpB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOqH,IAClBwC,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOqH,GAAGrpB,UAEtB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOoH,KAClByC,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOoH,IAAIppB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOmH,MAClB0C,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOmH,KAAKnpB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO8G,KAClB+C,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO8G,IAAI9oB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO0H,KAClBmC,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO0H,IAAI1pB,UAEvB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO4H,OAClBiC,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO4H,MAAM5pB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO4H,OAClBiC,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO4H,MAAM5pB,UAEzB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO6H,OAClBgC,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO6H,MAAM7pB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO2H,MAClBkC,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO2H,KAAK3pB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOqF,MAClBwE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOqF,KAAKrnB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOmI,KAClB0B,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOmI,IAAInqB,UAEvB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOoI,OAClByB,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOoI,MAAMpqB,UAEzB,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAOiI,QAClB4B,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOiI,OAAOjqB,UAE1B,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOqI,MAClBwB,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAOqI,KAAKrqB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOsI,MAClBuB,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,8CACb9hB,SAAUgiB,EAAOsI,KAAKtqB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOwI,KAClBqB,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOwI,IAAIxqB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOyI,KAClBoB,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOyI,IAAIzqB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO4I,KAClBiB,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO4I,IAAI5qB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO6I,KAClBgB,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO6I,IAAI7qB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO2I,MAClBkB,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO2I,KAAK3qB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAO8I,MAClBe,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO8I,KAAK9qB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO2I,MAClBkB,GAAG,eAAM7J,EAAO+B,KAEhBjC,YAAa,+CACb9hB,SAAUgiB,EAAO2I,KAAK3qB,UAExB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAOsE,OAClBuF,GAAG,eAAM7J,EAAOK,MAEhBP,YAAa,+CACb9hB,SAAUgiB,EAAOsE,MAAMtmB,UAEzB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO6E,MAClBgF,GAAG,eAAM7J,EAAOsE,OAEhBxE,YAAa,+CACb9hB,SAAUgiB,EAAO6E,KAAK7mB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO+I,KAClBc,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO+I,IAAI/qB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOiJ,MAClBY,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOiJ,KAAKjrB,UAExB,gBAAiB,CACf0X,OAAQ,aACRx3B,KAAM,gBACNi8B,KAAK,eAAM6F,EAAO0I,OAClBmB,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO0I,MAAM1qB,UAEzB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOmJ,MAClBU,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOmJ,KAAKnrB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOkJ,MAClBW,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOkJ,KAAKlrB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOqJ,KAClBQ,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOqJ,IAAIrrB,UAEvB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOoJ,KAClBS,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOoJ,IAAIprB,UAEvB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOuJ,MAClBM,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOuJ,KAAKvrB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAOwJ,MAClBK,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAOwJ,KAAKxrB,UAExB,eAAgB,CACd0X,OAAQ,YACRx3B,KAAM,eACNi8B,KAAK,eAAM6F,EAAOwJ,MAClBK,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAOwJ,KAAKxrB,UAExB,cAAe,CACb0X,OAAQ,WACRx3B,KAAM,cACNi8B,KAAK,eAAM6F,EAAO0J,MAClBG,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAO0J,KAAK1rB,UAExB,aAAc,CACZ0X,OAAQ,UACRx3B,KAAM,aACNi8B,KAAK,eAAM6F,EAAOuH,KAClBsC,GAAG,eAAMhK,GAETC,YAAa,+CACb9hB,SAAUgiB,EAAOuH,IAAIvpB,UAEvB,iBAAkB,CAChB0X,OAAQ,cACRx3B,KAAM,iBACNi8B,KAAK,eAAM6F,EAAO2J,QAClBE,GAAG,eAAM7J,EAAOO,MAEhBT,YAAa,+CACb9hB,SAAUgiB,EAAO2J,OAAO3rB,WAoC5B,IAAM8rB,EAAa,CACjB,+CACA,+CACA,gDAGF,SAASC,EAAe/V,GACtB,OAAOA,EAAOtuB,QAAO,SAACrI,GAAD,OAAWysC,EAAWE,SAAS3sC,EAAKzE,YAuB3D,IAAMqxC,EAAgC,CAACjK,EAAO8G,IAAIhH,aAElD,SAASoK,EAAelW,GACtBA,EAAO/uB,SAAQ,SAACklC,GACd,IAAM5rC,EAAQuwB,OAAOC,OAAOiR,GAAQ/K,MAAK,SAAC53B,GAAD,OAAUA,EAAKyiC,cAAgBqK,EAAUvqB,QAC9ErhB,IACFA,EAAM6rC,OAAN,uCAA+C7rC,EAAMuhC,YAArD,YAKN,SAASuK,EAAoBrW,GAC3BA,EAAO/uB,SAAQ,SAACklC,GACd,IAAIA,EAAUpK,OAAQoK,EAAUpK,KAAKiK,SAAS,YAG9C,GAAKlb,OAAOC,OAAOiR,GAAQ/K,MAAK,SAAC53B,GAAD,OAAUA,EAAKyiC,cAAgBqK,EAAUvxC,WASlE,CACL,IAAM2F,EAAQuwB,OAAOC,OAAOiR,GAAQ/K,MAAK,SAAC53B,GAAD,OAAUA,EAAKyiC,cAAgBqK,EAAUvxC,WAC9E2F,EAAMm3B,SAAWyU,EAAUzU,QAAWn3B,EAAMwhC,KAAKiK,SAAS,aAC5DzrC,EAAMm3B,OAASyU,EAAUzU,OACzBn3B,EAAML,KAAOisC,EAAUjsC,KACvBK,EAAMyf,SAAWmsB,EAAUnsB,SAC3Bzf,EAAMwhC,KAAKl7B,KAAK,WAElB,IAAMylC,EAAWxb,OAAOC,OAAOiR,GAAQ/K,MAAK,SAAC53B,GAAD,OAAUA,EAAKyiC,cAAgBqK,EAAUvxC,WACjF0xC,IAAaL,EAAoBD,SAASG,EAAUvxC,WACtD0xC,EAASF,OAASD,EAAUtqB,cAlB9BmgB,EAAOmK,EAAUzU,OAASyU,EAAUvxC,QAAU,UAAY,CACxD88B,OAAQyU,EAAUzU,OAClBx3B,KAAMisC,EAAUjsC,KAChB4hC,YAAaqK,EAAUvxC,QACvBolB,SAAUmsB,EAAUnsB,SACpBosB,OAAQD,EAAUtqB,QAClBkgB,KAAM,CAAC,cAiBT3kC,OAAO47B,aAAauT,eACtBnvC,OAAO47B,aAAauT,cAAcpN,MAAM,OAAOl4B,SAAQ,SAACulC,GAClDA,IAAa3K,EAAWC,YAAaD,EAAWE,KAAKl7B,KAAK,WAE5DiqB,OAAO5M,KAAK8d,GAAQ/6B,SAAQ,SAAC5H,GACvB2iC,EAAO3iC,GAAMyiC,cAAgB0K,GAC/BxK,EAAO3iC,GAAM0iC,KAAKl7B,KAAK,iBCl8F5B,SAASm1B,EAAgBH,GAC9B,IAAMC,EAAO2Q,EAAMxV,MAAK,SAAC6E,GAAD,OAAUA,EAAKD,SAAWA,KAElD,OAAIC,EACK4Q,YAAU5Q,GAGZA,GD+0FT,WACE,IAAM6Q,EAAevvC,OAAO47B,aAAa4T,mBACnCC,GAAgB,OAACF,QAAD,IAACA,IAAgB,IAAIxN,MAAM,OACjD,GAAI0N,EAAchyC,OAAS,IAAM,EAC/BuC,OAAO47B,aAAaI,WAAW,2BAE/B,IADM,IAAD,WACI32B,GACP,IAAMvC,EAAO2sC,EAAsB,EAARpqC,EAAY,GACjCq/B,EAAc+K,EAAsB,EAARpqC,EAAY,GACxCud,EAAW6sB,EAAsB,EAARpqC,EAAY,GACtCquB,OAAOC,OAAOiR,GAAQ/K,MAAK,SAAC53B,GAAD,OAAUA,EAAKyiC,cAAgBA,KAS5DhR,OAAOC,OAAOiR,GACZ/K,MAAK,SAAC53B,GAAD,OAAUA,EAAKyiC,cAAgBA,KACpCC,KAAKiK,SAAS,YAEjBlb,OAAOC,OAAOiR,GACX/K,MAAK,SAAC53B,GAAD,OAAUA,EAAKyiC,cAAgBA,KACpCC,KAAKl7B,KAAK,WAdbm7B,EAAO9hC,EAAO4hC,EAAc,qBAAuB,CACjD5hC,OACAw3B,OAAQx3B,EACR8f,SAAUhW,SAASgW,GACnB8hB,cACAC,KAAM,CAAC,aAVJt/B,EAAQ,EAAGA,EAAQa,KAAKwpC,MAAMD,EAAchyC,OAAS,GAAI4H,GAAS,EAAI,EAAtEA,GAuHbsqC,GAlFEnsC,MAAM,kDACHyN,KADH,uCACQ,WAAOpN,GAAP,SAAAa,EAAA,kEACJuqC,EADI,KACgBN,EADhB,SACsC9qC,EAASC,OAD/C,mBACuD80B,OADvD,8EADR,uDAIGxoB,OAAM,WACL5M,MAAM,kGACHyN,MAAK,SAAUpN,GACd,OAAOA,EAASC,UAEjBmN,MAAK,SAAU2+B,GACdX,EAAoBN,EAAeiB,EAAOhX,eAIlDp1B,MAAM,qDAAqDyN,KAA3D,uCAAgE,WAAOpN,GAAP,SAAAa,EAAA,kEAC9DoqC,EAD8D,KAC/Cpb,OAD+C,SAC1B7vB,EAASC,OADiB,mBACT+rC,IADS,UACxClc,OADwC,0EAAhE,uDA0DF,WAAkC,IAAD,IAEzBmc,GADgB,UAAG9vC,OAAO47B,aAAamU,wBAAvB,QAA2C,IACThO,MAAM,OAF/B,cAGN+N,GAHM,IAG/B,2BAA+C,CAAC,IAArCE,EAAoC,QACzC/L,EAAY+L,KAAgB/L,EAAY+L,GAAY7L,WACtDF,EAAY+L,GAAY5L,MAAO,IALJ,+BAYjC6L,GCp7FO,IAAMZ,EAAoB,CAE/B,CACEvsC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAG1B,CACE5tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAG1B,CACE5tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,cACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,8CACpBC,uBAAwB,+CAE1B,CACE5tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,aACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,YACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAG1B,CACE5tC,KAAM,MACNy6B,GAAG,eAAMqH,EAAO+B,KAChBuJ,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAG1B,CACE5tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO2B,MACrB4J,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWqoB,EAEXtF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO8B,KACrByJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWqoB,EAEXtF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO6B,MACrB0J,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWqoB,EAEXtF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOgC,OACrBuJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,8CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkC,MACrBqJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOmC,OACrBoJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,8CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOiC,MACrBsJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO4C,KACrB2I,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO2C,MACrB4I,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOa,OACrB0K,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,8CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO6C,OACrB0I,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO8C,KACrByI,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkD,KACrBqI,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOgD,MACrBuI,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOmD,MACrBoI,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOsD,MACrBiI,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,8CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBwJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWooB,EAEXrF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,gDAE1B,CACE5tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO4D,MACrB2H,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,8CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOiC,MACrBsJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOsD,MACrBiI,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOmC,OACrBoJ,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO4C,KACrB2I,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,+CAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOgD,MACrBuI,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO8C,KACrByI,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,8CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO6C,OACrB0I,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOa,OACrB0K,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO8D,OACrByH,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOiE,OACrBsH,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO8D,OACrByH,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOiE,OACrBsH,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkE,OACrBqH,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,8CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOuE,OACrBgH,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,8CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOuE,OACrBgH,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,8CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO6E,MACrB0G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO0E,MACrB6G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO0E,MACrB6G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,8CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO0E,MACrB6G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO0E,MACrB6G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,8CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO0E,MACrB6G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO0E,MACrB6G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO2E,KACrB4G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,8CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO2E,KACrB4G,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOuF,KACrBgG,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOuF,KACrBgG,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOuF,KACrBgG,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOwF,MACrB+F,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,UACNy6B,GAAG,eAAMiR,EAAU,eACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAO4B,KACrB2J,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOqF,MACrBkG,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,+CAE3B,CACE9tC,KAAM,YACNy6B,GAAG,eAAMiR,EAAU,iBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,eACNy6B,GAAG,eAAMiR,EAAU,oBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,WACNy6B,GAAG,eAAMiR,EAAU,gBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,+CAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOiG,OACrBsF,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,aACNy6B,GAAG,eAAMiR,EAAU,kBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,8CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,cACNy6B,GAAG,eAAMiR,EAAU,mBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,8CACpBC,uBAAwB,+CACxBE,wBAAyB,gDAE3B,CACE9tC,KAAM,cACNy6B,GAAG,eAAMiR,EAAU,mBACnB0B,OAAO,eAAMtL,EAAO+B,KACpBgK,QAAQ,eAAM/L,EAAOkB,KACrBqK,SAAS,EAETC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,QAAS,EACT70B,UAAWsoB,EAEXvF,OAAQ,+CACR+R,cAAe,+CACfC,mBAAoB,+CACpBC,uBAAwB,+CACxBE,wBAAyB,iDAE3BtrC,MAAK,SAACZ,EAAGC,GAAJ,OAAwB,IAAbD,EAAE0rC,SAAgC,IAAbzrC,EAAEyrC,OAAmB,GAAK,M,gCC93C1D,SAASS,EAAmB1zC,GAyCjC,OAhBA,SAAiC+xB,GAC/B,IAGI,OAAIA,GAAU,GAVSzkB,EAYHykB,GAXpBhpB,KAAKwpC,MAAMjlC,KAAWA,GACfA,EAAM8H,WAAWwvB,MAAM,KAAK,GAAGtkC,QACnC,GAS2B,EACnByxB,EAAO3c,WAAWsB,QAAQ,0BAA2B,OAErDqb,GAEFA,EAEV,MAAMpxB,GAAI,OAAOoxB,EAnBF,IAASzkB,EAsBtBqmC,CAAwB3zC,EAAM+xB,QA1CvC,oC","file":"static/js/main.280997bd.chunk.js","sourcesContent":["import React from \"react\"\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nimport { Button, CardActionArea } from '@mui/material';\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\n\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport InsertLinkIcon from '@mui/icons-material/InsertLink';\n\nimport { PublicKey } from '@solana/web3.js';\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n    ) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport function trimAddress(addr: any, trim:any) {\n    let start = addr.substring(0, trim);\n    let end = addr.substring(addr.length - trim);\n    return `${start}...${end}`;\n}\n\nexport function ValidateCurve(address:string){\n    return PublicKey.isOnCurve(new PublicKey(address).toBuffer());\n}\n\nexport function ValidateAddress(address:any){\n    try{\n        if (address){\n            //let base58 = useMemo(() => props?.toBase58(), [props]) || null;\n            if ((address.length >= 32) && \n                (address.length <= 45)){    \n                    return ValidateCurve(address);\n            }\n            return false;\n        }\n    } catch(e){console.log(\"ERR: \"+e)};\n}\n\nexport function MakeLinkableAddress(props:any){\n    const addr = props?.addr || \"\";\n    const trim = props?.trim;\n    const hasextlink = props?.hasextlink || false;\n    const hascopy = props?.hascopy || false;\n    const fontsize = props?.fontsize || \"16px\";\n    const permalink = props?.permalink || false;\n    const isDNS = props?.isDNS || null;\n    \n    let stri_addr = addr;\n    const [open_snackbar, setSnackbarState] = React.useState(false);\n    \n    const handleCopyClick = () => {\n        setSnackbarState(true);\n    };\n\n    const handleCloseSnackbar = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackbarState(false);\n    };\n    \n    if (addr.length > 0){\n        if (trim>0)\n            stri_addr = trimAddress(addr, trim)\n    }\n\n    function ClipboardAction(){\n        if (hascopy){\n            return (\n                <Button size=\"small\" variant=\"text\">\n                    <CopyToClipboard \n                    text={addr} \n                    onCopy={handleCopyClick}\n                    >\n                        <ContentCopyIcon sx={{fontSize:fontsize, mr:0 }} />\n                    </CopyToClipboard>\n                    <Snackbar open={open_snackbar} autoHideDuration={2000} message=\"Copied\">\n                        <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n                        Copied!\n                        </Alert>\n                    </Snackbar>\n                </Button>\n            );\n        } else{\n            return <React.Fragment/>\n        }\n    }\n\n    function PermalinkAction(){\n        if (permalink){\n            return (\n                <Button size=\"small\" variant=\"text\">\n                    <CopyToClipboard \n                    text={window.location.href} \n                    onCopy={handleCopyClick}\n                    >\n                        <InsertLinkIcon sx={{fontSize:fontsize, ml:1 }} />\n                    </CopyToClipboard>\n                    <Snackbar open={open_snackbar} autoHideDuration={2000} message=\"Copied\">\n                        <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n                        Copied!\n                        </Alert>\n                    </Snackbar>\n                </Button>\n            );\n        } else{\n            return <React.Fragment/>\n        }\n    }\n    \n    if (addr.length > 0){\n        if (hasextlink){\n            return ( \n                <React.Fragment>\n                    <ClipboardAction />\n                    <Button size=\"small\" variant=\"text\" component=\"a\" href={`https://explorer.solana.com/address/${addr}`} target=\"_blank\">{stri_addr} <OpenInNewIcon sx={{fontSize:fontsize, ml:1}} /></Button>\n                    <PermalinkAction />\n                </React.Fragment>\n            )\n        } else {\n            return ( \n                <React.Fragment>\n                    <ClipboardAction />\n                    {isDNS ?\n                        <>{addr}</>\n                    :\n                    <Button size=\"small\" variant=\"text\" component=\"a\" href={`https://explorer.solana.com/address/${addr}`} target=\"_blank\">{stri_addr}</Button>\n                    }\n                    <PermalinkAction />\n                </React.Fragment>\n            )\n        }\n    } else{\n        return (\n            <React.Fragment>\n            </React.Fragment>\n        )\n    }\n}","import React, { FC, useCallback, useMemo } from 'react';\nimport { useSession } from \"../../contexts/session\";\n\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { useWallet } from '@solana/wallet-adapter-react';\n\nimport { useSnackbar } from 'notistack';\nimport { ServersView, SettingsView, PortfolioView, GovernanceView } from \"../\";\n\nfunction ConnectedWalletComponet(props) {\n  return (\n    <React.Fragment>\n      <ServersView /> \n      <SettingsView />\n    </React.Fragment>\n  );\n}\n\nfunction BasicComponent(props) {\n  return (\n    <React.Fragment>\n      <PortfolioView />\n      <GovernanceView />\n    </React.Fragment>\n  );\n}\n\nconst RenderDashboardComponents = (props) => {\n  const { publicKey, wallet } = useWallet();\n  const session = props.session;\n  //const publicKey = props.publicKey;\n  const isConnected = session && session.isConnected;\n  const isWallet = session && session.isWallet;\n  \n  // show if connected\n  //if (publicKey){\n      switch(isConnected) {\n      case isWallet: // display only if verified pk in wallet\n        return <React.Fragment><BasicComponent /><ConnectedWalletComponet /></React.Fragment>\n      default:\n        return <BasicComponent />\n      }\n  //}\n}\n\nexport const HomeView = (props) => {\n  const { session, setSession } = useSession();\n  const isConnected = session && session.isConnected;\n  const { publicKey, wallet } = useWallet();\n  const [callstopk, setCallToPk] = React.useState(0);\n  \n  React.useEffect(() => { \n    \n    setCallToPk(callstopk+1);\n\n    //console.log(callstopk+\". RENDER EFFECT SESSION CHANGED: \"+session.publicKey);\n    //console.log(callstopk+\". RENDER EFFECT WALLET PK: \"+publicKey);\n\n    // AT THE MOMENT THE ABOVE IS NOT CHECKED - THIS WILL NEED TO BE MODIFIED TO HANDLE THE SESSION BETTER\n\n    //if (!wallet){\n    //  setSession(null);\n    //}\n  }, [session, publicKey]);\n  \n  return (\n            <div style={{ height: \"100%\", overflow: \"auto\" }}>\n              {wallet ? \n                <Grid container spacing={3}>\n                <RenderDashboardComponents\n                  session={session}\n                />\n              </Grid>\n              :\n              <Grid item xs={12}>\n                <Paper class=\"grape-paper-background\">\n                  <Grid \n                    class=\"grape-paper\" \n                    container\n                    spacing={0}\n                    align=\"center\"\n                    justify=\"center\"\n                    direction=\"column\">\n                    <Grid item>\n                      <Typography \n                        align=\"center\"\n                        variant=\"h3\">\n                        {'Not connected'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>}\n            </div>\n  );\n}\n","import Session from './Session';\nimport { GRAPE_APP_API_URL } from '../components/Tools/constants';\n\nclass UserServer {\n    userServerId: string;\n    userId: string;\n    serverId: string;\n    name: string;\n    logo: string;\n    twitter: string;\n\n    constructor(data: any){\n        this.userServerId = data.userServerId;\n        this.userId = data.userId;\n        this.serverId = data.serverId;\n        this.name = data.name;\n        this.logo = data.logo;\n        this.twitter = data.twitter;\n    }\n\n    static async register(session: Session, serverId: string){\n        try {\n            if (!session) throw new Error('Invalid session');\n\n            const token = session.token;\n            const signature = token.signature;\n            const address = token.address;\n            const publicKey = session.publicKey;\n            const userId = session.userId;\n            const fromTransaction = session.fromTransaction;\n            \n            console.log(\"From Dashboard:\");\n            console.log(JSON.stringify({\n                address,\n                publicKey,\n                signature,\n                userId,\n                fromTransaction\n            }));\n\n            const response = await fetch(`${GRAPE_APP_API_URL}/server/${serverId}/register`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    address,\n                    publicKey,\n                    signature,\n                    userId,\n                    fromTransaction\n                })\n            });\n            const userServer = await response.json();\n            return new UserServer(userServer);\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    static async unregister(session: Session, serverId: string){\n        try {\n            if (!session) throw new Error('Invalid session');\n\n            const token = session.token;\n            const signature = token.signature;\n            const address = token.address;\n            const publicKey = session.publicKey;\n            const userId = session.userId;\n            const fromTransaction = session.fromTransaction;\n            \n            const response = await fetch(`${GRAPE_APP_API_URL}/server/${serverId}/unregister`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    address,\n                    publicKey,\n                    signature,\n                    userId,\n                    fromTransaction\n                })\n            });\n\n            return true;\n        } catch (err) {\n            console.log(err);\n        }\n    }\n}\n\nexport default UserServer;","import * as React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { useSession } from \"../../contexts/session\";\nimport UserServer from '../../models/UserServer';\nimport TwitterFeed from '../Feed/TwitterFeed';\nimport PropTypes from 'prop-types';\nimport { visuallyHidden } from '@mui/utils';\nimport MUIDataTable from \"mui-datatables\";\n\nimport {\n  Grid,\n  Typography,\n  Collapse,\n  Button,\n  Tabs,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableSortLabel,\n  TableRow,\n  TableFooter,\n  TablePagination,\n  Tooltip,\n  Paper,\n  Box,\n  Avatar,\n} from '@mui/material';\n\nimport { makeStyles, styled, alpha, useTheme } from '@mui/material/styles';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n  '& .MuiTable-root': {\n    background: 'none', \n  },\n  '& .MuiPaper-root': {\n    background: 'none', \n  },\n  '& .MuiToolbar-root': {\n    height:'44px',\n    minHeight:'44px!important'\n  },\n  '& .MuiTableRow-root': {\n    height: '10px', \n  },\n  '& .MuiAvatar-circular.MuiPaper-root': {\n    background: '#333', \n  },\n  '& .MuiTableCell-root.MuiTableCell-body': {\n    lineHeight:'1.25em',\n    padding:4\n  },\n  '& .MuiTableCell-root.MuiTableCell-head': {\n    lineHeight:'1.25em',\n    padding:4\n  },\n  '& .MuiTableCell-root': {\n    background: 'none', \n    borderBottom: '1px solid rgba(255,255,255,0.05)',\n  },\n}));\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  \n  return (\n      <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n          <IconButton\n              onClick={handleFirstPageButtonClick}\n              disabled={page === 0}\n              aria-label=\"first page\"\n          >\n              {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n          <IconButton\n              onClick={handleBackButtonClick}\n              disabled={page === 0}\n              aria-label=\"previous page\"\n          >\n              {theme.direction === \"rtl\" ? (\n                  <KeyboardArrowRight />\n              ) : (\n                  <KeyboardArrowLeft />\n              )}\n          </IconButton>\n          <IconButton\n              onClick={handleNextButtonClick}\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n              aria-label=\"next page\"\n          >\n              {theme.direction === \"rtl\" ? (\n                  <KeyboardArrowLeft />\n              ) : (\n                  <KeyboardArrowRight />\n              )}\n          </IconButton>\n          <IconButton\n              onClick={handleLastPageButtonClick}\n              disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n              aria-label=\"last page\"\n          >\n              {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n      </Box>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction ServerRow(props) {\n  const { token, index } = props;\n  const [open, setOpen] = React.useState(false);\n  const labelId = props.labelId;\n  const server = props.server;\n  const indexus = props.indexus;\n  const unregister = props.unregister;\n\n  return (\n      <React.Fragment>\n        <TableRow key={server.name} >\n          <TableCell align=\"left\">\n              <Avatar component={Paper} \n                  elevation={4}\n                  alt={server.name} \n                  src={`/server-logos/${server.logo}`}\n                  sx={{ width: 30, height: 30, bgcolor: \"#333\" }}\n              />\n          </TableCell>\n          <TableCell id={labelId}>\n            <Button color=\"secondary\" href={`${server.url}`} target=\"_blank\">{server.name}</Button>\n            {server?.twitter &&\n              <IconButton\n                  aria-label=\"expand row\"\n                  size=\"small\"\n                  onClick={() => setOpen(!open)}\n              >\n                  {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n              </IconButton>\n            }\n          </TableCell>\n          <TableCell align=\"right\">\n            <Tooltip title={`Unregister ${server.name}`}><Button color=\"error\" size=\"small\" variant=\"outlined\" onClick={() => unregister(server.serverId, indexus)}><RemoveCircleOutlineIcon/></Button></Tooltip>\n          </TableCell>\n        </TableRow>\n        {server?.twitter &&\n          <TableRow>\n              <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                  <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                      <Box sx={{ margin: 1 }}>\n                          {/*\n                          <Typography variant=\"h6\" gutterBottom component=\"div\">\n                              Address\n                          </Typography>\n                          */}\n                          <Table size=\"small\" aria-label=\"purchases\">\n                              <TableHead>\n                                  <TableRow>\n                                      <TableCell align=\"center\" sx={{borderBottom:\"none\"}}>\n                                        Fetching {server.twitter}\n                                        <TwitterFeed title={`${server.name} Feed`} twitterhandle={server.twitter} twitterheight={400} twitterelements={2} componentTwitterFeed={false} />\n                                      </TableCell>\n                                  </TableRow>\n                              </TableHead>\n                          </Table>\n                      </Box>\n                  </Collapse>\n              </TableCell>\n          </TableRow>\n          }\n      </React.Fragment>\n  );\n}\n\nexport const ServersView = (props) => {\n  const [orderT1, setOrderT1] = React.useState('asc');\n  const [orderByT1, setOrderByT1] = React.useState('server.name');\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('server.name');\n  const [tab, setTab] = useState(0);\n  const { session, setSession } = useSession();\n  const [searched, setSearched] = useState('');\n  \n  const [servers, setServers] = useState([]);\n  const [userServers, setUserServers] = useState([]);\n\n  const [rowsPerPageT1, setRowsPerPageT1] = React.useState(5);\n  const [rowsPerPageT2, setRowsPerPageT2] = React.useState(10);\n  const [pageT1, setPageT1] = React.useState(0);\n  const [pageT2, setPageT2] = React.useState(0);\n  const emptyRowsT1 = rowsPerPageT1 - Math.min(rowsPerPageT1, userServers.length - pageT1 * rowsPerPageT1);\n  const emptyRowsT2 = rowsPerPageT2 - Math.min(rowsPerPageT2, servers.length - pageT2 * rowsPerPageT2);\n\n  const handleChangePageT1 = (event, newPage) => {\n    setPageT1(newPage);\n  };\n\n  const handleChangeRowsPerPageT1 = (event) => {\n    setRowsPerPageT1(parseInt(event.target.value, 10));\n    setPageT1(0);\n  };\n\n  const handleChangePageT2 = (event, newPage) => {\n    setPageT2(newPage);\n  };\n\n  const handleChangeRowsPerPageT2 = (event) => {\n    setRowsPerPageT2(parseInt(event.target.value, 10));\n    setPageT2(0);\n  };\n\n  const isConnected = session && session.isConnected;\n\n  const register = async (serverId) => {\n    //console.log(\"SESSION: \"+JSON.stringify(session))\n    //console.log(\"ServerId: \"+JSON.stringify(serverId))\n\n    let userServer = await UserServer.register(session, serverId);\n    session.userServers.push(userServer);\n    setSession(session);\n    setTab(0);\n  };\n\n  /*\n  const requestSearch = (searchedVal) => {\n    const filteredRows = originalRows.filter((row) => {\n      return row.name.toLowerCase().includes(searchedVal.toLowerCase());\n    });\n    setRows(filteredRows);\n  };\n\n  const cancelSearch = () => {\n    setSearched(\"\");\n    requestSearch(searched);\n  };\n  */\n  const unregister = async (serverId, index) => {\n    let response = await UserServer.unregister(session, serverId);\n    if (response) {\n      let userServers = [...session.userServers];\n      userServers.splice(index, 1);\n      session.userServers = userServers;\n      setSession(session);\n      setUserServers(userServers);\n      setServers(session.servers);\n    }\n  };\n\n  const handleChange = (_event, newValue) => {\n    setTab(newValue);\n  };\n\n  const handleRequestSortT1 = (event, property) => {\n    const isAsc = orderByT1 === property && orderT1 === 'asc';\n    setOrderT1(isAsc ? 'desc' : 'asc');\n    setOrderByT1(property);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const createSortHandlerT1 = (property) => (event) => {\n    handleRequestSortT1(event, property);\n  };\n  const createSortHandler = (property) => (event) => {\n    handleRequestSort(event, property);\n  };\n\n  useEffect(() => {\n    let servers = session && session.servers;\n    const userServers = session && session.userServers;\n\n    if (servers && userServers) {\n      let userServerIds = new Map();\n\n      userServers.forEach(userServer => {\n        userServerIds.set(userServer.serverId, true);\n      });\n\n      let newServers = servers.map(server => {\n        server.registered = userServerIds.get(server.serverId) || false;\n\n        return server;\n      });\n\n      setServers(newServers);\n      setUserServers(userServers);\n    }\n\n  }, [session]);\n\n\n  const servercolumns = [\n    {\n      name:\"logo\",\n      label:\"Org Logo\",\n      options: {\n        filter: true,\n        sort: true,\n        display: false,\n        //customHeadRender: ()=>null\n       }\n    },\n    {\n      name:\"name\",\n      label:\"Org Name\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n       }\n    },\n    {\n      name:\"url\",\n      label:\"Org Url\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n       }\n    },\n    {\n      name: \"name\",\n      label:\"Name\",\n      options: {\n        filter: false,\n        sort: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n            //console.log(tableMeta.rowData, '......');\n            return (\n              <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                  <Avatar component={Paper} \n                      elevation={4}\n                      alt={tableMeta.rowData[1]}\n                      src={`/server-logos/${tableMeta.rowData[0]}`}\n                      sx={{ width: 30, height: 30, bgcolor: \"#333\", mr:1 }}\n                  />\n                </Grid>\n                <Grid item>\n                <Button color=\"secondary\" href={`${tableMeta.rowData[2]}`} target=\"_blank\">{tableMeta.rowData[1]}</Button>\n                </Grid>\n              </Grid>\n            );\n        }\n      }\n    },\n    {\n      name:\"serverId\",\n      label:\"Actions\",\n      options: {\n        filter: false,\n        sort: false,\n        align: \"right\",\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <Tooltip title={`Register ${tableMeta.rowData[1]}`}><Button color=\"primary\" size=\"small\" variant=\"contained\" onClick={() => register(value)}><AddCircleOutlineIcon /></Button></Tooltip>\n          )           \n        },\n        setCellProps: () => ({\n          align: \"right\"\n        }),\n        setCellHeaderProps: () => ({\n          align: \"right\"\n        })\n       }\n    }];\n  const serveroptions = {\n    responsive:\"scroll\",\n    selectableRows: false,\n    download:false,\n    print:false,\n    viewColumns:false,\n    filter:false\n  };\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} md={12} lg={12}>\n        <Paper class=\"grape-paper-background\">\n            <Box\n              class=\"grape-paper\"\n            >\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Box class=\"grape-dashboard-component-header\" sx={{ m: 0, position: 'relative' }}>\n                <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                  SERVERS\n                </Typography>\n              </Box>\n            </Box>\n            <React.Fragment> \n              <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                <Tabs value={tab} onChange={handleChange} aria-label=\"Server Tabs\">\n                  <Tab label=\"Registered\" />\n                  <Tab label=\"All\" />\n                </Tabs>\n\n                {/*\n                <Search>\n                    <SearchIconWrapper>\n                    <SearchIcon />\n                    </SearchIconWrapper>\n                    <StyledInputBase\n                        placeholder=\"Search by Wallet\"\n                        //autoFocus\n                        autoComplete='off'\n                        margin=\"dense\"\n                        id=\"collection_wallet_id\"\n                        type=\"text\"\n                        value={walletPKId}\n                        onChange={(e) => requestSearch(e.target.value)}\n                        inputProps={{ 'aria-label': 'search' }}\n                        onKeyDown={(e) => {\n                            console.log(`Pressed keyCode ${e.key}`);\n                            if (e.key === 'Enter') {\n                                if (ValidateAddress(walletPKId)){\n                                    HandlePKSubmit(e);\n                                }\n                            }\n                        }}\n                    />\n                </Search>\n                */}\n              </Box>\n\n              {tab === 0 && \n                <React.Fragment>\n                  <TableContainer>\n                    <StyledTable sx={{ minWidth: 500 }} size=\"small\" aria-label=\"Servers Table\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell \n                              align=\"left\" \n                              sx={{ width: '1%' }}\n                              key={'name'}\n                              //align={headCell.numeric ? 'right' : 'left'}\n                              //padding={headCell.disablePadding ? 'none' : 'normal'}\n                              sortDirection={orderByT1 === 'name}' ? orderT1 : false}\n                            >\n                              <TableSortLabel\n                                active={orderByT1 === 'name'}\n                                direction={orderByT1 === 'name' ? orderT1 : 'asc'}\n                                onClick={createSortHandlerT1('name')}\n                              >\n                                <Typography variant=\"caption\">Name</Typography>\n                                {orderByT1 === 'name}' ? (\n                                  <Box component=\"span\" sx={visuallyHidden}>\n                                    {orderT1 === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                  </Box>\n                                ) : null}\n                              </TableSortLabel>\n                          </TableCell>\n                          <TableCell align=\"left\" sx={{ width: '70%' }}></TableCell>\n                          <TableCell align=\"right\"><Typography variant=\"caption\">Actions</Typography></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {(rowsPerPageT1 > 0\n                          ? \n                          stableSort(userServers, getComparator(orderT1, orderByT1)).slice(pageT1 * rowsPerPageT1, pageT1 * rowsPerPageT1 + rowsPerPageT1)\n                          //userServers.slice(pageT1 * rowsPerPageT1, pageT1 * rowsPerPageT1 + rowsPerPageT1)\n                          : userServers\n                        ).map((server,indexus) => {\n                          const labelId = `enhanced-table-checkbox-${indexus}`;\n                          return(\n                            <ServerRow server={server} indexus={indexus} labelId={labelId} unregister={unregister} />\n                          )})}\n                      {emptyRowsT1 > 0 && (\n                          <TableRow style={{ height: 53 * emptyRowsT1 }}>\n                              <TableCell colSpan={4} />\n                          </TableRow>\n                      )}  \n                      </TableBody>\n                      <TableFooter>\n                        <TableRow>\n                          <TablePagination\n                            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n                            colSpan={3}\n                            count={userServers.length}\n                            rowsPerPage={rowsPerPageT1}\n                            page={pageT1}\n                            SelectProps={{\n                              inputProps: {\n                                'aria-label': 'rows per page',\n                              },\n                              native: true,\n                            }}\n                            onPageChange={handleChangePageT1}\n                            onRowsPerPageChange={handleChangeRowsPerPageT1}\n                            ActionsComponent={TablePaginationActions}\n                          />\n                        </TableRow>\n                      </TableFooter>\n                    </StyledTable>\n                  </TableContainer>\n                </React.Fragment>\n                }\n                {tab === 1 && \n                  <StyledTable size=\"small\" aria-label=\"All Servers Table\">\n                    <MUIDataTable\n                      title={\"\"}\n                      data={servers}\n                      columns={servercolumns}\n                      options={serveroptions}\n                    />\n                  </StyledTable>\n                }\n              </React.Fragment>\n          </Box>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default ServersView;","import React, { FC, useCallback, useMemo, ReactElement } from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nimport {\n  Box,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  Grid,\n  Button,\n  Paper,\n  TableRow,\n  TableCell,\n  Typography,\n  TextField,\n  Tooltip,\n  Dialog,\n  DialogProps,\n  IconButton,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@mui/material';\nimport{\n  styled, createTheme\n} from '@mui/material/styles';\n\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\n\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\nimport { sign } from 'tweetnacl';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport CloseIcon from '@mui/icons-material/Close';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport LinkIcon from '@mui/icons-material/Link';\nimport LinkOffIcon from '@mui/icons-material/LinkOff';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport { useSnackbar } from 'notistack';\nimport { useConnection, ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork, WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';\n\nimport { Connection, PublicKey, Keypair, SystemProgram, Transaction, clusterApiUrl } from '@solana/web3.js';\n\nimport { BONFIDA_TWITTER_REGISTRAR_URL } from '../../components/Tools/constants';\n\nimport { useSession } from \"../../contexts/session\";\nimport { MakeLinkableAddress, ValidateAddress } from '../../components/Tools/WalletAddress'; // global key handling\nimport { deleteTwitterRegistry, createVerifiedTwitterRegistry, getHandleAndRegistryKey, getTwitterRegistry, getTwitterHandleandRegistryKeyViaFilters } from '@solana/spl-name-service';\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref,\n  ) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n      width: theme.spacing(60),\n      margin: 0,\n  },\n  '& .MuiDialogTitle-root': {\n      //backgroundColor: theme.palette.primary.main,\n      //backgroundColor: '#000000',  /* fallback for old browsers */\n      backgroundColor: 'rgb(0 0 0 / 50%)',\n      '& .MuiTypography-root': {\n          display: 'flex',\n          justifyContent: 'space-between',\n          lineHeight: theme.spacing(5) + 'px',\n      },\n      '& .MuiIconButton-root': {\n          flexShrink: 1,\n          padding: theme.spacing(),\n          marginRight: theme.spacing(2),\n          color: theme.palette.grey[500],\n      },\n  },\n  '& .MuiDialogContent-root': {\n      padding: 0,\n      '& .MuiCollapse-root': {\n          '& .MuiList-root': {\n              background: theme.palette.grey[900],\n          },\n      },\n      '& .MuiList-root': {\n          background: theme.palette.grey[900],\n          padding: 0,\n      },\n      '& .MuiListItem-root': {\n          boxShadow: 'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)',\n          '&:hover': {\n              boxShadow:\n                  'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)' + ', 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.05)',\n          },\n          padding: 0,\n          '& .MuiButton-endIcon': {\n              margin: 0,\n          },\n          '& .MuiButton-root': {\n              flexGrow: 1,\n              justifyContent: 'space-between',\n              padding: theme.spacing(1, 3),\n              borderRadius: undefined,\n              fontSize: '1rem',\n              fontWeight: 400,\n          },\n          '& .MuiSvgIcon-root': {\n              color: theme.palette.grey[500],\n          },\n      },\n  },\n}));\n\nexport interface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\nconst { children, onClose, ...other } = props;\n\nreturn (\n  <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n    {children}\n    {onClose ? (\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: (theme) => theme.palette.grey[500],\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    ) : null}\n  </DialogTitle>\n);\n};\n\nexport interface TwitterDialogProps extends Omit<DialogProps, 'title' | 'open'> {\n  title?: ReactElement;\n}\n\nexport function TwitterBoardingDialog(props:any){\n\n  const [open_dialog, setOpenPKDialog] = React.useState(false);\n  const [walletPKId, setInputPKValue] = React.useState('');\n  const [open_snackbar, setSnackbarState] = React.useState(false);\n  const [twitter_url, setTwitterURL] = React.useState(null);\n  const [twitter_handle, setTwitterHandle] = React.useState(null);\n  const { session, setSession } = useSession();\n  const { publicKey, wallet, connected, disconnect, autoConnect, sendTransaction, signTransaction, signMessage } = useWallet();\n  const { connection } = useConnection();\n  const [loading_registration, setLoadingRegistration] = React.useState(false);\n  const [new_twitter_registration, setTwitterRegistration] = React.useState(null);\n  const { enqueueSnackbar } = useSnackbar();\n  const onError = useCallback(\n    (error: WalletError) => {\n        enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, { variant: 'error' });\n        console.error(error);\n    },\n    [enqueueSnackbar]\n  );\n\n  const handleCopyClick = () => {\n    setSnackbarState(true);\n  };\n\n  const postTwitterRegistrarRequest = async (\n    transaction: Transaction,\n    userPubkey: PublicKey,\n    twitterLink: string,\n    twitterHandle: string\n  ) => {\n    const transactionBuffer = transaction.serialize({\n      requireAllSignatures: false,\n      verifySignatures: false,\n    });\n\n    const payload = {\n      transaction: JSON.stringify(transactionBuffer),\n      pubkey: userPubkey.toBase58(),\n      twitterLink: twitterLink,\n      twitterHandle: twitterHandle,\n    };\n\n    if (BONFIDA_TWITTER_REGISTRAR_URL){\n      const result = await fetch(BONFIDA_TWITTER_REGISTRAR_URL, {\n        method: \"POST\",\n        headers: new Headers({\n            \"Content-Type\": \"application/json\",\n        }),\n        body: JSON.stringify(payload)\n        //body: payload\n      }).catch((error)=>{\n        console.log(\"ERROR REGISTERING TWITTER HANDLE!\")\n      });\n      return result;\n    } else{\n      return null;\n    }\n  };\n\n  async function registerWithConnectedWallet(twitterHandle:string, twitterUrl:string){\n    \n    const space = 1_000; // The space that the user will have to write data into the verified registry\n    \n    if (wallet){\n      setLoadingRegistration(true);\n      enqueueSnackbar(`Creating verified twitter registry...`,{ variant: 'success' });\n      const instruction = await createVerifiedTwitterRegistry(\n        connection,\n        twitterHandle,\n        publicKey,\n        space,\n        publicKey,\n      );\n      \n      console.log(\"Preparing Transaction\");\n      enqueueSnackbar(`Preparing Transaction...`,{ variant: 'success' });\n      const transaction = new Transaction().add(...instruction);\n      if (transaction){\n        transaction.recentBlockhash = (\n          await connection.getRecentBlockhash(\"finalized\")\n        ).blockhash;\n        \n        transaction.feePayer = publicKey;//wallet.publicKey;\n        try{\n          //console.log(\"Transaction ready: \"+JSON.stringify(transaction));\n          console.log(\"Signing Transaction...\");\n          enqueueSnackbar(`Signing Transaction`,{ variant: 'success' });\n          \n          console.log(wallet?.adapter.name+\": \"+connected);\n          //const smessage = new TextEncoder().encode('$GRAPE');\n          //const sm_signature = await signMessage(smessage);\n\n          const signature = await signTransaction(transaction)\n          //const signature = await sendTransaction(transaction, connection)\n          .catch((error: any)=>{\n            setLoadingRegistration(false);\n            throw new Error('Request was not completed: '+error);\n          });\n          \n          //console.log(\"Signed: \"+JSON.stringify(signature));\n          enqueueSnackbar(`Signed Transaction`,{ variant: 'success' });\n          \n          if (!signature){\n            setLoadingRegistration(false);\n            throw new Error('Invalid signature!');\n          }else{\n          // await connection.confirmTransaction(signature, 'processed');\n          }\n\n          enqueueSnackbar(`Creating Twitter Registration: ${publicKey} + @${twitterHandle}`,{ variant: 'success' });\n          const result = await postTwitterRegistrarRequest(\n            transaction,\n            publicKey,\n            twitterUrl,\n            twitterHandle\n          )\n          .then(function(result_response) {\n            if (result_response){\n              \n              enqueueSnackbar(`Twitter Registration Complete`,{ variant: 'success' });\n              console.log(\"Result Response: \"+JSON.stringify(result_response));\n              const timeout = setTimeout(() => {\n                props.setNewTwitterRegistration(twitterHandle);\n              }, 10000); // added a small delay\n              \n            } else{\n              const action = (key:any) => (\n                  <Button href={`https://naming.bonfida.org/#/twitter-registration`} target='_blank' sx={{color:'white'}} >\n                    Try Again\n                  </Button>\n              );\n              enqueueSnackbar(`Something went wrong! Toggle the wallet tab to refresh and see if your handle was registered`,{ variant: 'error', action });\n              setLoadingRegistration(false);\n            }\n          })\n          .catch((error)=>{\n            setLoadingRegistration(false);\n            throw new Error('Request was not completed: '+error);\n          });    \n        } catch(e){\n          setLoadingRegistration(false);\n          console.log(\"ERR: \"+e);\n          throw new Error('Error: '+e);\n        }\n      } else{\n        setLoadingRegistration(false);\n        console.log(\"Invalid transaction!\");\n        throw new Error('Invalid transaction!');\n      }\n    } else{\n      setLoadingRegistration(false);\n      console.log(\"Wallet not connected!\");\n      throw new Error('Wallet not connected!');\n    }\n  }\n\n  const handleCloseSnackbar = (event?: React.SyntheticEvent, reason?: string) => {\n      if (reason === 'clickaway') {\n          return;\n      }\n      setSnackbarState(false);\n  };\n  \n  const steps = [\n    {\n      label: 'Copy your wallet address',\n      description: `Your wallet address will be linked with your twitter handle, is this your wallet address that you would like to link ${publicKey}`,\n    },\n    {\n      label: 'Tweet your wallet address',\n      description:\n        'Login to your twitter account and tweet only your wallet address. Once completed copy the tweet url and return here.',\n    },\n    {\n      label: 'Enter your twitter information',\n      description: `Fill out the input fields by entering your twitter handle along with the tweet url of your wallet address you published on the previous step`,\n    },\n  ];\n  \n  //const handleClickOpenDialog = () => {\n  const handleClickOpenDialog = useCallback(async () => {  \n    if (!publicKey) throw new WalletNotConnectedError();\n    handleReset();\n    setOpenPKDialog(true);\n  }, [publicKey, sendTransaction, connection]);\n  \n  const handleCloseDialog = () => {\n      setOpenPKDialog(false);\n  };\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  \n  const VerifyLastStepWallet = useCallback(async (twitter_handle:string, twitter_url:string) => {\n    registerWithConnectedWallet(twitter_handle, twitter_url)\n    .catch(function (error){\n      console.log(\"ERROR COMPLETING REGISTRATION (\"+publicKey+\"): \"+error)}\n    ); //getHandleAndRegistryKey(connection, publicKey);;\n  }, [publicKey, sendTransaction, connection]);\n\n  const handleNext = () => {\n    if (activeStep === 2){\n      // we need to validate the data\n      if ((twitter_url) && \n          (twitter_handle)){\n        if ((twitter_url.length > 10)&&\n            (twitter_handle.length > 2)){\n              VerifyLastStepWallet(twitter_handle, twitter_url);\n              setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        } else{\n          alert(\"Invalid Entry\");\n        }\n\n      } else{\n        alert(\"Invalid Entry\");\n      }\n    } else{\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    }\n  };\n\n  const handleCopyNext = () => {\n    setSnackbarState(true);\n    navigator.clipboard.writeText(publicKey.toString());\n    handleNext();\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  function setTwitterHandleRegEx(props:string){\n    setTwitterHandle(props.replace(/[@]/g, ''));\n  }\n  \n  const TwitterRegistrationLastStep = () =>{\n\n    if (new_twitter_registration){\n      enqueueSnackbar(`Twitter Registration Succeeded for ${twitter_handle}`,{ variant: 'success' });\n    }else if (!loading_registration && !new_twitter_registration){\n      enqueueSnackbar(`Twitter Registration Failed...`,{ variant: 'error' });\n      handleCloseDialog();\n    }\n    return (\n      <Grid \n        container \n        direction=\"column\" \n        alignItems=\"center\" \n        justifyContent=\"center\" \n        sx={{ p: 2 }}>\n          <Grid item xs={3}>\n          {loading_registration ? \n              <Typography align=\"center\">Processing Twitter Handle NS Registration...\n                <CircularProgress color=\"inherit\" />\n              </Typography>\n        : \n          <div>\n            {new_twitter_registration ?\n              <Typography align=\"center\">Registration complete {new_twitter_registration}!</Typography>\n            :\n              <Typography align=\"center\">Registration failed!</Typography>\n            }\n          </div>\n        } \n        </Grid>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      \n      <Tooltip title={`Link Twitter`}><Button \n        //disabled={!publicKey && !wallet}\n        disabled={!publicKey}\n        //disabled={!session.publicKey}\n        color=\"primary\" size=\"small\" variant=\"contained\" onClick={handleClickOpenDialog} title=\"Link Twitter\"><LinkIcon sx={{mr:1}}/> Link Twitter</Button>\n      </Tooltip>\n        <BootstrapDialog\n          open={open_dialog} \n          onClose={handleCloseDialog} \n          //fullWidth={true}\n          maxWidth={\"lg\"}\n          PaperProps={{ \n            style: {\n                background: 'linear-gradient(to right, #251a3a, #000000)',\n                boxShadow: '3',\n                border: '1px solid rgba(255,255,255,0.15)',\n                borderTop: '1px solid rgba(255,255,255,0.3)',\n                borderRadius: '20px',\n                padding:'4'\n                },\n            }}\n          >\n      \n          <DialogTitle>\n          <Typography variant=\"h6\">\n              <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                  <TwitterIcon  sx={{mr:1}} />\n                </Grid>\n                <Grid item>Register Wallet with your Twitter Account\n                </Grid>\n              </Grid>\n            </Typography>\n          </DialogTitle>\n          <DialogContent>\n              <Box sx={{ maxWidth: 400, p: 1 }}>\n                <Stepper activeStep={activeStep} orientation=\"vertical\">\n                  {steps.map((step, index) => (\n                    <Step key={step.label}>\n                      <StepLabel\n                        optional={\n                          index === 2 ? (\n                            <Typography variant=\"caption\">Last step</Typography>\n                          ) : null\n                        }\n                      >\n                        {step.label}\n                      </StepLabel>\n                      <StepContent>\n                        <Typography>{step.description}</Typography>\n                        <Box sx={{ mb: 2 }}>\n                          <div>\n                            {index === 1 ?\n                              // add one more button to tweet quickly\n                              <Button\n                                  variant=\"outlined\"\n                                  //onClick={handleCopyNext}\n                                  href={`https://twitter.com//intent/tweet?text=${publicKey}`} \n                                  target=\"_blank\"\n                                  sx={{ mt: 1, mr: 1 }}\n                                >\n                                  <TwitterIcon sx={{mr:1}} /> Tweet\n                                </Button>\n                            : null}\n\n\n                            {index === steps.length - 1 ? \n                              <React.Fragment>\n                                  <TextField \n                                    fullWidth \n                                    id=\"grape-twitter-handle\" \n                                    label=\"Twitter Handle\" \n                                    variant=\"standard\" \n                                    margin=\"normal\"\n                                    onChange={(e) => setTwitterHandleRegEx(e.target.value)} \n                                  />\n                                \n                                  <TextField \n                                    fullWidth \n                                    id=\"grape-twitter-url\" \n                                    label=\"Tweet URL\" \n                                    variant=\"standard\" \n                                    margin=\"normal\"\n                                    onChange={(e) => setTwitterURL(e.target.value)} \n                                  />\n                              </React.Fragment>  \n                            : \n                            null}\n\n                            {index === 0 ?\n                                <Button\n                                  variant=\"contained\"\n                                  onClick={handleCopyNext}\n                                  sx={{ mt: 1, mr: 1 }}\n                                >\n                                  <ContentCopyIcon sx={{mr:1}} /> Copy &amp; Continue\n                                </Button>\n                              :\n                                <Button\n                                  variant=\"contained\"\n                                  onClick={handleNext}\n                                  sx={{ mt: 1, mr: 1 }}\n                                >\n                                  {index === steps.length - 1 ? 'Finish' : 'Continue'}\n                                </Button>\n                            }\n                            \n                            {index !== 0 &&\n                            <Button\n                              disabled={index === 0}\n                              onClick={handleBack}\n                              sx={{ mt: 1, mr: 1 }}\n                            >\n                              Back\n                            </Button>\n                            }\n                          </div>\n                        </Box>\n                      </StepContent>\n                    </Step>\n                  ))}\n                </Stepper>\n                {activeStep === steps.length && \n                    <TwitterRegistrationLastStep />\n                }\n              </Box>\n          </DialogContent>\n      </BootstrapDialog>   \n      <Snackbar open={open_snackbar} autoHideDuration={2000} message=\"Copied\">\n          <Alert onClose={handleCloseSnackbar} severity=\"success\" sx={{ width: '100%' }}>\n          Copied!\n          </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n\nexport const TwitterSettings: FC = (props: any) => {\n  const { session, setSession } = useSession();\n  const { publicKey, wallet, disconnect, sendTransaction, signTransaction, signMessage } = useWallet();\n  const { connection } = useConnection();\n  const [newTwitterRegistration, setNewTwitterRegistration] = React.useState(null);\n  const [twitterRegistration, setTwitterRegistry] = React.useState(null);\n  const [twitterRegistryKey, setTwitterRegistryKey] = React.useState(null);\n  const [loadingTwitter, setLoadingRPC] = React.useState(false);\n  const [twitterOnChainRegistration, setTwitterOnChainRegistry] = React.useState(null);\n  //const wallet = props.wallet;\n  const endpoint = props.endpoint;\n  const { enqueueSnackbar } = useSnackbar();\n\n  async function deregisterTwitterWithConnectedWallet(){\n    \n    if ((wallet)&&(twitterRegistryKey)){\n      setLoadingRPC(true);\n      //console.log(twitterRegistration + \", \"+ publicKey.toString());\n\n      //if (typeof twitterRegistration === 'string')\n      //  console.log(\"Is string type\");\n      //var twtrstr: string = String(twitterRegistration);\n      const instruction = await deleteTwitterRegistry(twitterRegistration, publicKey);\n      //const instruction = await deleteTwitterRegistry(twitterRegistration, twitterRegistryKey);\n      \n      enqueueSnackbar(`Attempting Transaction...`,{ variant: 'success' });\n      const transaction = new Transaction().add(...instruction);\n      transaction.recentBlockhash = (\n          await connection.getRecentBlockhash(\"finalized\")\n      ).blockhash;\n      //console.log(\"Transaction: \"+JSON.stringify(transaction));\n      transaction.feePayer = publicKey;\n      try{\n        enqueueSnackbar(`Signing Transaction...`,{ variant: 'success' });\n        \n        const signature = await sendTransaction(transaction, connection)\n        //const signature = await signTransaction(transaction)\n        .catch((error: any)=>{\n          setLoadingRPC(false);\n          throw new Error('Request was not completed! '+error);\n        });\n        if (!signature){\n          setLoadingRPC(false);\n          throw new Error('Invalid signature!');\n        }else{\n          await connection.confirmTransaction(signature, 'processed');\n          setTwitterOnChainRegistry(null);\n          // check if actually removed...\n          const timeout = setTimeout(() => {\n            enqueueSnackbar(`Registry deleted...`,{ variant: 'success' });\n            checkTwitterRegistration();\n            setLoadingRPC(false);\n          }, 4000); // added a small delay\n          return true;\n        }\n        return false;\n      } catch(e){\n        console.log(\"ERR: \"+e);\n        setLoadingRPC(false);\n        checkTwitterRegistration();\n        return false;\n      }\n    }\n\n  }\n\n  const unlinkTwitter = async () => {\n    //await User.updateUser(session, null);\n    if (twitterRegistration){\n      setLoadingRPC(true);\n      console.log(\"Deleting registry: \"+twitterRegistration+\" / \"+publicKey);\n      deregisterTwitterWithConnectedWallet();\n    }\n  };\n\n  async function checkTwitterRegistration(){\n    setLoadingRPC(true);\n    getTwitterHandleandRegistryKeyViaFilters(connection, publicKey)\n    .then(function(response) {\n      if (response){   \n        setTwitterRegistry(response[0]);\n        setTwitterRegistryKey(response[1]);\n        console.log(\"Found: \"+response[0]+\" with \"+response[1]);\n      }\n      setLoadingRPC(false);\n    })\n    .catch(function (error){\n      if (\"Error: Registry not found.\"){\n        setTwitterRegistry(null);\n        setLoadingRPC(false);\n      }\n      console.log(\"PROMISE ERR DNS (\"+publicKey+\"): \"+error)\n    });\n  }\n\n  React.useEffect(() => { \n    if (publicKey && connection){ // use rpc node filtering...\n      if (publicKey.toString() == session.publicKey){\n        checkTwitterRegistration();\n      }\n    }\n  }, [publicKey]);\n\n  React.useEffect(() => { \n    if (newTwitterRegistration){\n      checkTwitterRegistration();\n    }\n  }, [newTwitterRegistration]);\n  \n  return (\n        <TableRow key={'twitter'}>\n          <TableCell component=\"th\" scope=\"row\">\n            <Grid container direction=\"row\" alignItems=\"center\">\n              <Grid item>\n                <TwitterIcon fontSize=\"large\" />\n              </Grid>\n              <Grid item sx={{ ml: \"20px\" }}>\n                Twitter\n              </Grid>\n            </Grid>\n          </TableCell>\n          <TableCell align=\"right\">\n          {loadingTwitter ? \n              <>loading registration information...</>\n            :\n            <>\n              {!twitterRegistration && \n                <i>Not registered</i>\n              }{twitterRegistration && \n                <>\n                  <MakeLinkableAddress addr={`@${twitterRegistration}`} trim={0} hasextlink={false} hascopy={true} isDNS={true} fontsize={12} />\n                </>\n              }\n            </>\n          }\n          \n          </TableCell>\n          <TableCell align=\"right\">\n          {loadingTwitter ? \n              <Button color=\"primary\" size=\"small\" variant=\"outlined\" disabled={true}><CircularProgress size={24} /></Button>\n            :\n            <>\n              {!twitterRegistration && \n                <>\n                <TwitterBoardingDialog setNewTwitterRegistration={setNewTwitterRegistration} /> \n                </>\n              }{twitterRegistration && \n                <Tooltip title={`Remove Twitter Registration`}><Button color=\"primary\" size=\"small\" variant=\"outlined\" onClick={unlinkTwitter} title=\"Remove Twitter Registration\"><LinkOffIcon/></Button></Tooltip>\n              }\n            </>\n          }\n          </TableCell>\n        </TableRow>\n\n  )\n}","import Session from './Session';\nimport { GRAPE_APP_API_URL } from '../components/Tools/constants';\n\nclass User {\n    userId: string;\n    discordId: string;\n    twitterId: string;\n\n    static async updateUser(session: Session, discordId: string) {\n        try {\n            if (!session) throw new Error('Invalid session');\n\n            const token = session.token;\n            const signature = token.signature;\n            const address = token.address;\n            const publicKey = session.publicKey;\n            const userId = session.userId;\n            \n            const response = await fetch(`${GRAPE_APP_API_URL}/user/` + userId, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    address,\n                    publicKey,\n                    signature,\n                    discordId\n                })\n            });\n\n            return response;\n        } catch (err) {\n            console.log(err);\n        }\n    }\n}\n\nexport default User;","import React, { useState, useEffect } from \"react\";\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\n\nexport default function DiscordIcon(props: SvgIconProps) {\n    return (\n      <SvgIcon {...props}>\n        <path d=\"M17.2,3.6C14.9,1.8,13,1.5,13,1.5l-0.2,0.3c2.8,0.9,3.7,2.5,3.7,2.5c-1.7-1-3.4-1.4-4.9-1.6\n              c-1.2-0.2-2.3-0.1-3.3,0c-0.1,0-0.2,0-0.3,0C7.4,2.8,6,3,4.3,3.7c-0.6,0.3-1,0.4-1,0.4s1.1-1.6,4.1-2.4L7.1,1.5c0,0-2,0.3-4.3,2.1\n              c0,0-2.3,4.3-2.3,9.5c0,0,1.4,2.3,4.9,2.4c0,0,0.4-0.4,0.9-1c-2.1-0.6-2.7-2.2-2.7-2.2s0.2,0.1,0.4,0.3c0,0,0,0,0.1,0\n              c0.1,0,0.1,0.1,0.2,0.1c0.4,0.3,0.8,0.4,1.2,0.5c0.7,0.3,1.5,0.5,2.4,0.7c1.2,0.3,2.7,0.3,4.3,0c0.8-0.2,1.6-0.3,2.3-0.7\n              c0.6-0.2,1.2-0.5,1.9-1c0,0-0.6,1.6-2.7,2.3c0.5,0.6,0.9,1,0.9,1c3.6-0.1,4.9-2.4,4.9-2.4C19.5,7.8,17.2,3.6,17.2,3.6z M7,11.5\n              c-1,0-1.6-0.8-1.6-1.8S6.1,7.9,7,7.9s1.6,0.8,1.6,1.8S7.9,11.5,7,11.5z M13,11.5c-1,0-1.6-0.8-1.6-1.8s0.7-1.8,1.6-1.8\n              s1.6,0.8,1.6,1.8S13.8,11.5,13,11.5z\" />\n      </SvgIcon>\n    );\n  }","import React, { useState, useEffect, ReactElement } from 'react';\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  Tabs,\n  Tab,\n  Box,\n  Paper,\n  Typography,\n  Grid,\n  Tooltip,\n  Dialog,\n  DialogProps,\n  IconButton,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@mui/material/';\n\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\nimport { makeStyles, styled, alpha } from '@mui/material/styles';\n\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { TwitterSettings } from \"./TwitterSettings\";\nimport { useSession } from \"../../contexts/session\";\nimport User from '../../models/User';\nimport DiscordIcon from '../../components/StaticIcons/DiscordIcon';\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\nimport LinkIcon from '@mui/icons-material/Link';\nimport LinkOffIcon from '@mui/icons-material/LinkOff';\nimport { MakeLinkableAddress, ValidateAddress } from '../../components/Tools/WalletAddress'; // global key handling\n\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n  '& .MuiTableCell-root': {\n      borderBottom: '1px solid rgba(255,255,255,0.05)'\n  },\n}));\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref,\n  ) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-paper': {\n      width: theme.spacing(60),\n      margin: 0,\n  },\n  '& .MuiDialogTitle-root': {\n      //backgroundColor: theme.palette.primary.main,\n      //backgroundColor: '#000000',  /* fallback for old browsers */\n      backgroundColor: 'rgb(0 0 0 / 50%)',\n      '& .MuiTypography-root': {\n          display: 'flex',\n          justifyContent: 'space-between',\n          lineHeight: theme.spacing(5) + 'px',\n      },\n      '& .MuiIconButton-root': {\n          flexShrink: 1,\n          padding: theme.spacing(),\n          marginRight: theme.spacing(2),\n          color: theme.palette.grey[500],\n      },\n  },\n  '& .MuiDialogContent-root': {\n      padding: 0,\n      '& .MuiCollapse-root': {\n          '& .MuiList-root': {\n              background: theme.palette.grey[900],\n          },\n      },\n      '& .MuiList-root': {\n          background: theme.palette.grey[900],\n          padding: 0,\n      },\n      '& .MuiListItem-root': {\n          boxShadow: 'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)',\n          '&:hover': {\n              boxShadow:\n                  'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)' + ', 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.05)',\n          },\n          padding: 0,\n          '& .MuiButton-endIcon': {\n              margin: 0,\n          },\n          '& .MuiButton-root': {\n              flexGrow: 1,\n              justifyContent: 'space-between',\n              padding: theme.spacing(1, 3),\n              borderRadius: undefined,\n              fontSize: '1rem',\n              fontWeight: 400,\n          },\n          '& .MuiSvgIcon-root': {\n              color: theme.palette.grey[500],\n          },\n      },\n  },\n}));\n\nexport interface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\nconst { children, onClose, ...other } = props;\n\nreturn (\n  <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n    {children}\n    {onClose ? (\n      <IconButton\n        aria-label=\"close\"\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 8,\n          color: (theme) => theme.palette.grey[500],\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    ) : null}\n  </DialogTitle>\n);\n};\n\nexport interface TwitterDialogProps extends Omit<DialogProps, 'title' | 'open'> {\n  title?: ReactElement;\n}\n\nexport const SettingsView = (props:any) => {\n  const [tab, setTab] = useState<number>(0);\n  const { session, setSession } = useSession();\n  const [discord, setDiscord] = useState(null);\n  const [twitter, setTwitter] = useState(null);\n  //const isConnected = session && session.isConnected;\n  const wallets = session && session.userWallets;\n  const userId = session && session.userId;\n  const endpoint = props.endpoint;\n  const { publicKey, wallet, disconnect } = useWallet();\n  \n  React.useEffect(() => {\n    const discordId = session && session.discordId;\n    setDiscord(discordId);\n  }, [session]);\n\n  React.useEffect(() => {\n    if (!discord){\n      //promptConnect();\n    }\n  }, [discord]);\n\n  const handleChange = (_event: any, newValue: number) => {\n    setTab(newValue);\n  };\n\n  const unlinkDiscord = async () => {\n    await User.updateUser(session, null);\n    session.discordId = null;\n    setSession(session);\n    setDiscord(null);\n  };\n\n  const unlinkTwitter = async () => {\n    session.twitterId = null;\n    setSession(session);\n    setTwitter(null);\n  };\n\n  const disconnectWallet = async () => {\n    disconnect();\n  }\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} md={12} lg={12}>\n        <Paper className=\"grape-paper-background\">\n            <Box\n              className=\"grape-paper\"\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <Box className=\"grape-dashboard-component-header\" sx={{ m: 0, position: 'relative' }}>\n                  <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                    SETTINGS\n                  </Typography>\n                </Box>\n              </Box>\n              <React.Fragment>\n                  <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                    <Tabs value={tab} onChange={handleChange} aria-label=\"Server Tabs\">\n                      <Tab label=\"Accounts\" />\n                      <Tab label=\"Wallets\" />\n                    </Tabs>\n                  </Box>\n\n                  {tab === 0 && <div>\n                    <TableContainer>\n                      <StyledTable aria-label=\"simple table\" size=\"small\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell align=\"left\"><Typography variant=\"caption\">Provider</Typography></TableCell>\n                            <TableCell align=\"right\"><Typography variant=\"caption\">ID</Typography></TableCell>\n                            <TableCell align=\"right\"><Typography variant=\"caption\">Actions</Typography></TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow key={'discord'}>\n                            <TableCell component=\"th\" scope=\"row\">\n                              <Grid container direction=\"row\" alignItems=\"center\">\n                                  <Grid item>\n                                    <DiscordIcon fontSize=\"large\" />\n                                </Grid>\n                                <Grid item style={{ marginLeft: \"20px\" }}>\n                                  Discord\n                                </Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell align=\"right\">{discord || <i>Not linked</i>}</TableCell>\n                            <TableCell align=\"right\">\n                              {!discord && \n                                <Tooltip title={`Link Discord`}><Button href={`https://verify.grapes.network/start`} color=\"primary\" size=\"small\" variant=\"contained\" title=\"Link Discord\"><LinkIcon sx={{mr:1}}/> Link Discord</Button></Tooltip>\n                              }{discord && \n                                <Tooltip title={`Unlink Discord`}><Button color=\"primary\" size=\"small\" variant=\"outlined\" onClick={unlinkDiscord} title=\"Unlink Discord\"><LinkOffIcon/></Button></Tooltip>\n                              }\n                            </TableCell>\n                          </TableRow>\n\n                          <TwitterSettings />\n                          \n                        </TableBody>\n                      </StyledTable>\n                    </TableContainer>\n                  </div>}\n\n                  {tab === 1 && <div>\n                    <TableContainer>\n                      <StyledTable aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow>\n                            <TableCell align=\"left\"><Typography variant=\"caption\">Address</Typography></TableCell>\n                            <TableCell align=\"right\"><Typography variant=\"caption\">Actions</Typography></TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {wallets.map(mapwallet => {\n                            return (\n                              <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                  <MakeLinkableAddress addr={mapwallet.address} trim={0} hasextlink={true} hascopy={true} fontsize={16} />\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                {publicKey.toString() === mapwallet.address && \n                                  <Button color=\"primary\" size=\"small\" variant=\"contained\" title=\"Connect\" disabled>Current</Button>\n                                }\n                                </TableCell>\n                              </TableRow>\n                          )})}\n                          <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                              \n                            </TableCell>\n                            <TableCell align=\"right\">\n                              <Tooltip title={`Add Wallet`}>\n                                <Button href={`https://verify.grapes.network/start`} color=\"primary\" size=\"small\" variant=\"contained\" title=\"Add Wallet\"\n                                  onClick={disconnectWallet}\n                                >\n                                  <AddCircleOutlineOutlinedIcon sx={{mr:1}}/> Wallet</Button>\n                              </Tooltip>\n                            </TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </StyledTable>\n                    </TableContainer>\n                  </div>}\n                </React.Fragment>\n          </Box>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\n","import React, { useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\n\nimport { useSession } from \"../../contexts/session\";\nimport User from '../../models/User';\n\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nimport Avatar from '@mui/material/Avatar';\nimport AvatarGroup from '@mui/material/AvatarGroup';\nimport CheckIcon from '@mui/icons-material/Check';\n\nfunction getParam(param: string) {\n    return new URLSearchParams(document.location.search).get(param);\n}\n\nfunction stringFirstLetterCapitalize(str: string){\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport const ConfirmationView = () => {\n    const [avatar, setAvatar] = React.useState(getParam('avatar'));\n    const [discordId, setDiscordId] = React.useState(getParam('discord_id'));\n    const [provider, setProvider] = React.useState(getParam('provider'));\n    const { session, setSession } = useSession();\n\n    if (session && discordId && session.discordId !== discordId) {\n        User.updateUser(session, discordId);\n        session.discordId = discordId;\n        setSession(session);\n    }\n    \n    return (\n        <React.Fragment>\n            <Paper className=\"grape-paper-background\" >\n                <Box \n                    className=\"grape-paper\" \n                    justifyContent=\"center\"\n                    sx={{ p: 2, alignItems: 'center' }}>\n                    <Grid \n                        container \n                        rowSpacing={8}\n                        direction=\"column\"\n                        justifyContent=\"center\"\n                        sx={{\n                            alignItems:\"center\" }}\n                        >\n                            <Grid \n                                item xs={12}\n                            >\n                                <Typography variant=\"h5\" gutterBottom align=\"center\">\n                                    {stringFirstLetterCapitalize(provider)} linked <CheckIcon />\n                                </Typography>\n                            </Grid>\n                        \n                        <Grid \n                            item xs={12}\n                        >\n                            <Box\n                                height=\"100%\"\n                                justifyContent=\"center\"\n                            >\n                                <AvatarGroup max={2}>\n                                    <Avatar \n                                        component={Paper} \n                                        elevation={4}\n                                        alt=\"Grape\" \n                                        src=\"/grape_logo_simple.png\"\n                                        sx={{ width: 160, height: 160, bgcolor: \"#444\" }}\n                                    />\n                                    <Avatar \n                                        component={Paper} \n                                        elevation={4}\n                                        alt=\"Avatar\" \n                                        src={`https://cdn.discordapp.com/avatars/${discordId}/${avatar}?size=512`}\n                                        sx={{ width: 160, height: 160, bgcolor: \"#444\" }}\n                                    />\n                                </AvatarGroup>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button component={Link} to='/' color=\"primary\" size=\"medium\" variant=\"contained\" title=\"Connect\">Home</Button>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Paper>\n        </React.Fragment>\n    );\n}\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams, Link, useLocation } from 'react-router-dom';\nimport { useSession } from \"../../contexts/session\";\n\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nimport { useWallet } from '@solana/wallet-adapter-react';\n\nimport Avatar from '@mui/material/Avatar';\nimport AvatarGroup from '@mui/material/AvatarGroup';\n\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\nimport CheckIcon from '@mui/icons-material/Check';\nimport LinkOffIcon from '@mui/icons-material/LinkOff';\nimport ConnectDialog from '../../components/ConnectDialog/ConnectDialog';\n\nfunction DiscordIcon(props: SvgIconProps) {\n    return (\n      <SvgIcon {...props}>\n        <path d=\"M17.2,3.6C14.9,1.8,13,1.5,13,1.5l-0.2,0.3c2.8,0.9,3.7,2.5,3.7,2.5c-1.7-1-3.4-1.4-4.9-1.6\n              c-1.2-0.2-2.3-0.1-3.3,0c-0.1,0-0.2,0-0.3,0C7.4,2.8,6,3,4.3,3.7c-0.6,0.3-1,0.4-1,0.4s1.1-1.6,4.1-2.4L7.1,1.5c0,0-2,0.3-4.3,2.1\n              c0,0-2.3,4.3-2.3,9.5c0,0,1.4,2.3,4.9,2.4c0,0,0.4-0.4,0.9-1c-2.1-0.6-2.7-2.2-2.7-2.2s0.2,0.1,0.4,0.3c0,0,0,0,0.1,0\n              c0.1,0,0.1,0.1,0.2,0.1c0.4,0.3,0.8,0.4,1.2,0.5c0.7,0.3,1.5,0.5,2.4,0.7c1.2,0.3,2.7,0.3,4.3,0c0.8-0.2,1.6-0.3,2.3-0.7\n              c0.6-0.2,1.2-0.5,1.9-1c0,0-0.6,1.6-2.7,2.3c0.5,0.6,0.9,1,0.9,1c3.6-0.1,4.9-2.4,4.9-2.4C19.5,7.8,17.2,3.6,17.2,3.6z M7,11.5\n              c-1,0-1.6-0.8-1.6-1.8S6.1,7.9,7,7.9s1.6,0.8,1.6,1.8S7.9,11.5,7,11.5z M13,11.5c-1,0-1.6-0.8-1.6-1.8s0.7-1.8,1.6-1.8\n              s1.6,0.8,1.6,1.8S13.8,11.5,13,11.5z\" />\n      </SvgIcon>\n    );\n  }\n\nfunction getQueryVariable(variable: string)\n{\n    var query = window.location.search.substring(1);\n    if (!query)\n        query = window.location.hash.substring(1);\n    \n    //console.log(query)//\"app=article&act=news_content&aid=160990\"\n    var vars = query.split(\"&\");\n    //console.log(vars) //[ 'app=article', 'act=news_content', 'aid=160990' ]\n    for (var i=0;i<vars.length;i++) {\n        var pair = vars[i].split(\"=\");\n        //    console.log(pair)//[ 'app', 'article' ][ 'act', 'news_content' ][ 'aid', '160990' ] \n        if (pair[0] == '/register?'+variable){\n            //console.log(\"+found \"+variable+\": \"+pair[1]);\n            return pair[1]\n        }else if(pair[0] == variable){\n            //console.log(\"-found \"+variable+\": \"+pair[1]);\n            return pair[1];\n        }\n    }\n    return(false);\n}\n\nfunction getParam(param: string) {\n    //const location = useLocation();\n    //return new URLSearchParams(location.search).get(param);\n    let parameter = new URLSearchParams(window.location.search).get(param);\n    if (!parameter)\n        parameter = new URLSearchParams(window.location.hash).get(param); // this will not return correctly because we have a ? after the hash\n    //console.log(param + ': ' + parameter);\n    return parameter;\n}\n\nexport function RegisterView(props: any) {\n    const [serverId, setServerId] = React.useState(getParam('server_id'));\n    const [avatar, setAvatar] = React.useState(getParam('avatar'));\n    const [discordId, setDiscordId] = React.useState(getParam('discord_id'));\n    const [userId, setUserId] = React.useState(getParam('user_id'));\n    const [discordUrl, setDiscordUrl] = React.useState(getParam('discord_url'));\n    const [tokenParam, setTokenParam] = React.useState(getParam('token'));\n    const [provider, setProvider] = React.useState(getParam('provider'));\n    const [serverName, setServerName] = React.useState(decodeURIComponent(getParam('serverName')));\n    const [serverLogo, setServerLogo] = React.useState(decodeURIComponent(getParam('serverLogo')));\n    const [isRegistered, setIsRegistered] = React.useState((getParam('is_registered')));\n    \n    const { publicKey, wallet, disconnect} = useWallet();\n\n    const { session, setSession } = useSession();\n    const isConnected = session && session.isConnected;\n    const isAlreadyRegistered = session?.discordId ? true : false;\n    \n    async function disconnectSession(redirect:boolean) {\n        await disconnect().catch(() => { /* catch any errors */ });\n        setSession(null);\n        if (redirect)\n            window.location.href = \"/\";\n    }\n    \n    useEffect(() => {\n        //console.log(\"Server ID: \"+ tokenParam);\n        setSession(null);\n    }, [tokenParam]);\n\n    useEffect(() => {\n        //console.log(\"Session Wallet: \"+session.isWallet);\n        if (!session.isWallet){\n            disconnectSession(false);\n        }\n    }, [session]);\n\n    return (\n        <React.Fragment>\n            <Paper className=\"grape-paper-background\" >\n                <Paper className=\"grape-paper\" sx={{ p: 2, flexDirection: 'column', flexWrap: 'wrap', alignItems: 'center' }}>\n                    <Grid \n                            container \n                            direction=\"column\" \n                            spacing={2} \n                            alignItems=\"center\"\n                            rowSpacing={8}\n                            sx={{ flexGrow: 1 }}\n                        >\n                            <Grid \n                                item xs={12}\n                            >\n                                <Typography variant=\"h5\" gutterBottom align=\"center\">\n                                    Register Wallet with <br /> {serverName}\n                                </Typography>\n                            </Grid>\n                            \n                            <Grid \n                                item xs={12}\n                            >\n                                <Box\n                                height=\"100%\"\n                                display=\"flex\"\n                                justifyContent=\"center\"\n                                flexDirection=\"column\"\n                                >\n                                    <AvatarGroup max={2}>\n                                        <Avatar \n                                            component={Paper} \n                                            elevation={4}\n                                            alt=\"Grape\" \n                                            src={`/server-logos/${serverLogo}`} \n                                            sx={{ width: 160, height: 160, bgcolor: \"#444\" }}\n                                        />\n                                        <Avatar \n                                            component={Paper} \n                                            elevation={4}\n                                            alt=\"Discord\" \n                                            src={`https://cdn.discordapp.com/avatars/${discordId}/${avatar}?size=512`} \n                                            sx={{ width: 160, height: 160, bgcolor: \"#444\" }}\n                                        />\n                                    </AvatarGroup>\n                                </Box>\n                            </Grid>\n                            \n                            {!isAlreadyRegistered ? \n                                <Grid item xs={12}>\n\n                                    <br/>\n                                    \n                                    <ConnectDialog\n                                        session={session}\n                                        isConnected={isConnected}\n                                        userId={userId}\n                                        menuId='primary-wallet-account-menu'\n                                        menuWalletId='primary-fullwallet-account-menu'\n                                        handleProfileMenuOpen={() => {}}\n                                        buttonText=\"Link Wallet\"   \n                                        nakedWallet={false}    \n                                        login={false}  \n                                        token={tokenParam}   \n                                        discordId={discordId} \n                                    /> \n                                    \n                                </Grid> \n                            : \n                                <Grid item xs={12}>\n                                    {(!isConnected && !session.isWallet) ? \n                                    <div><Typography variant=\"h4\" gutterBottom align=\"center\">Your wallet is not connected <LinkOffIcon sx={{ ml:1 }} /></Typography>\n                                        <Box textAlign=\"center\">\n                                            <ConnectDialog\n                                                session={session}\n                                                isConnected={isConnected}\n                                                userId={userId}\n                                                menuId='primary-wallet-account-menu'\n                                                menuWalletId='primary-fullwallet-account-menu'\n                                                handleProfileMenuOpen={() => {}}\n                                                buttonText=\"Connect\"\n                                                nakedWallet={false}\n                                                login={false}    \n                                                token={tokenParam} \n                                                discordId={discordId} \n                                            />\n                                        </Box>\n                                    </div>\n                                    : \n                                        <div>\n                                            <Typography variant=\"h4\" gutterBottom align=\"center\">Your wallet has been linked <CheckIcon /></Typography>\n                                            <Box textAlign=\"center\">\n                                                <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                                                    <Button component={Link} to='/' title=\"Home\">Home</Button>\n                                                    <Button target=\"_blank\" href={`${discordUrl}`} title=\"Back to Discord\">Back to <DiscordIcon sx={{ ml:1 }} /></Button>\n                                                </ButtonGroup>\n                                            </Box>\n                                        </div>\n                                    }\n                                </Grid>\n                            }\n                        </Grid>\n                    </Paper>\n                </Paper>\n        </React.Fragment>\n    );\n}\n","import * as React from 'react';\n\nimport {\n    Typography,\n    Grid\n} from '@mui/material';\n\nimport TwitterFeedComponent from '../Feed/TwitterFeed';\n\ninterface NewsViewProps {\n  children?: React.ReactNode;\n}\n\nexport function NewsView(props: NewsViewProps) {\n//export default function UnlistedOffersView(props: any) {\n  \n  \n\n  return (\n    <React.Fragment>\n        <div style={{ height: \"100%\", overflow: \"auto\" }}>\n            <Grid container spacing={3}>\n                <TwitterFeedComponent title={'Grape News'} twitterFeedHandle={'grapeprotocol'} twitterFeedHeight={800} twitterFeedElements={2} componentTwitterFeed={true} componentExpanded={true}/>\n                <TwitterFeedComponent title={'Solana News'} twitterFeedHandle={'solana'} twitterFeedHeight={800} twitterFeedElements={2} componentTwitterFeed={true} componentExpanded={true} />\n                <TwitterFeedComponent title={'Grape Events'} twitterFeedHandle={'eventsgrape'} twitterFeedHeight={800} twitterFeedElements={2} componentTwitterFeed={true} componentExpanded={true} />\n            </Grid>\n        </div>\n    </React.Fragment>\n);\n}","import * as React from 'react';\nimport MUIDataTable from \"mui-datatables\";\n\nimport {\n  Grid,\n  Typography,\n  Table,\n  Tooltip,\n  Paper,\n  Box,\n  Avatar,\n  LinearProgress,\n} from '@mui/material';\n\nimport { LinearProgressProps } from '@mui/material/LinearProgress';\nimport { makeStyles, styled, alpha, useTheme } from '@mui/material/styles';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n  '& .MuiTable-root': {\n    background: 'none',\n    tableLayout: 'fixed',\n    borderCollapse: 'separate',\n    borderSpacing: '0 16px',\n  },\n  '& .MuiPaper-root': {\n    background: 'none',\n    boxShadow: 'none',\n  },\n  '& .MuiToolbar-root': {\n    '@media (min-width: 900px)': {\n      height: '60px',\n      minHeight: '60px !important',\n      boxSizing: 'border-box',\n    },\n  },\n  '& .MuiTableRow-root.MuiTableRow-head': {\n    background: 'none',\n    '& .MuiButton-root': {\n      textTransform: 'uppercase',\n      fontWeight: 'bold',\n      fontSize: '0.75rem',\n      marginLeft: '1px',\n    },\n    '&:hover': {\n      background: 'none',\n    },\n  },\n  '& .MuiTableCell-head:nth-child(1)': {\n    width: '262px',\n  },\n  '& .MuiTableCell-head:nth-child(2)': {\n    width: '211px',\n  },\n  '& .MuiTableCell-head:nth-child(6)': {\n    width: '211px',\n  },\n  '& .MuiTableRow-root': {\n    backgroundColor: 'transparent',\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  '& .MuiTableCell-root': {\n    background: 'none',\n    borderBottom: 'none',\n    '@media (min-width: 900px)': {\n      height: '60px',\n      minHeight: '60px !important',\n      boxSizing: 'border-box',\n    },\n  },\n  '& .MuiTableCell-root.MuiTableCell-body': {\n    lineHeight: '1.25em',\n    fontSize: '1rem',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: '1rem',\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    },\n    '@media (min-width: 900px)': {\n      padding: 0,\n    },\n  },\n  '& .MuiTableCell-root.MuiTableCell-body:first-child': {\n    '@media (min-width: 900px)': {\n      borderTopLeftRadius: '60px',\n      borderBottomLeftRadius: '60px',\n    },\n  },\n  '& .MuiTableCell-root.MuiTableCell-body:last-child': {\n    '@media (min-width: 900px)': {\n      borderTopRightRadius: '60px',\n      borderBottomRightRadius: '60px',\n    },\n  },\n  '& .MuiTableCell-root.MuiTableCell-head': {\n    lineHeight: '1.25em',\n    textTransform: 'uppercase',\n    padding: 0,\n  },\n  '& .MuiAvatar-circular.MuiPaper-root': {\n    background: '#333',\n  },\n}));\n\nconst numberFormater = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 2,\n});\n\nexport const formatNumber = {\n  format: (val) => {\n    if (!val) {\n      return '--';\n    }\n\n    return numberFormater.format(val);\n  },\n};\n\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', width: '100%', pr: 2 }}>\n      <Box sx={{ width: '100%', height: '1rem' }}>\n        <LinearProgress\n          sx={{\n            height: '1rem',\n            borderTopLeftRadius: '1rem',\n            borderBottomLeftRadius: '1rem',\n            '& .MuiLinearProgress-bar': {\n              background:\n                'linear-gradient(276deg, #0FE2DF 5.96%, #8870F2 86.08%, #9E5BF6 96.45%)',\n              borderRadius: '1rem',\n            },\n          }}\n          variant=\"determinate\"\n          {...props}\n        />\n      </Box>\n      <Box\n        sx={{\n          minWidth: 50,\n          backgroundColor: 'black',\n          textAlign: 'center',\n          p: 1,\n          borderRadius: 1,\n        }}\n      >\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {`${Math.round(props.value)}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nexport function GrapePartnersView(props) {\n  //const [partnerData, setPartnerData] = React.useEffect(null);\n  const partnercolumns = [\n    {\n      name:\"name\",\n      label:\"Collection\",\n      options: {\n        filter: true,\n        sort: true,\n        display: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          //console.log(tableMeta.rowData, '......');\n          return (\n            <Grid container direction=\"row\" alignItems=\"center\">\n              <Grid item>\n                <Avatar component={Paper} \n                    elevation={4}\n                    alt={tableMeta.rowData[0]}\n                    src={`${tableMeta.rowData[1]}`}\n                    sx={{\n                      width: 60,\n                      height: 60,\n                    }}\n                />\n              </Grid>\n              <Grid item>\n                <Typography sx={{ marginLeft: 0, whiteSpace: 'pre-wrap', lineHeight: 1.25, p: 1 }}>\n                  {tableMeta.rowData[0].length > 20 ?\n                    tableMeta.rowData[0].substring(0,18) + '...'\n                  :\n                    tableMeta.rowData[0]\n                  }\n                </Typography>\n              </Grid>\n            </Grid>\n          );\n        },\n        setCellHeaderProps: () => ({\n          align: \"center\"\n        })\n      }\n    },\n    {\n      name:\"image\",\n      label:\"Image\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n       }\n    },\n    {\n      name:\"community_strength\",\n      label:\"Community Strength\",\n      options: {\n        filter: false,\n        sort: true,\n        display: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return <LinearProgressWithLabel value={tableMeta.rowData[2]} />;\n        },\n        setCellHeaderProps: () => ({\n          align: \"center\"\n        })\n       }\n    },\n    {\n      name:\"nft_average\",\n      label:\"NFT Average\",\n      options: {\n        filter: false,\n        sort: true,\n        display: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            formatNumber.format(tableMeta.rowData[3])\n          );\n        },\n        setCellProps: () => ({\n          align: \"center\"\n        }),\n        setCellHeaderProps: () => ({\n          align: \"center\"\n        })\n      }\n    },\n    {\n      name:\"unique_holders\", \n      label:\"Unique Holders\",\n      options: {\n        filter: false,\n        sort: true,\n        display: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            formatNumber.format(tableMeta.rowData[4])\n          );\n        },\n        setCellProps: () => ({\n          align: \"center\"\n        }),\n        setCellHeaderProps: () => ({\n          align: \"center\"\n        })\n      }\n    },\n    {\n      name:\"grape_holder_score\",\n      label:\"Grape Holder Score\",\n      options: {\n        filter: false,\n        sort: true,\n        display: true,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return <LinearProgressWithLabel value={tableMeta.rowData[5]} />;\n        },\n        setCellHeaderProps: () => ({\n          align: \"center\"\n        })\n      }\n    }\n  ];\n\n  const partnerdatastatic = [\n    {\n      \"name\": \"Shadowy Super Coder\",\n      \"image\": \"https://verify.grapes.network/server-logos/genesysgo.png\",\n      \"community_strength\": 47,\n      \"tvl\": 28197,\n      \"nft_average\": 3,\n      \"unique_holders\": 1821,\n      \"grape_holder_score\": 49\n    },\n    {\n      \"name\": \"Turtles\",\n      \"image\": \"https://nznh6xujkvtqqg2yph63lm4d7nh2j62qacaxl5irbzcgf3abbnfa.arweave.net/blp_XolVZwgbWHn9tbOD-0-k-1AAgXX1EQ5EYuwBC0o/?ext=png\",\n      \"community_strength\": 65,\n      \"tvl\": 15096,\n      \"nft_average\": 2,\n      \"unique_holders\": 984,\n      \"grape_holder_score\": 62\n    },\n    {\n      \"name\": \"DEGEN DAOO\",\n      \"image\": \"https://verify.grapes.network/server-logos/degendaoo.png\",\n      \"community_strength\": 32,\n      \"tvl\": 8196,\n      \"nft_average\": 2,\n      \"unique_holders\": 1506,\n      \"grape_holder_score\": 36\n    },\n    {\n      \"name\": \"Boryoku Dragonz\",\n      \"image\": \"https://verify.grapes.network/server-logos/boryoku.png\",\n      \"community_strength\": 66,\n      \"tvl\": 5545,\n      \"nft_average\": 2,\n      \"unique_holders\": 215,\n      \"grape_holder_score\": 69\n    },\n    {\n      \"name\": \"Solarians\",\n      \"image\": \"https://verify.grapes.network/server-logos/solarians.gif\",\n      \"community_strength\": 29,\n      \"tvl\": 6391,\n      \"nft_average\": 3,\n      \"unique_holders\": 811,\n      \"grape_holder_score\": 27\n    },\n    {\n      \"name\": \"MonkeDAO\",\n      \"image\": \"https://verify.grapes.network/server-logos/monkedao.png\",\n      \"community_strength\": 51,\n      \"tvl\": 3954,\n      \"nft_average\": 2,\n      \"unique_holders\": 803,\n      \"grape_holder_score\": 70\n    },\n    {\n      \"name\": \"thugDAO\",\n      \"image\": \"https://verify.grapes.network/server-logos/thugbirdz.png\",\n      \"community_strength\": 62,\n      \"tvl\": 3667,\n      \"nft_average\": 1,\n      \"unique_holders\": 1299,\n      \"grape_holder_score\": 71\n    },\n    {\n      \"name\": \"Lifinity\",\n      \"image\": \"https://verify.grapes.network/server-logos/lifinity.png\",\n      \"community_strength\": 44,\n      \"tvl\": 791,\n      \"nft_average\": 6,\n      \"unique_holders\": 1242,\n      \"grape_holder_score\": 42\n    }\n  ];\n\n  const partneroptions = {\n    selectableRows: false,\n    download:false,\n    print:false,\n    viewColumns:false,\n    filter:false\n  };\n  \n  const getPartnerData=()=>{ // this function will be used later on\n    fetch('dataRaw.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n      .then(function(response){\n        console.log(response)\n        return response.json();\n      })\n      .then(function(myJson) {\n        console.log(myJson);\n      });\n  }\n\n  React.useEffect(()=>{\n    //setPartnerData(getPartnerData()); // we will fetch dynamically later on\n  },[])\n\n\n  return (\n    <>\n      <Box sx={{ p: 2, textAlign: 'center' }}>\n        <Typography \n          variant=\"h5\"\n          sx={{ marginLeft: 0, whiteSpace: 'pre-wrap', lineHeight: 1.25, p: 1 }}>\n          PARTNER REPORT\n        </Typography>\n      </Box>\n      <StyledTable sx={{ minWidth: 500 }} size=\"small\" aria-label=\"Grape Partners Table\">\n        <MUIDataTable\n          title={\"\"}\n          data={partnerdatastatic}\n          columns={partnercolumns}\n          options={partneroptions}\n        />\n      </StyledTable>\n      <Box sx={{ p: 2, textAlign: 'center' }}>\n        <Typography variant=\"caption\">\n          <Grid container align=\"center\" xs={{textAlign: 'center'}}>\n            <Grid item xs={12}>* Percentage of total NFTs held by the community</Grid>\n            <Grid item xs={12}>** The current floor price * number of NFTs held by community</Grid>\n            <Grid item xs={12}>*** Percentage of verified holders against overall holders who are members of the community</Grid>\n          </Grid>\n        </Typography>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { \n  Container, \n  Grid, \n  Box, \n  Stack,\n  Paper, \n  Typography,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemText,\n  Avatar,\n} from '@mui/material';\n\nimport CardGiftcardIcon from '@mui/icons-material/CardGiftcard';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport WorkIcon from '@mui/icons-material/Work';\nimport LoginIcon from '@mui/icons-material/Login';\nimport ParaglidingIcon from '@mui/icons-material/Paragliding';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport PeopleIcon from '@mui/icons-material/People';\n\nimport { styled } from '@mui/material/styles';\n\nexport const MembershipView = () => {\n  const StyledPaperOuter = styled(Paper)({\n    background: 'rgba(255, 255, 255, 0.25)',\n    padding: '0.5rem 1rem',\n    borderRadius: 0,\n    boxShadow: 'none',\n    flex: 1,\n    height: '100%',\n  });\n\n  const StyledPaperInner = styled(Paper)({\n    backgroundColor: '#12151C',\n    padding: '1rem',\n    color: 'white',\n    marginBottom: '1rem',\n    textAlign: 'center',\n    borderRadius: '1.5rem',\n    boxShadow: 'none',\n    flex: 1,\n    height: '100%',\n    '&:last-child': {\n      marginBottom: 0,\n    },\n  });\n\n  const Item = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\n  const MembershipItem = () => {\n    //const { className, classAlias, minToken, minTokenLP, values } = tableComparisonItemProps;\n    let className = '';\n    let backgroundHeader = 'linear-gradient(90deg, #545769 16.21%, #262834 81.73%)';\n    if (className === 'B') {\n      backgroundHeader = 'linear-gradient(90deg, #D299FF 16.21%, #B4C8FD 81.73%)';\n    } else if (className === 'A') {\n      backgroundHeader = 'linear-gradient(90deg, #EC0FF3 16.21%, #49AEFC 81.04%)';\n    }\n\n    return (\n      <Container maxWidth=\"xl\">\n        <Grid container>\n          <Grid\n            item\n            sx={{\n              paddingTop: '1rem',\n              order: { xs: 'inherit', lg: 1 },\n            }}\n            xs={12}\n            lg={3}\n          >\n            <img\n              alt=\"Grape Logo\"\n              loading=\"lazy\"\n              style={{ width: '100%', maxWidth: '140px' }}\n            />\n          </Grid>\n\n          \n        </Grid>\n      </Container>\n    );\n  }\n\n\n  return (\n\n    <Container maxWidth=\"xl\">\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n            <Grid item xs={2} sm={4} md={3}>\n              <Stack spacing={2}>\n                <Box>\n\n                  <Typography>\n                    Membership\n                  </Typography>\n                </Box>\n                <Box>\n                  \n                  <List dense={true}>\n                      <ListItem>\n                        <ListItemAvatar>\n                          <Avatar>\n                            <CardGiftcardIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary=\"Monthly Emissions\"\n                        />\n                      </ListItem>\n                  </List>\n                  <List dense={true}>\n                      <ListItem>\n                        <ListItemAvatar>\n                          <Avatar>\n                            <EmojiEventsIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary=\"Event Prize Pools\"\n                        />\n                      </ListItem>\n                  </List>\n                  <List dense={true}>\n                      <ListItem>\n                        <ListItemAvatar>\n                          <Avatar>\n                            <WorkIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary=\"Access to Skill Role Allocation Pool\"\n                        />\n                      </ListItem>\n                  </List>\n                  <List dense={true}>\n                      <ListItem>\n                        <ListItemAvatar>\n                          <Avatar>\n                            <LoginIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary=\"Channel Access Level\"\n                        />\n                      </ListItem>\n                  </List>\n                  <List dense={true}>\n                      <ListItem>\n                        <ListItemAvatar>\n                          <Avatar>\n                            <ParaglidingIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary=\"Chance to win Airdrops/Giveaways\"\n                        />\n                      </ListItem>\n                  </List>\n                  <List dense={true}>\n                      <ListItem>\n                        <ListItemAvatar>\n                          <Avatar>\n                            <GroupsIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary=\"Governance: SubDAO Eligibility\"\n                        />\n                      </ListItem>\n                  </List>\n                  <List dense={true}>\n                      <ListItem>\n                        <ListItemAvatar>\n                          <Avatar>\n                            <PeopleIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary=\"Governance: MainDAO Eligibility\"\n                        />\n                      </ListItem>\n                  </List>\n\n                </Box>\n              </Stack>\n            </Grid>\n            <Grid item xs={2} sm={4} md={3}>\n              <div>xs=2</div>\n            </Grid>\n            <Grid item xs={2} sm={4} md={3}>\n              <div>xs=2</div>\n            </Grid>\n            <Grid item xs={2} sm={4} md={3}>\n              <div>xs=2</div>\n            </Grid>\n        </Grid>\n    </Container>\n  )\n};","import { getRealms, getVoteRecordsByVoter, getTokenOwnerRecordForRealm, getTokenOwnerRecordsByOwner, getGovernanceAccounts, pubkeyFilter, TokenOwnerRecord } from '@solana/spl-governance';\nimport { PublicKey } from '@solana/web3.js';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport {\n  Typography,\n  Button,\n  Grid,\n  Box,\n  Paper,\n  Avatar,\n  Skeleton,\n  Table,\n  TableContainer,\n  TableCell,\n  TableHead,\n  TableBody,\n  TableRow\n} from '@mui/material/';\n\nimport HowToVoteIcon from '@mui/icons-material/HowToVote';\nimport { PretifyCommaNumber } from '../../components/Tools/PretifyCommaNumber';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    '& .MuiTableCell-root': {\n        borderBottom: '1px solid rgba(255,255,255,0.05)'\n    },\n}));\n\nexport function GovernanceView(props: any) {\n    const [loading, setLoading] = React.useState(false);\n    const { connection } = useConnection();\n    const { publicKey } = useWallet();\n    const [realms, setRealms] = React.useState(null);\n    const [realmsArray, setRealmsArray] = React.useState(new Array);\n    const [voteRecords, setVoteRecords] = React.useState(null);\n    const [tokenOwnerRecords, setOwnerRecords] = React.useState(null);\n\n    const getGovernance = async () => {\n        if (!loading){\n            setLoading(true);\n            \n            const programId = new PublicKey('GovER5Lthms3bLBqWub97yVrMmEogzX7xNjdXpPPCVZw');\n            \n            /*\n            const loadedRealms = await getRealms(rpcEndpoint, programId);\n            setRealms(loadedRealms);\n            let loadedRealmsArray = new Array();\n            Object.keys(loadedRealms).forEach(function(key) {\n                loadedRealmsArray.push(loadedRealms[key]);\n            });\n            setRealmsArray(loadedRealmsArray);\n            \n            console.log(\"Realms: \"+JSON.stringify(loadedRealms));\n            */\n            \n            //const loadedRecords = await getVoteRecordsByVoter(programId, rpcEndpoint, publicKey)\n            //setVoteRecords(loadedRecords);\n\n            // statically referencing this for now\n            // we will dynamically get this using the above call - loadedRealmsArray\n            \n            const realmId = new PublicKey('By2sVGZXwfQq6rAiAM3rNPJ9iQfb5e2QhnF4YjJ4Bip'); // Grape RealmId\n            const governingTokenMint = new PublicKey('8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA'); // Grape Mint\n            const governingTokenOwner = publicKey;\n\n            const ownerRecords = await getTokenOwnerRecordForRealm(\n                connection, \n                programId,\n                realmId,\n                governingTokenMint,\n                governingTokenOwner\n            );\n            setOwnerRecords(ownerRecords);\n\n            const ownerRecordsAll = await getGovernanceAccounts(\n                connection, \n                programId, \n                TokenOwnerRecord, [\n                    pubkeyFilter(1 + 32 + 32, governingTokenOwner)!,\n                ]);\n            \n\n            //console.log(\"Realms: \"+JSON.stringify(ownerRecordsAll));\n\n            setLoading(false);\n        } else{\n\n        }\n    }\n    \n    React.useEffect(() => { \n        if (publicKey && !loading)\n            getGovernance();\n    }, [publicKey]);\n    \n    if(loading){\n        return (\n            <React.Fragment>\n                <Grid item xs={12}>\n                    <Paper className=\"grape-paper-background\">\n                        <Paper\n                        className=\"grape-paper\"\n                        sx={{\n                            p: 2,\n                            display: 'flex',\n                            flexDirection: 'column',\n                        }}\n                        >\n                            <Box sx={{ p:1, width: \"100%\" }}>\n                                <Skeleton />\n                            </Box>\n                        </Paper>\n                    </Paper>\n                </Grid>\n            </React.Fragment>\n        )\n    } else{\n        if (tokenOwnerRecords){\n            return (\n                <React.Fragment>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper className=\"grape-paper-background\">\n                            <Box className=\"grape-paper\">\n                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                    <Box className=\"grape-dashboard-component-header\" sx={{ m: 0, position: 'relative' }}>\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                                        GOVERNANCE\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                                \n                                <div style={{width:'auto', overflowX: 'scroll'}}>\n                                    <TableContainer>\n                                        <StyledTable sx={{ minWidth: 500 }} size=\"small\" aria-label=\"Portfolio Table\">\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell><Typography variant=\"caption\">Realm</Typography></TableCell>\n                                                    <TableCell align=\"right\"><Typography variant=\"caption\">Votes</Typography></TableCell>\n                                                    <TableCell></TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                <TableRow>\n                                                    <TableCell style={{ verticalAlign: 'middle' }}>\n                                                        <Grid container direction=\"row\" alignItems=\"center\" sx={{ }}>\n                                                            <Grid item>\n                                                                <Avatar \n                                                                    component={Paper} \n                                                                    elevation={4}\n                                                                    alt=\"Token\" \n                                                                    src={'https://lh3.googleusercontent.com/y7Wsemw9UVBc9dtjtRfVilnS1cgpDt356PPAjne5NvMXIwWz9_x7WKMPH99teyv8vXDmpZinsJdgiFQ16_OAda1dNcsUxlpw9DyMkUk=s0'}\n                                                                    sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                                                                />\n                                                            </Grid>\n                                                            <Grid item sx={{ ml: 1 }}>\n                                                                    {'Grape Votes'}\n                                                            </Grid>\n                                                        </Grid>\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">{(parseInt(tokenOwnerRecords.account.governingTokenDepositAmount, 10))/1000000}</TableCell>\n                                                    <TableCell align=\"right\"><Button href='https://realms.today/dao/GRAPE' target='_blank'><HowToVoteIcon /></Button></TableCell>\n                                                </TableRow> \n                                            </TableBody>\n                                        </StyledTable>\n                                    </TableContainer>\n                                </div>\n                            </Box>\n                        </Paper>\n                    </Grid>\n                </React.Fragment>\n            );\n        }else{\n            return (<></>);\n        }\n        \n    }\n}","import * as React from 'react';\nimport { Link, useLocation, NavLink } from 'react-router-dom';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nimport { useSnackbar } from 'notistack';\n\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\nimport Snackbar, { SnackbarOrigin } from '@mui/material/Snackbar';\n\n\n//import Wallet from '../../utils/wallet/Wallet';\n//import PhantomWallet from '../../utils/wallet/Phantom';\n//import SolflareWallet from '../../utils/wallet/Solflare';\n\nimport { useSession } from \"../../contexts/session\";\n\nimport {\n    MenuItem,\n    Menu,\n    Tooltip,\n    Dialog,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemText\n} from '@mui/material';\n\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport GroupWorkIcon from '@mui/icons-material/GroupWork';\nimport LinkOffIcon from '@mui/icons-material/LinkOff';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport ImageIcon from '@mui/icons-material/Image';\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\nimport IconButton from '@mui/material/IconButton';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\n\nimport DashboardOutlinedIcon from '@mui/icons-material/DashboardOutlined';\nimport PhotoOutlinedIcon from '@mui/icons-material/PhotoOutlined';\nimport InsertChartOutlinedIcon from '@mui/icons-material/InsertChartOutlined';\n\nimport ConnectDialog from '../ConnectDialog/ConnectDialog';\nimport { truncate } from 'lodash';\nimport RssFeed from '@mui/icons-material/RssFeed';\n\nexport interface State extends SnackbarOrigin {\n    open: boolean;\n}\n\nfunction getParam(param: string) {\n    //return new URLSearchParams(document.location.search).get(param);\n    return new URLSearchParams(window.location.search).get(param);\n}\n\ninterface HeaderProps{\n    children?:React.ReactNode;\n}\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n    props,\n    ref,\n    ) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport function Header(props: any) {\n    const { open_menu } = props;\n    const [open_snackbar, setSnackbarState] = React.useState(false);\n    \n    const { session, setSession } = useSession();\n    const [tokenParam, setTokenParam] = React.useState(getParam('token'));\n    const [discordId, setDiscordId] = React.useState(getParam('discord_id'));\n    const [userId, setUserId] = React.useState(getParam('user_id'));\n    const [providers, setProviders] = React.useState(['Sollet', 'Sollet Extension', 'Phantom','Solflare']);\n    const [open_wallet, setOpenWallet] = React.useState(false);\n    \n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const isWalletOpen = Boolean(anchorEl);\n    const wallets = session && session.userWallets;\n\n    const location = useLocation();\n    const currPath = location.pathname;\n    const searchParams = new URLSearchParams(location.search);\n    //const currPath = location?.pathname ?? \"\";\n    const { enqueueSnackbar } = useSnackbar();\n\n    const routes = [\n        { name: \"Home\", path: \"/\" },\n        // { name: \"Servers\", path: \"/servers\" },\n\n        // { name: \"Settings\", path: \"/settings\" }\n    ]\n    \n    /*\n    const toggleDrawer = () => {\n        //setOpenDrawer(!open);\n        open = !open;//setOpen(!open);\n    };\n    */\n\n    const isConnected = session && session.isConnected;\n\n    /*\n    async function connect() {\n        let wallet = new Wallet();\n        wallet.onChange = (wallet) => onWalletConnect(wallet);\n        await wallet.connect();\n    }\n\n    async function connectPhantom() {\n        let wallet = new PhantomWallet();\n        wallet.onChange = (wallet: any) => onWalletConnect(wallet);\n        await wallet.connect();\n    }\n    \n    async function connectSolflare() {\n        let wallet = new SolflareWallet();\n        wallet.onChange = () => onWalletConnect(wallet);\n        await wallet.connect();\n    }\n    \n    async function onWalletConnect(wallet: any){\n        if(wallet){\n            let session = await wallet.signMessage('$GRAPE');\n            if(session){\n                setSession(session);\n            }\n        }\n    }\n    */\n\n    async function disconnect() {\n        setSession(null);\n        window.location.href = \"/\"\n    }    \n\n    //Menu\n    const menuId = 'primary-wallet-account-menu';\n    const menuWalletId = 'primary-fullwallet-account-menu';\n\n    const handleProfileMenuOpen = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        // this.props.parentCallback(\"Data from child\");\n    };\n\n    const handleWalletConnectClickOpen = (type: string, callback: any) => {\n        /*\n        switch(type) {\n            case \"sollet\":\n                connect();\n                break;\n            case \"phantom\":\n                connectPhantom();\n                break;\n            case \"solflare\":\n                connectSolflare();\n                break;\n            default:\n                break;\n        }\n        */\n       \n        callback && callback();\n    };\n\n    const handleCloseWallet = (value: any) => {\n        setOpenWallet(false);\n\n    };\n\n    function SimpleDialog(props: any) {\n        const { onClose, selectedValue, open_wallet } = props;\n\n        const handleCloseWallet = () => {\n            onClose(selectedValue);\n        };\n\n        const handleListItemClick = (value: any) => {\n            onClose(value);\n        };\n\n        return (\n            <Dialog onClose={handleCloseWallet} aria-labelledby=\"simple-dialog-title\" open={open_wallet}>\n                <DialogTitle id=\"simple-dialog-title\">Select Wallet</DialogTitle>\n                <List>\n                    {providers.map((provider) => (\n                        <ListItem button onClick={() => handleListItemClick(provider)} key={provider}>\n                            <ListItemText primary={provider} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Dialog>\n        );\n    }\n\n    const handleClickSnackbar = () => {\n        enqueueSnackbar(`Copied...`,{ variant: 'success' });\n        \n        handleMenuClose();\n        //setSnackbarState(true);\n    };\n\n    const handleCloseSnackbar = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnackbarState(false);\n    };\n\n\n    return (\n\n        <Toolbar\n            color=\"inherit\"\n            sx={{\n                pr: '24px', // keep right padding when drawer closed\n                background: 'none'\n            }}\n            >\n\n            {/*    \n            <IconButton\n                size=\"large\"\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={props.toggleDrawer}\n                sx={{\n                marginRight: '36px',\n                ...(open && { display: 'none' }),\n                }}\n            >\n                <MenuIcon />\n            </IconButton>\n            */}\n            \n            <Box display='flex' flexGrow={1}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h6\"\n                    color=\"inherit\"\n                    noWrap\n                    display='flex'\n                >\n                    <img src=\"/grape_white_logo.svg\" height=\"40px\" className=\"header-logo\" alt=\"Grape\" />\n                </Typography>\n                \n                <Tooltip title={`Dashboard`}><IconButton component={NavLink} color=\"inherit\" to=\"/\"><DashboardOutlinedIcon/></IconButton></Tooltip>\n                <Tooltip title={`Collection`}><IconButton component=\"a\" href='https://grape.art' target=\"_blank\"><PhotoOutlinedIcon/></IconButton></Tooltip>\n                <Tooltip title={`Partners`}><IconButton component={NavLink} color=\"inherit\" to=\"/partners\"><InsertChartOutlinedIcon/></IconButton></Tooltip>\n                <Tooltip title={`News`}><IconButton component={NavLink} color=\"inherit\" to=\"/news\"><RssFeedIcon/></IconButton></Tooltip>\n                \n                {/*<Tooltip title={`Unlisted Offers`}><IconButton color=\"inherit\" href=\"/unlistedoffers\"><LocalOfferIcon /></IconButton></Tooltip>*/}\n            </Box>\n            <div>\n\n                {currPath !== \"/register\" && currPath !== \"/start\" ?\n                    <>\n                    {searchParams.toString().length <= 100 &&\n                        \n                        <div className=\"header-action\">\n                            <ConnectDialog \n                                session={session}\n                                isConnected={isConnected}\n                                userId={userId}\n                                menuId='primary-wallet-account-menu'\n                                menuWalletId='primary-fullwallet-account-menu'\n                                handleProfileMenuOpen={handleProfileMenuOpen}\n                                handleClickOpen={handleWalletConnectClickOpen}\n                                buttonText=\"Connect\"\n                                nakedWallet={false}\n                                login={true}   \n                                token={null}   \n                                discordId={null} \n                            />\n\n                            \n                            <Box sx={{ display: { xs: 'flex', md: 'none' } }}>\n                                <Menu\n                                    anchorEl={anchorEl}\n                                    id={menuId}\n                                    keepMounted\n                                    open={isWalletOpen}\n                                    //open={open_wallet}\n                                    onClose={handleMenuClose}\n                                >\n                                    <CopyToClipboard \n                                        text={session.publicKey} \n                                        //onCopy={copySnackbar}>\n                                        onCopy={handleClickSnackbar}>\n                                        <MenuItem>\n                                            <ContentCopyIcon sx={{ mr:1 }} /> Copy to clipboard\n                                        </MenuItem>\n                                    </CopyToClipboard>\n                                    <MenuItem\n                                        component=\"a\"\n                                        href={`https://explorer.solana.com/address/${session.publicKey}`}\n                                        target=\"_blank\"\n                                    >\n                                        <OpenInNewIcon sx={{ mr:1 }} /> Explore\n                                    </MenuItem>\n                                    <MenuItem onClick={disconnect}><LinkOffIcon sx={{ mr:1 }} />Disconnect</MenuItem>\n                                </Menu>\n                            </Box>\n\n                            <SimpleDialog open={open_wallet} onClose={handleCloseWallet} />\n                            \n                        </div>\n                    }\n                </>\n                :\n                <>\n                </>\n                }\n            </div>\n        </Toolbar>\n        \n    );\n}\n\nexport default Header;\n","import React from 'react';\n// material ui\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Box,\n  IconButton,\n  Typography,\n} from '@mui/material';\nimport { Close } from '@mui/icons-material';\n// zustand\nimport create from 'zustand';\n\ntype ConfirmDialogStore = {\n  message: string;\n  onSubmit?: () => void;\n  close: () => void;\n};\n\nconst useConfirmDialogStore = create<ConfirmDialogStore>((set) => ({\n  message: '',\n  onSubmit: undefined,\n  close: () => set({ onSubmit: undefined }),\n}));\n\nexport const confirmDialog = (message: string, onSubmit: () => void) => {\n  useConfirmDialogStore.setState({\n    message,\n    onSubmit,\n  });\n};\n\nconst ConfirmDialog = () => {\n  const { message, onSubmit, close } = useConfirmDialogStore();\n  //return new Promise((res) => {\n  return (\n    <Dialog open={Boolean(onSubmit)} onClose={close} maxWidth=\"sm\" fullWidth>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <DialogTitle>Confirm the action</DialogTitle>\n        <IconButton onClick={close}>\n          <Close />\n        </IconButton>\n      </Box>\n      <DialogContent>\n        <Typography>{message}</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={close}>\n          Cancel\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            if (onSubmit) {\n              onSubmit();\n            }\n            close();\n          }}\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n  //});\n};\n\nexport default ConfirmDialog;","import { createTheme, makeStyles } from '@mui/material/styles';\n// paper: #12151B\n\n//background: rgb(18,21,28);\n//background: linear-gradient(0deg, rgba(18,21,28,1) 10%, rgba(2,0,36,1) 35%, rgba(90,111,179,1) 100%);\n\n \n//background: #F0F2F0;  /* fallback for old browsers */\n//background: -webkit-linear-gradient(to right, #000C40, #F0F2F0);  /* Chrome 10-25, Safari 5.1-6 */\n//background: linear-gradient(to right, #000C40, #F0F2F0); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n//background: #141E30;  /* fallback for old browsers */\n//background: -webkit-linear-gradient(to right, #243B55, #141E30);  /* Chrome 10-25, Safari 5.1-6 */\n//background: linear-gradient(to right, #243B55, #141E30); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\nconst themeInstance = {\n  background: 'linear-gradient(0deg, rgba(18,21,28,1) 10%, rgba(2,0,36,1) 35%, rgba(90,111,179,1) 100%)',//'#0A1D30',\n};\n\nconst theme = createTheme({\n//const useStyles = makeStyles((theme: typeof themeInstance) => ({\n  palette: {\n    mode: \"dark\",\n    background: {\n      default: '#0A1D30',\n      paper: \"#000000\"\n    },\n  }\n});\n\n\n\nexport default theme;","import React, { FC, ReactNode, useCallback, useMemo } from 'react';\nimport { styled, ThemeProvider } from '@mui/material/styles';\nimport { HashRouter, BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { HomeView, ServersView, SettingsView, ConfirmationView, RegisterView, NewsView, GrapePartnersView, MembershipView, ContributeView, PaymentsView } from \"./views\";\nimport { SessionProvider } from \"./contexts/session\";\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\n\nimport {\n  Box,\n  Grid,\n  Paper,\n  Container,\n  Typography,\n  AppBar,\n} from '@mui/material';\n\nimport Header from './components/Header/Header';\nimport { SnackbarProvider } from 'notistack';\nimport { useConnection, ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork, WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { Connection, Keypair, SystemProgram, Transaction, clusterApiUrl } from '@solana/web3.js';\nimport { Helmet } from 'react-helmet';\n\nimport { useSnackbar } from 'notistack';\nimport ConfirmDialog from './components/ConfirmDialog/ConfirmDialog';\n\n//import { WalletDialogProvider, WalletDisconnectButton, WalletMultiButton } from '../WalletAdapterMui';\n\n/*\nimport {\n  LedgerWalletAdapter,\n  PhantomWalletAdapter,\n  SlopeWalletAdapter,\n  SolflareWalletAdapter,\n  SolletExtensionWalletAdapter,\n  SolletWalletAdapter,\n  TorusWalletAdapter,\n  //CloverWalletAdapter,\n  //MathWalletAdapter,\n  //Coin98WalletAdapter,\n  //SolongWalletAdapter,\n} from '@solana/wallet-adapter-wallets';\n*/\n\nimport {\n  getLedgerWallet,\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletExtensionWallet,\n  getSolletWallet,\n  getTorusWallet,\n} from '@solana/wallet-adapter-wallets';\n\n//import { mainListItems, secondaryListItems } from './components/SidebarList/SidebarList';\nimport grapeTheme from  './config/theme'\nimport \"./App.less\";\nimport { GRAPE_RPC_ENDPOINT, FREE_RPC_ENDPOINT } from './components/Tools/constants';\n\nfunction Copyright(props: any) {\n  return (\n    <Typography sx={{background:'transparent'}} variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      Grape Network\n      {/*\n      <Link color=\"inherit\" href=\"https://verify.grapes.network\">\n        Grape Network | Dashboard vXYZ\n      </Link>\n      */}\n    </Typography>\n  );\n}\n\nconst drawerWidth: number = 240;\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n  ({ theme, open }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      boxSizing: 'border-box',\n      ...(!open && {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing(7),\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(9),\n        },\n      }),\n    },\n  }),\n);\n\n\nfunction DashboardContent() {\n  const [open, setOpen] = React.useState(true);\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  // You can also provide a custom RPC endpoint\n  const network = WalletAdapterNetwork.Mainnet; //.Devnet; //.Mainnet;\n  // You can also provide a custom RPC endpoint\n  const endpoint = GRAPE_RPC_ENDPOINT; //useMemo(() => clusterApiUrl(network), [network]);\n\n  const wallets = useMemo(() => [\n    getPhantomWallet(),\n    getSolflareWallet(),\n    getSlopeWallet(),\n    getSolletWallet({ network }),\n    getSolletExtensionWallet({ network }),\n    //getLedgerWallet(),\n    getTorusWallet({\n      options: { clientId: 'BCX2hQWDez2_qJhmSuQC7DXD4OG0VfGEFjCZfLar2EA5NvKyudCxOOlOcQ4YZbPGQhdwLonSXZr3i_siIJVhtwI' }\n    }),\n    /*\n    new PhantomWalletAdapter(),\n    new SlopeWalletAdapter(),\n    new SolflareWalletAdapter(),\n    new TorusWalletAdapter(),\n    new LedgerWalletAdapter(),\n    new SolletWalletAdapter({ network }),\n    new SolletExtensionWalletAdapter({ network }),\n    */\n    //new CloverWalletAdapter(),\n    //new MathWalletAdapter(),\n    //new Coin98WalletAdapter(),\n    //new SolongWalletAdapter(),\n  ], [network]);\n\n  return (\n    <>\n    <Helmet>\n      <title>Grape Dashboard</title>\n      <meta name=\"theme-color\" content=\"#ffffff\" />\n      <meta name=\"description\" content=\"Grape Dashboard\" />\n      \n      <meta name=\"msapplication-TileColor\" content=\"#da532c\"/>\n      <meta name=\"theme-color\" content=\"#ffffff\"/>\n\n      <meta property=\"og:url\" content=\"https://verify.grapes.network/\"/>\n      <meta property=\"og:type\" content=\"website\"/>\n      <meta property=\"og:title\" content=\"Grape Network | The Grape Ape Network\"/>\n      <meta property=\"og:description\" content=\"Decentralized Social Networking Create, Reward &amp; Secure any online community by harnessing the power of Solana\"/>\n      <meta property=\"og:image\" content=\"/grape_og.png\"/>\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content='https://verify.grapes.network' />\n      <meta name=\"twitter:title\" content='Grape Network' />\n      <meta name=\"twitter:description\" content='' />\n      <meta name=\"twitter:image\" content='/grape_og.png' />\n    </Helmet>\n    <ThemeProvider theme={grapeTheme}>\n      <SnackbarProvider>\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} autoConnect>\n              \n              <Grid \n                //color={grapeTheme.palette.primary.light}\n                sx={{ \n                  flex: 1\n                }}>\n                <CssBaseline />\n                <HashRouter>\n                  <SessionProvider>\n                    <AppBar position=\"fixed\" color=\"primary\" style={{ background: 'rgba(0,0,0,0.5)' }}>\n                        <Header\n                            open={open} \n                            toggleDrawer={toggleDrawer}\n                        />\n\n                      </AppBar>\n                      \n                      <Grid\n                        component=\"main\"\n                        sx={{\n                          mt: 6,\n                          display: 'flex',\n                          flexGrow: 1\n                        }}\n                      >\n                        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4}}>\n                          <ConfirmDialog />\n                          <Routes>\n                            <Route path=\"/\" element={<HomeView/>} />\n                            <Route index element={<HomeView/>} />\n                            <Route path=\"dashboard\" element={<HomeView/>} />\n                            <Route path=\"contribute\" element={<ContributeView />} />\n                            <Route path=\"servers\" element={<ServersView />} />\n                            <Route path=\"settings\" element={<SettingsView />} />\n                            <Route path=\"partners\" element={<GrapePartnersView />} />\n                            <Route path=\"confirmation\" element={<ConfirmationView />} />\n                            <Route path=\"register\" element={<RegisterView />} />\n                            <Route path=\"membership\" element={<MembershipView />} />\n                            <Route path=\"news\" element={<NewsView />} />\n                            <Route path=\"payments\" element={<PaymentsView />} />\n                            <Route path=\"*\" element={<NotFound/>} />\n                          </Routes>\n                          \n                          <Copyright sx={{ mt: 4 }} />\n                        </Container>\n                      </Grid>\n                  </SessionProvider>\n                </HashRouter>\n              </Grid>\n              \n            </WalletProvider>\n          </ConnectionProvider>\n        </SnackbarProvider>\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport const NotFound = () => {\n  return (\n    <div style={{ height: \"100%\", overflow: \"auto\" }}>\n      <Paper className=\"grape-paper-background\">\n        <Grid \n          className=\"grape-paper\" \n          container\n          alignContent=\"center\"\n          justifyContent=\"center\"\n          direction=\"column\">\n          <Grid item>\n            <Typography \n              align=\"center\"\n              variant=\"h3\">\n              {'No Grapes Here...'}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n  </div>\n  )\n}\n\n//export const Dashboard: FC<{ children: ReactNode }> = ({ children }) => {\nexport default function Dashboard() {\n  return <DashboardContent />;\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// measure performance\nreportWebVitals();","import React, { useEffect, useState } from 'react';\n\nimport {\n  Typography,\n  Button,\n  Grid,\n  Paper,\n  Box,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@mui/material';\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Timeline } from 'react-twitter-widgets'\n//import { TwitterTimelineEmbed } from 'react-twitter-embed';\n\n//class ShowTwitterFeed extends React.Component {\n\nfunction ShowTwitterFeed(props:any){  \n  /*\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://platform.twitter.com/widgets.js\";\n    document.getElementsByClassName(\"twitter-embed\")[0].appendChild(script);\n  }, []);\n\n  return (\n    \n      <section className=\"twitterContainer\">\n        <div className=\"twitter-embed\">\n          <a\n            className=\"twitter-timeline\"\n            data-theme=\"dark\"\n            data-tweet-limit=\"5\"\n            data-chrome=\"noheader nofooter noborders, transparent\"\n            //height=\"400\" //{props.twitterFeedHeight}\"\"\n            href=\"https://twitter.com/grapeprotocol\"//</div>+{props.twitterFeedHandle}\n          >\n            Tweets by {props.twitterFeedHandle}\n          </a>\n        </div>\n      </section>\n  );\n  */\n  //return <>Nothing to see here anymore!</>;\n  \n  return (\n    <React.StrictMode>\n      <Timeline\n        dataSource={{\n          sourceType: 'profile',\n          screenName: props.twitterFeedHandle\n        }}\n        options={{\n          height: props.twitterFeedHeight,//'400',\n          chrome:'transparent, noheader, nofooter',\n          //dnt: true, \n          theme: 'dark',\n          borderColor: 'transparent'\n        }}\n      />\n    </React.StrictMode>\n  );\n}\n\nexport default function TwitterFeedComponent(props:any) {\n  //const theme = useTheme();\n  const title = props.title;\n  const twitterFeedHandle = props.twitterFeedHandle;\n  const twitterFeedHeight = props.twitterFeedHeight;\n  const componentTwitterFeed = props.componentTwitterFeed;\n  const componentExpanded = props.componetExpanded;\n  // make collapsable component\n  const [expanded, setExpanded] = React.useState(componentExpanded);\n\n    if (componentTwitterFeed){\n      return (\n        <Grid item xs={12} md={6} lg={6}>\n            <Paper elevation={0} className=\"grape-blur-bg\">\n              <Accordion expanded={true} className=\"grape-blur\" TransitionProps={{ unmountOnExit: true }}>\n                {title &&\n                  <Box>\n                      <AccordionSummary\n                        //expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                      >\n                        \n                      <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                            {title}\n                      </Typography>\n                    </AccordionSummary>\n                    \n                  </Box>\n                }\n                <AccordionDetails>\n                  <ShowTwitterFeed twitterFeedHandle={twitterFeedHandle} twitterFeedHeight={twitterFeedHeight} />\n                </AccordionDetails>\n              </Accordion>\n            </Paper>\n          </Grid>\n      );\n    } else {\n      return (\n        <Paper>\n          {title &&\n            <Box>\n                <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                      {title}\n                </Typography>\n            </Box>\n          }\n            <ShowTwitterFeed twitterFeedHandle={twitterFeedHandle} twitterFeedHeight={twitterFeedHeight} />\n        </Paper>\n      );\n  }\n            \n}","import BigNumber from 'bignumber.js'\n\n// https://github.com/MikeMcl/bignumber.js\n// https://blog.csdn.net/shenxianhui1995/article/details/103985434\nexport class TokenAmount {\n  public wei: BigNumber\n\n  public decimals: number\n  public _decimals: BigNumber\n\n  constructor(wei: number | string | BigNumber, decimals: number = 0, isWei = true) {\n    this.decimals = decimals\n    this._decimals = new BigNumber(10).exponentiatedBy(decimals)\n\n    if (isWei) {\n      this.wei = new BigNumber(wei)\n    } else {\n      this.wei = new BigNumber(wei).multipliedBy(this._decimals)\n    }\n  }\n\n  toEther() {\n    return this.wei.dividedBy(this._decimals)\n  }\n\n  toWei() {\n    return this.wei\n  }\n\n  format() {\n    const vaule = this.wei.dividedBy(this._decimals)\n    return vaule.toFormat(vaule.isInteger() ? 0 : this.decimals)\n  }\n\n  fixed() {\n    return this.wei.dividedBy(this._decimals).toFixed(this.decimals)\n  }\n\n  isNullOrZero() {\n    return this.wei.isNaN() || this.wei.isZero()\n  }\n  // + plus\n  // - minus\n  // × multipliedBy\n  // ÷ dividedBy\n}\n\n// >\nexport function gt(a: string | number, b: string | number) {\n  const valueA = new BigNumber(a)\n  const valueB = new BigNumber(b)\n\n  return valueA.isGreaterThan(valueB)\n}\n\n// >=\nexport function gte(a: string | number, b: string | number) {\n  const valueA = new BigNumber(a)\n  const valueB = new BigNumber(b)\n\n  return valueA.isGreaterThanOrEqualTo(valueB)\n}\n\n// <\nexport function lt(a: string | number, b: string | number) {\n  const valueA = new BigNumber(a)\n  const valueB = new BigNumber(b)\n\n  return valueA.isLessThan(valueB)\n}\n\n// <=\nexport function lte(a: string | number, b: string | number) {\n  const valueA = new BigNumber(a)\n  const valueB = new BigNumber(b)\n\n  return valueA.isLessThanOrEqualTo(valueB)\n}\n\nexport function isNullOrZero(value: string | number) {\n  const amount = new BigNumber(value)\n\n  return amount.isNaN() || amount.isZero()\n}\n","import React, { FC, useCallback } from 'react';\nimport { WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction, Signer } from '@solana/web3.js';\nimport { Token, TOKEN_PROGRAM_ID, ASSOCIATED_TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\n\nimport { GRAPE_RPC_ENDPOINT, FREE_RPC_ENDPOINT } from '../../components/Tools/constants';\nimport { GRAPE_TREASURY } from '../../components/Tools/constants';\n\nimport { styled } from '@mui/material/styles';\n\nimport {\n  Dialog,\n  Button,\n  ButtonGroup,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  MenuItem,\n  InputLabel,\n  Select,\n  IconButton,\n  Avatar,\n  Grid,\n  Paper,\n  Typography\n} from '@mui/material';\n\n\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport { MakeLinkableAddress, ValidateAddress } from '../../components/Tools/WalletAddress'; // global key handling\nimport { useSnackbar } from 'notistack';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport HelpIcon from '@mui/icons-material/Help';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\nimport ArrowCircleRightOutlinedIcon from '@mui/icons-material/ArrowCircleRightOutlined';\n\nfunction trimAddress(addr: string) {\n    if (!addr) return addr;\n    let start = addr.substring(0, 8);\n    let end = addr.substring(addr.length - 4);\n    return `${start}...${end}`;\n}\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport interface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function SendToken(props: any) {\n    const [open, setOpen] = React.useState(false);\n    const [amounttosend, setTokensToSend] = React.useState(null);\n    const [showTokenName, setShowTokenName] = React.useState(props.showTokenName);\n    const [toaddress, setToAddress] = React.useState(null);\n    const [userTokenBalanceInput, setTokenBalanceInput] = React.useState(0);\n    const [convertedAmountValue, setConvertedAmountValue] = React.useState(null);\n    const mint = props.mint;\n    const logoURI = props.logoURI;\n    const name = props.name;\n    const balance = props.balance;\n    const conversionrate = props.conversionrate;\n    const sendtype = props.sendType || 0; // 0 regular 1 to grape treasury\n    const [memotype, setMemoType] = React.useState(0);\n    const [memoref, setMemoRef] = React.useState('');\n    const [memonotes, setMemoNotes] = React.useState(''); \n    const [memoText, setMemoText] = React.useState(null); \n    const freeconnection = new Connection(FREE_RPC_ENDPOINT);\n    const { connection } = useConnection();\n    const { publicKey, wallet, sendTransaction } = useWallet();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const onError = useCallback(\n        (error: WalletError) => {\n            enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, { variant: 'error' });\n            console.error(error);\n        },\n        [enqueueSnackbar]\n    );\n    const handleClickOpen = () => {\n\n        if (sendtype === 1) \n            setToAddress(GRAPE_TREASURY);\n\n        setTokenBalanceInput(0);\n        setConvertedAmountValue(0);\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleSelectChange = (event: SelectChangeEvent) => {\n        setMemoType(+(event.target.value as string));\n      };\n\n    async function transferTokens(tokenMintAddress: string, to: string, amount: number) {\n        const fromWallet = publicKey;\n        const toWallet = new PublicKey(toaddress);\n        const mintPubkey = new PublicKey(tokenMintAddress);\n        const amountToSend = +amounttosend;\n        const tokenAccount = new PublicKey(mintPubkey);\n        \n\n        let GRAPE_TT_MEMO = {\n            status:1, // status\n            type:memotype, // AMA - SETUP \n            ref:memoref, // SOURCE\n            notes:memonotes\n        };\n        \n        if (memoText){\n            GRAPE_TT_MEMO = memoText\n        }\n        \n\n        if (tokenMintAddress == \"So11111111111111111111111111111111111111112\"){ // Check if SOL\n            const decimals = 9;\n            const adjustedAmountToSend = amountToSend * Math.pow(10, decimals);\n            const transaction = new Transaction()\n            .add(\n                SystemProgram.transfer({\n                    fromPubkey: fromWallet,\n                    toPubkey: toWallet,\n                    lamports: adjustedAmountToSend,\n                })\n            ).add(\n                new TransactionInstruction({\n                    keys: [{ pubkey: fromWallet, isSigner: true, isWritable: true }],\n                    data: Buffer.from(JSON.stringify(GRAPE_TT_MEMO), 'utf-8'),\n                    programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n                })\n            );\n            try{\n                enqueueSnackbar(`Preparing to send ${amountToSend} ${name} to ${toaddress}`,{ variant: 'info' });\n                const signature = await sendTransaction(transaction, freeconnection);\n                const snackprogress = (key:any) => (\n                    <CircularProgress sx={{padding:'10px'}} />\n                );\n                const cnfrmkey = enqueueSnackbar(`Confirming transaction`,{ variant: 'info', action:snackprogress, persist: true });\n                await connection.confirmTransaction(signature, 'processed');\n                closeSnackbar(cnfrmkey);\n                const action = (key:any) => (\n                        <Button href={`https://explorer.solana.com/tx/${signature}`} target='_blank'  sx={{color:'white'}}>\n                            Signature: {signature}\n                        </Button>\n                );\n                enqueueSnackbar(`Sent ${amountToSend} ${name} to ${toaddress}`,{ variant: 'success', action });\n            }catch(e){\n                enqueueSnackbar(`Error: ${(e)}`,{ variant: 'error' });\n            } \n        } else{\n            const accountInfo = await connection.getParsedAccountInfo(tokenAccount);\n            const accountParsed = JSON.parse(JSON.stringify(accountInfo.value.data));\n            const decimals = accountParsed.parsed.info.decimals;\n\n            let fromAta = await Token.getAssociatedTokenAddress( // calculate from ATA\n                ASSOCIATED_TOKEN_PROGRAM_ID, // always ASSOCIATED_TOKEN_PROGRAM_ID\n                TOKEN_PROGRAM_ID, // always TOKEN_PROGRAM_ID\n                mintPubkey, // mint\n                fromWallet // from owner\n            );\n            \n            let toAta = await Token.getAssociatedTokenAddress( // calculate to ATA\n                ASSOCIATED_TOKEN_PROGRAM_ID, // always ASSOCIATED_TOKEN_PROGRAM_ID\n                TOKEN_PROGRAM_ID, // always TOKEN_PROGRAM_ID\n                mintPubkey, // mint\n                toWallet // to owner\n            );\n            \n            const adjustedAmountToSend = amountToSend * Math.pow(10, decimals);\n            const receiverAccount = await connection.getAccountInfo(toAta);\n            \n            if (receiverAccount === null) { // initialize token\n                const transaction = new Transaction()\n                .add(\n                    Token.createAssociatedTokenAccountInstruction(\n                        ASSOCIATED_TOKEN_PROGRAM_ID, // always ASSOCIATED_TOKEN_PROGRAM_ID\n                        TOKEN_PROGRAM_ID, // always TOKEN_PROGRAM_ID\n                        mintPubkey, // mint\n                        toAta, // ata\n                        toWallet, // owner of token account\n                        fromWallet // fee payer\n                    )\n                )\n                .add(\n                    Token.createTransferInstruction(\n                        TOKEN_PROGRAM_ID,\n                        fromAta,\n                        toAta,\n                        publicKey,\n                        [],\n                        adjustedAmountToSend,\n                    )\n                ).add(\n                    new TransactionInstruction({\n                        keys: [{ pubkey: fromWallet, isSigner: true, isWritable: true }],\n                        data: Buffer.from(JSON.stringify(GRAPE_TT_MEMO), 'utf-8'),\n                        programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n                    })\n                );\n                \n                try{\n                    enqueueSnackbar(`Preparing to send ${amountToSend} ${name} to ${toaddress}`,{ variant: 'info' });\n                    const signature = await sendTransaction(transaction, freeconnection);\n                    const snackprogress = (key:any) => (\n                        <CircularProgress sx={{padding:'10px'}} />\n                    );\n                    const cnfrmkey = enqueueSnackbar(`Confirming transaction`,{ variant: 'info', action:snackprogress, persist: true });\n                    await connection.confirmTransaction(signature, 'processed');\n                    closeSnackbar(cnfrmkey);\n                    const action = (key:any) => (\n                        <Button href={`https://explorer.solana.com/tx/${signature}`} target='_blank' sx={{color:'white'}} >\n                            Signature: {signature}\n                        </Button>\n                    );\n                    enqueueSnackbar(`Sent ${amountToSend} ${name} to ${toaddress}`,{ variant: 'success', action });\n                }catch(e){\n                    closeSnackbar();\n                    enqueueSnackbar(`Error: ${(e)}`,{ variant: 'error' });\n                } \n            } else{ // token already in wallet\n                const transaction = new Transaction()\n                .add(\n                    Token.createTransferInstruction(\n                    TOKEN_PROGRAM_ID,\n                    fromAta,\n                    toAta,\n                    publicKey,\n                    [],\n                    adjustedAmountToSend,\n                    )\n                )\n                .add(\n                    new TransactionInstruction({\n                        keys: [{ pubkey: fromWallet, isSigner: true, isWritable: true }],\n                        data: Buffer.from(JSON.stringify(GRAPE_TT_MEMO), 'utf-8'),\n                        programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n                    })\n                );\n                \n                try{\n                    enqueueSnackbar(`Preparing to send ${amountToSend} ${name} to ${toaddress}`,{ variant: 'info' });\n                    const signature = await sendTransaction(transaction, freeconnection);\n                    const snackprogress = (key:any) => (\n                        <CircularProgress sx={{padding:'10px'}} />\n                    );\n                    const cnfrmkey = enqueueSnackbar(`Confirming transaction`,{ variant: 'info', action:snackprogress, persist: true });\n                    await connection.confirmTransaction(signature, 'processed');\n                    closeSnackbar(cnfrmkey);\n                    const action = (key:any) => (\n                        <Button href={`https://explorer.solana.com/tx/${signature}`} target='_blank' sx={{color:'white'}} >\n                            Signature: {signature}\n                        </Button>\n                    );\n                    enqueueSnackbar(`Sent ${amountToSend} ${name} to ${toaddress}`,{ variant: 'success', action });\n                }catch(e){\n                    closeSnackbar();\n                    enqueueSnackbar(`Error: ${(e)}`,{ variant: 'error' });\n                } \n            }\n        }\n    }\n    \n    function HandleSendSubmit(event: any) {\n        event.preventDefault();\n        if (amounttosend >= 0){\n            if (toaddress){\n                if ((toaddress.length >= 32) && \n                    (toaddress.length <= 44)){ // very basic check / remove and add twitter handle support (handles are not bs58)\n                    transferTokens(mint, toaddress, amounttosend);\n                    handleClose();\n                } else{\n                    // Invalid Wallet ID\n                    enqueueSnackbar(`Enter a valid Wallet Address!`,{ variant: 'error' });\n                    console.log(\"INVALID WALLET ID\");\n                }\n            } else{\n                enqueueSnackbar(`Enter a valid Wallet Address!`,{ variant: 'error' });\n            }\n        }else{\n            enqueueSnackbar(`Enter the balance you would like to send`,{ variant: 'error' });\n        }\n    }\n\n    React.useEffect(() => {\n         setConvertedAmountValue(amounttosend*conversionrate);\n    }, [amounttosend]);\n    \n    return (\n        <div>\n\n            \n\n            {showTokenName ? \n                <Button\n                    variant=\"outlined\" \n                    //aria-controls={menuId}\n                    title={`Send ${name}`}\n                    onClick={handleClickOpen}\n                    size=\"small\"\n                    //onClick={isConnected ? handleProfileMenuOpen : handleOpen}\n                    >\n                    <ArrowCircleRightIcon sx={{mr:1}} /> {name}   \n                </Button>\n            :\n                <IconButton \n                    color=\"primary\"\n                    title={`Send ${name}`}\n                    size=\"small\"\n                    aria-label=\"Send\" \n                    onClick={handleClickOpen}>\n                    <ArrowCircleRightOutlinedIcon fontSize=\"small\" />\n                </IconButton>\n            }   \n        <BootstrapDialog\n            onClose={handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={open}\n            PaperProps={{ \n                style: {\n                    background: 'linear-gradient(to right, #251a3a, #000000)',\n                    boxShadow: '3',\n                    border: '1px solid rgba(255,255,255,0.15)',\n                    borderTop: '1px solid rgba(255,255,255,0.3)',\n                    borderRadius: '20px',\n                    padding:'4'\n                    },\n                }}\n        >\n            <form onSubmit={HandleSendSubmit}>\n                <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Send {name}\n                </BootstrapDialogTitle>\n                <DialogContent dividers>\n                    <FormControl>\n                        <Grid container spacing={2}>\n                            <Grid item xs={4}>\n                                \n                            <Grid container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                    {logoURI ? \n                                        <Avatar component={Paper} \n                                            elevation={4}\n                                            alt=\"Token\" \n                                            src={logoURI}\n                                            sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                                        /> : <HelpIcon />}\n                                </Grid>\n                                <Grid item sx={{ ml: 1 }}>\n                                    {name || (mint && trimAddress(mint)) || ''}\n                                </Grid>\n                            </Grid>\n                            </Grid>\n                            <Grid item xs={8}>\n                                <TextField \n                                    id=\"send-token-amount\" \n                                    fullWidth \n                                    placeholder=\"0.00\" \n                                    variant=\"standard\" \n                                    autoComplete=\"off\"\n                                    //value={(userTokenBalanceInput).toString().replace(/^0+/, '')}\n                                    value={userTokenBalanceInput}\n                                    type=\"number\"\n                                    onChange={(e) => {\n                                        // here add an additional check if valid number\n                                        // let regex = \n                                        // regex.text(e.target.value){\n                                        setTokensToSend(e.target.value)\n                                        setTokenBalanceInput(+e.target.value)\n                                        // }\n                                    }}\n                                    InputProps={{\n                                        inputProps: {\n                                            step: 0.000000001,\n                                            style: {\n                                                textAlign:'right'\n                                            }\n                                        }\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography\n                                    variant=\"caption\"\n                                >\n                                    Balance: {balance} \n                                    <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"outlined primary button group\" sx={{ml:1}}>\n                                        <Button \n                                            onClick={() => {\n                                                setTokensToSend(balance)\n                                                setTokenBalanceInput(+balance) }}\n                                        > \n                                            Max \n                                        </Button>\n                                        <Button  \n                                            onClick={() => {\n                                                setTokensToSend(+balance/2)\n                                                setTokenBalanceInput(+balance/2) }}\n                                        > \n                                            Half\n                                        </Button>\n                                    </ButtonGroup>\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}\n                                sx={{\n                                    textAlign:'right'\n                                }}\n                            >\n                                <Typography\n                                    variant=\"caption\"\n                                >\n                                    {convertedAmountValue &&\n                                    <>\n                                    ~ ${convertedAmountValue.toFixed(2)}\n                                    </>\n                                    }\n                                </Typography>\n                            </Grid>\n                            \n                            {sendtype === 0 ? \n                            (\n                                <>\n                                    <Grid item xs={12}>\n                                        <TextField \n                                            id=\"send-to-address\" \n                                            fullWidth \n                                            placeholder=\"Enter any Solana address\" \n                                            label=\"To address\" \n                                            variant=\"standard\"\n                                            autoComplete=\"off\"\n                                            onChange={(e) => {setToAddress(e.target.value)}}\n                                            InputProps={{\n                                                inputProps: {\n                                                    style: {\n                                                        textAlign:'center'\n                                                    }\n                                                }\n                                            }}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField \n                                            id=\"send-to-memo\" \n                                            fullWidth \n                                            placeholder=\"Add a memo for your transaction\" \n                                            label=\"Memo\" \n                                            variant=\"standard\"\n                                            autoComplete=\"off\"\n                                            onChange={(e) => {setMemoText(e.target.value)}}\n                                            InputProps={{\n                                                inputProps: {\n                                                    style: {\n                                                        textAlign:'left'\n                                                    }\n                                                }\n                                            }}\n                                        />\n                                    </Grid>\n                                </>\n                            ) : (\n                                <>\n                                    <Grid item xs={12}>\n                                        <TextField \n                                            id=\"send-to-address\" \n                                            fullWidth \n                                            placeholder=\"Enter any Solana address\" \n                                            label=\"To address\" \n                                            variant=\"standard\"\n                                            autoComplete=\"off\"\n                                            value={GRAPE_TREASURY}\n                                            disabled={true}\n                                            onChange={(e) => {setToAddress(e.target.value)}}\n                                            InputProps={{\n                                                inputProps: {\n                                                    style: {\n                                                        textAlign:'center'\n                                                    }\n                                                }\n                                            }}\n                                        />\n                                    </Grid>\n                                    \n                                    <Grid item xs={12}>\n                                        <FormControl fullWidth>\n                                            <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n                                            <Select\n                                                labelId=\"demo-simple-select-label\"\n                                                id=\"demo-simple-select\"\n                                                value={(memotype.toString())}\n                                                label=\"Type\"\n                                                onChange={handleSelectChange}\n                                            >\n                                                <MenuItem value={8}>Tools</MenuItem>\n                                                <MenuItem value={1}>AMA</MenuItem>\n                                                <MenuItem value={2}>Content</MenuItem>\n                                                <MenuItem value={3}>Development</MenuItem>\n                                                <MenuItem value={4}>Events</MenuItem>\n                                                <MenuItem value={5}>Moderation</MenuItem>\n                                                <MenuItem value={6}>Organization</MenuItem>\n                                                <MenuItem value={7}>Parternship</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField \n                                            id=\"send-to-ref\" \n                                            fullWidth \n                                            placeholder=\"Sender\" \n                                            label=\"Sender/Community Name\" \n                                            variant=\"standard\"\n                                            autoComplete=\"off\"\n                                            onChange={(e) => {setMemoRef(e.target.value)}}\n                                            InputProps={{\n                                                inputProps: {\n                                                    style: {\n                                                        textAlign:'left'\n                                                    }\n                                                }\n                                            }}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12}>\n                                        <TextField \n                                            id=\"send-to-notes\" \n                                            fullWidth \n                                            placeholder=\"Notes\" \n                                            label=\"Contribution Reason\" \n                                            variant=\"standard\"\n                                            autoComplete=\"off\"\n                                            onChange={(e) => {setMemoNotes(e.target.value)}}\n                                            InputProps={{\n                                                inputProps: {\n                                                    style: {\n                                                        textAlign:'left'\n                                                    }\n                                                }\n                                            }}\n                                        />\n                                    </Grid>\n                                </>\n                            )}\n\n                        </Grid>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button     \n                        fullWidth\n                        type=\"submit\"\n                        variant=\"outlined\" \n                        title=\"Send\"\n                        disabled={\n                            (userTokenBalanceInput > balance) || (userTokenBalanceInput <= 0)}\n                        sx={{\n                            margin:1\n                        }}>\n                        Send\n                    </Button>\n                </DialogActions>\n            </form>\n        </BootstrapDialog>\n        </div>\n    );\n}","import React, { FC, useCallback } from 'react';\nimport { WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction, Signer } from '@solana/web3.js';\nimport { Token, TOKEN_PROGRAM_ID, ASSOCIATED_TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { getOrca, OrcaFarmConfig, OrcaPool, OrcaPoolConfig } from \"@orca-so/sdk\";\nimport Decimal from \"decimal.js\";\nimport * as web3 from '@solana/web3.js';\n\nimport { styled } from '@mui/material/styles';\n\nimport {\n  Dialog,\n  Button,\n  ButtonGroup,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Avatar,\n  Grid,\n  Paper,\n  Skeleton,\n  InputLabel,\n  Tooltip,\n  Typography,\n  MenuItem\n} from '@mui/material';\n\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nimport { GRAPE_RPC_ENDPOINT, FREE_RPC_ENDPOINT } from '../../components/Tools/constants';\nimport { MakeLinkableAddress, ValidateAddress } from '../../components/Tools/WalletAddress'; // global key handling\nimport { useSnackbar } from 'notistack';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport HelpIcon from '@mui/icons-material/Help';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\nimport ArrowCircleRightIcon from '@mui/icons-material/ArrowCircleRight';\n\nfunction trimAddress(addr: string) {\n    if (!addr) return addr;\n    let start = addr.substring(0, 8);\n    let end = addr.substring(addr.length - 4);\n    return `${start}...${end}`;\n}\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport interface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function OrcaSwap(props: any) {\n    const [tokenSwapAvailableBalance, setPortfolioSwapTokenAvailableBalance] = React.useState(0);\n    const [portfolioPositions, setPortofolioPositions] = React.useState(props.portfolioPositions);\n    const [open, setOpen] = React.useState(false);\n    const [amounttoswap, setTokensToSwap] = React.useState(null);\n    const [userTokenBalanceInput, setTokenBalanceInput] = React.useState(0);\n    const [convertedAmountValue, setConvertedAmountValue] = React.useState(null);\n    const [tokena, setTokenA] = React.useState(null);\n    const [tokenb, setTokenB] = React.useState(null);\n    const [lpFees, setLPFees] = React.useState(null);\n    const [networkFees, setNetworkFees] = React.useState(null);\n    const [minimumOutputAmount, setMinimumOutputAmount] = React.useState(null);\n    const [priceImpact, setPriceImpact] = React.useState(null);\n    const [rate, setRate] = React.useState(null);\n    const [swapfrom, setSwapFrom] = React.useState(props.swapfrom);\n    const [swapto, setSwapTo] = React.useState(props.swapto);\n    const [tokenmap, setTokenMap] = React.useState(props.tokenmap);\n\n    const usdc_mint = 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v';\n    const sol_mint = 'So11111111111111111111111111111111111111112';\n    const grape_mint = '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA';\n    const orca_mint = 'orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE';\n\n    const [loading, setLoading] = React.useState(false);\n\n    //const mint = props.mint;\n    //const logoURI = props.logoURI;\n    //const name = props.name;\n    //const balance = props.balance;\n    ///const conversionrate = props.conversionrate;\n    const freeconnection = new Connection(FREE_RPC_ENDPOINT);\n    const { connection } = useConnection();\n    const orca = getOrca(connection);\n\n    const { publicKey, wallet, sendTransaction } = useWallet();\n    const { enqueueSnackbar } = useSnackbar();\n    const onError = useCallback(\n        (error: WalletError) => {\n            enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, { variant: 'error' });\n            console.error(error);\n        },\n        [enqueueSnackbar]\n    );\n    const handleClickOpen = () => {\n        setTokenBalanceInput(0);\n        setTokensToSwap(0);\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function getPortfolioTokenBalance(swapingfrom:string){\n        let withmint = '';\n        if (swapingfrom == 'USDC'){\n            withmint = usdc_mint;\n        } else if (swapingfrom == 'SOL'){\n            withmint = sol_mint;\n        } else if (swapingfrom == 'ORCA'){\n            withmint = orca_mint;\n        }\n\n        let balance = 0;\n        portfolioPositions.portfolio.map((token: any) => {\n            if (token.mint == withmint){\n                if (token.balance > 0)\n                    balance = token.balance;\n            }\n        });\n        setPortfolioSwapTokenAvailableBalance(balance);\n    }\n\n\n    const handleSelectChange = (event: SelectChangeEvent) => {\n        setSwapFrom(event.target.value);\n        getPortfolioTokenBalance(event.target.value);\n        setTokenBalanceInput(0);\n        setTokensToSwap(0);\n        setConvertedAmountValue(0);\n        setLPFees(null);\n        setNetworkFees(null);\n        setMinimumOutputAmount(null);\n        setPriceImpact(null);\n        setRate(null);\n    };\n\n    async function swapTokens(tokenPoolA: OrcaPool, tokenPoolB: OrcaPool, amountToSwap: number) {\n        try{\n            /*** Swap ***/\n            //const orcaSolPool = orca.getPool(OrcaPoolConfig.ORCA_SOL); // Default\n            //const tokenPool = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n            let transaction = new Transaction();\n\n            if (!tokenPoolB){\n                \n                const tokenPairA = tokenPoolA.getTokenB(); // USDC\n                const tokenAmount = new Decimal(amountToSwap); // amount in USDC\n                const quote = await tokenPoolA.getQuote(tokenPairA, tokenAmount);\n                const convertedAmount = quote.getMinOutputAmount();\n                const swapPayload = await tokenPoolA.swap(publicKey, tokenPairA, tokenAmount, convertedAmount);\n                \n                enqueueSnackbar(`Preparing to swap ${tokenAmount.toString()} ${tokenPoolA.getTokenB().name} for at least ${convertedAmount.toNumber()} ${tokenPoolA.getTokenA().name}`,{ variant: 'info' });\n                //swapPayload.transaction.partialSign(...swapPayload.signers);\n                //const signedTransaction = await sendTransaction(swapPayload.transaction, connection);\n                const signedTransaction = await sendTransaction(swapPayload.transaction, freeconnection, {signers: swapPayload.signers});\n\n                enqueueSnackbar(`Transaction ready`,{ variant: 'info' });\n                await connection.confirmTransaction(signedTransaction, 'processed');\n                enqueueSnackbar(`Swapped: ${signedTransaction}`,{ variant: 'success' });\n            } else{\n                const tokenPairA = tokenPoolA.getTokenA(); // SOL_USDC\n                const tokenAmount = new Decimal(amountToSwap); \n                const quote = await tokenPoolA.getQuote(tokenPairA, tokenAmount);\n                const convertedAmount = quote.getMinOutputAmount();\n                const swapPayload = await tokenPoolA.swap(publicKey, tokenPairA, tokenAmount, convertedAmount);\n                //swapPayload.transaction.partialSign(...swapPayload.signers);\n                \n                //enqueueSnackbar(`Step 1. Preparing to swap ${tokenAmount.toString()} ${tokenPoolA.getTokenA().name} for at least ${convertedAmount.toNumber()} ${tokenPoolA.getTokenB().name}`,{ variant: 'info' });\n                const tokenPairB = tokenPoolB.getTokenB(); // GRAPE_USDC\n                const tokenAmountB = new Decimal(convertedAmount.toNumber()); \n                const quoteB = await tokenPoolB.getQuote(tokenPairB, tokenAmountB); // consider adding slippage amount\n                const convertedAmountB = quoteB.getMinOutputAmount();\n                //enqueueSnackbar(`Step 2. Preparing to swap ${tokenAmountB.toString()} ${tokenPoolB.getTokenB().name} for at least ${convertedAmountB.toNumber()} ${tokenPoolB.getTokenA().name}`,{ variant: 'info' });\n                const swapPayloadB = await tokenPoolB.swap(publicKey, tokenPairB, tokenAmountB, convertedAmountB);\n                //swapPayloadB.transaction.partialSign(...swapPayload.signers);\n                \n                enqueueSnackbar(`Preparing to swap ${tokenAmount.toString()} ${tokenPoolA.getTokenA().name} for at least ${convertedAmountB.toNumber()} ${tokenPoolB.getTokenA().name}`,{ variant: 'info' });\n                transaction = swapPayload.transaction.add(swapPayloadB.transaction);\n                //transaction.partialSign(...swapPayload.signers);\n                //transaction.partialSign(...swapPayloadB.signers);\n                //const signedTransaction = await sendTransaction(transaction, connection);\n                const signedTransaction = await sendTransaction(transaction, freeconnection, {signers: [...swapPayload.signers, ...swapPayloadB.signers]});\n\n                enqueueSnackbar(`Transaction ready`,{ variant: 'info' });\n                await connection.confirmTransaction(signedTransaction, 'processed');\n                enqueueSnackbar(`Swapped: ${signedTransaction}`,{ variant: 'success' });\n            }\n\n            \n        } catch(e){\n            enqueueSnackbar(`${e}`,{ variant: 'error' });\n        }\n    }\n\n    async function getConvertedValue(tokenPoolA: OrcaPool, tokenPoolB: OrcaPool, amountToSwap: number) {\n        setLoading(true);\n        try{\n            if (!tokenPoolB){ // USDC_GRAPE CONVERSION\n                //const tokenPool = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n                const tokenPair = tokenPoolA.getTokenB(); // USDC \n                const tokenAmount = new Decimal(amountToSwap); // amount in USDC\n                const quote = await tokenPoolA.getQuote(tokenPair, tokenAmount);\n                const convertedAmount = quote.getMinOutputAmount();\n                \n                const lpfees = quote.getLPFees();\n                const networkfees = quote.getNetworkFees();\n                const expectedoutputamount = quote.getExpectedOutputAmount();\n                const priceimpact = quote.getPriceImpact();\n                const rate = quote.getRate();\n                \n                setTokenA(tokenPoolA.getTokenA().name);\n                setTokenB(tokenPoolA.getTokenB().name);\n                \n                setConvertedAmountValue(expectedoutputamount.toNumber());\n                setLPFees(lpfees.toNumber());\n                setNetworkFees(networkfees.toNumber());\n                setMinimumOutputAmount(convertedAmount.toNumber());\n                setPriceImpact(priceimpact.toNumber());\n                setRate(rate.toNumber());\n            } else { // SOL_USDC ... GRAPE_USDC conversion\n                const tokenPairA = tokenPoolA.getTokenA(); // SOL_USDC\n                const tokenAmount = new Decimal(amountToSwap); \n                const quote = await tokenPoolA.getQuote(tokenPairA, tokenAmount);\n                const convertedAmount = quote.getMinOutputAmount();\n                //enqueueSnackbar(`Step 1. Preparing to swap ${tokenAmount.toString()} ${tokenPoolA.getTokenA().name} for at least ${convertedAmount.toNumber()} ${tokenPoolA.getTokenB().name}`,{ variant: 'info' });\n                const tokenPairB = tokenPoolB.getTokenB(); // GRAPE_USDC\n                const tokenAmountB = new Decimal(convertedAmount.toNumber()); \n                const quoteB = await tokenPoolB.getQuote(tokenPairB, tokenAmountB); // consider adding slippage amount\n                const convertedAmountB = quoteB.getMinOutputAmount();\n                //enqueueSnackbar(`Step 2. Preparing to swap ${tokenAmountB.toString()} ${tokenPoolB.getTokenB().name} for at least ${convertedAmountB.toNumber()} ${tokenPoolB.getTokenA().name}`,{ variant: 'info' });\n                //const swapPayloadB = await tokenPoolB.swap(publicKey, tokenPairB, tokenAmountB, convertedAmountB);\n\n                setTokenA(tokenPoolA.getTokenA().name);\n                setTokenB(tokenPoolB.getTokenB().name);\n                \n                const lpfees = quote.getLPFees();\n                const networkfees = quote.getNetworkFees();\n                const expectedoutputamount = quote.getExpectedOutputAmount();\n                const priceimpact = quote.getPriceImpact();\n                const rate = quote.getRate();\n\n                const lpfeesB = quoteB.getLPFees();\n                const networkfeesB = quoteB.getNetworkFees();\n                const expectedoutputamountB = quoteB.getExpectedOutputAmount();\n                const priceimpactB = quoteB.getPriceImpact();\n                const rateB = quoteB.getRate();\n                /*\n                console.log(\"lpfees: \"+lpfees.toNumber());\n                console.log(\"networkfees: \"+networkfees.toNumber());\n                console.log(\"expectedoutputamount: \"+expectedoutputamount.toNumber());\n                console.log(\"priceimpact: \"+priceimpact);\n                console.log(\"rate: \"+rate.toNumber());\n                console.log(\"***\");\n                console.log(\"lpfeesB: \"+lpfeesB.toNumber());\n                console.log(\"networkfeesB: \"+networkfeesB.toNumber());\n                console.log(\"expectedoutputamountB: \"+expectedoutputamountB.toNumber());\n                console.log(\"priceimpactB: \"+priceimpactB);\n                console.log(\"rateB: \"+rateB.toNumber());\n                */\n                setConvertedAmountValue(expectedoutputamountB.toNumber());\n                setLPFees(lpfees.toNumber()+lpfeesB.toNumber());\n                setNetworkFees(networkfees.toNumber());\n\n                setMinimumOutputAmount(convertedAmountB.toNumber());\n                setPriceImpact(priceimpact.toNumber()+priceimpactB.toNumber());\n                \n                //1 SOL = rate.toNumber() USDC\n                //1 USDC = X grape\n                \n                setRate(rateB.toNumber()*rate.toNumber());\n            }\n        } catch(e){\n            enqueueSnackbar(`${e}`,{ variant: 'error' });\n        }\n        setLoading(false);\n    }\n    \n    function HandleSendSubmit(event: any) {\n        event.preventDefault();\n        if ((amounttoswap > 0)&&(amounttoswap < 99999999999999)){\n            if ((swapfrom == 'USDC') && (swapto == 'GRAPE')){\n                const tokenPool = orca.getPool(OrcaPoolConfig.GRAPE_USDC);    \n                swapTokens(tokenPool, null, amounttoswap);\n                handleClose();\n            } else if ((swapfrom == 'SOL') && (swapto == 'GRAPE')){\n                const tokenPoolA = orca.getPool(OrcaPoolConfig.SOL_USDC);\n                const tokenPoolB = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n                swapTokens(tokenPoolA, tokenPoolB, amounttoswap);\n                handleClose();\n            } else if ((swapfrom == 'ORCA') && (swapto == 'GRAPE')){\n                const tokenPoolA = orca.getPool(OrcaPoolConfig.ORCA_USDC);\n                const tokenPoolB = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n                swapTokens(tokenPoolA, tokenPoolB, amounttoswap);\n                handleClose();\n            }\n        }else{\n            setConvertedAmountValue(0);\n            enqueueSnackbar(`Enter the balance you would like to send`,{ variant: 'error' });\n        }\n    }\n\n    React.useEffect(() => {\n        getPortfolioTokenBalance(swapfrom);\n    }, []);\n\n    React.useEffect(() => {\n\n        // get the balance for this token\n        if ((amounttoswap > 0)&&(amounttoswap < 99999999999999)){\n            if ((swapfrom == 'USDC') && (swapto == 'GRAPE')){\n                const tokenPool = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n                getConvertedValue(tokenPool, null, amounttoswap);\n            } else if ((swapfrom == 'SOL') && (swapto == 'GRAPE')){\n                const tokenPoolA = orca.getPool(OrcaPoolConfig.SOL_USDC);\n                const tokenPoolB = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n                getConvertedValue(tokenPoolA, tokenPoolB,amounttoswap);\n            } else if ((swapfrom == 'ORCA') && (swapto == 'GRAPE')){\n                const tokenPoolA = orca.getPool(OrcaPoolConfig.ORCA_USDC);\n                const tokenPoolB = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n                getConvertedValue(tokenPoolA, tokenPoolB,amounttoswap);\n            }\n        } else{\n            setConvertedAmountValue(0);\n            setLPFees(null);\n            setNetworkFees(null);\n            setMinimumOutputAmount(null);\n            setPriceImpact(null);\n            setRate(null);\n        }\n    }, [amounttoswap]);\n    \n    return (\n        <div>\n            <Button\n                variant=\"outlined\" \n                //aria-controls={menuId}\n                title={`Swap ${swapfrom} > ${swapto}`}\n                onClick={handleClickOpen}\n                size=\"small\"\n                //onClick={isConnected ? handleProfileMenuOpen : handleOpen}\n                >\n                {swapfrom} <SwapHorizIcon sx={{mr:1,ml:1}} /> {swapto}\n            </Button>\n        <BootstrapDialog\n            onClose={handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={open}\n            PaperProps={{ \n                style: {\n                    background: 'linear-gradient(to right, #251a3a, #000000)',\n                    boxShadow: '3',\n                    border: '1px solid rgba(255,255,255,0.15)',\n                    borderTop: '1px solid rgba(255,255,255,0.3)',\n                    borderRadius: '20px',\n                    padding:'4',\n                    },\n                }}\n        >   \n            <form onSubmit={HandleSendSubmit}>\n                <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    Swap\n                </BootstrapDialogTitle>\n                <DialogContent dividers>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>     \n                                    <Grid container>\n                                        <Grid item xs={6}> \n                                            <FormControl> \n                                                <InputLabel id=\"from-label\">From</InputLabel>\n                                                <Select\n                                                    labelId=\"from-label\"\n                                                    id=\"from-select-dropdown\"\n                                                    fullWidth\n                                                    value={swapfrom}\n                                                    onChange={handleSelectChange}\n                                                    label=\"From\"\n                                                    >\n                                                    <MenuItem value=\"USDC\">USDC</MenuItem>\n                                                    <MenuItem value=\"SOL\">SOL</MenuItem>\n                                                    <MenuItem value=\"ORCA\">ORCA</MenuItem>\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                            <TextField \n                                                id=\"swap-token-amount\" \n                                                inputRef={input => input && input.focus()}\n                                                fullWidth \n                                                placeholder=\"0.00\" \n                                                autoComplete=\"off\"\n                                                variant=\"outlined\"\n                                                //value={parseFloat((userTokenBalanceInput).toString().replace(/^0|[1-9]+/, ''))}\n                                                value={userTokenBalanceInput}\n                                                type=\"number\"\n                                                onChange={(e) => {\n                                                    // here add an additional check if valid number\n                                                    // let regex = \n                                                    // regex.text(e.target.value){\n                                                    setTokensToSwap(e.target.value)\n                                                    setTokenBalanceInput(+e.target.value)\n                                                    // }\n                                                }}\n                                                InputProps={{\n                                                    inputProps: {\n                                                        step: 0.000000001,\n                                                        style: {\n                                                            textAlign:'right'\n                                                        }\n                                                    }\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid container>\n                                    <Grid item xs={2}>\n                                                    \n                                    </Grid>\n                                    <Grid item xs={10}\n                                        sx={{textAlign:'right'}}\n                                    >\n                                        <Typography\n                                            variant=\"caption\"  \n                                        >\n                                            Balance: {tokenSwapAvailableBalance} {swapfrom}\n                                            <ButtonGroup variant=\"text\" size=\"small\" aria-label=\"outlined primary button group\" sx={{ml:1}}>\n                                                <Button \n                                                    onClick={() => {\n                                                        setTokensToSwap(tokenSwapAvailableBalance);\n                                                        setTokenBalanceInput(tokenSwapAvailableBalance);\n                                                    }}\n                                                > \n                                                    Max \n                                                </Button>\n                                                <Button  \n                                                    onClick={() => {\n                                                        setTokensToSwap(+tokenSwapAvailableBalance/2);\n                                                        setTokenBalanceInput(+tokenSwapAvailableBalance/2);\n                                                    }}\n                                                > \n                                                    Half\n                                                </Button>\n                                            </ButtonGroup>\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <Grid container>\n                                    <Grid item xs={6}> \n                                        <FormControl> \n                                            <InputLabel id=\"to-label\">To</InputLabel>\n                                            <Select\n                                                labelId=\"to-label\"\n                                                id=\"to-select-dropdown\"\n                                                fullWidth\n                                                value={swapto}\n                                                label=\"To\"\n                                                disabled \n                                                defaultValue=\"Disabled\"\n                                                >\n                                                <MenuItem value=\"GRAPE\">GRAPE</MenuItem>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField \n                                            id=\"swap-result\" \n                                            fullWidth \n                                            autoComplete=\"off\"\n                                            value={convertedAmountValue}\n                                            type=\"number\"\n                                            variant=\"outlined\"\n                                            disabled \n                                            defaultValue=\"Disabled\"\n                                            InputProps={{\n                                                inputProps: {\n                                                    style: {\n                                                        textAlign:'right'\n                                                    }\n                                                }\n                                            }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <p>\n                        {!loading ?\n                            <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>\n                                {priceImpact &&\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        >\n                                        Price Impact <Tooltip title={`Swaping shifts the ratio of tokens in the pool, which will cause a change in the price per token`}><HelpOutlineIcon sx={{ fontSize:14  }}/></Tooltip>\n                                        </Grid>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        > \n                                            {(priceImpact).toFixed(2)}%\n                                        </Grid>\n                                    </Grid>\n                                } \n                                {minimumOutputAmount &&\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        >\n                                        Minimum Received <Tooltip title={`1% slippage tolerance`}><HelpOutlineIcon sx={{ fontSize:14  }}/></Tooltip>\n                                        </Grid>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        > \n                                            {minimumOutputAmount.toFixed(6)} {swapto}\n                                        </Grid>\n                                    </Grid>\n                                } \n\n                                {rate &&\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        >\n                                        Rate\n                                        </Grid>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        > \n                                            {rate.toFixed(6)} {swapto} per {swapfrom}\n                                        </Grid>\n                                    </Grid>\n                                } \n                                {lpFees &&\n                                    <Grid container spacing={1}>\n                                        <>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        >\n                                            SWAP Fees <Tooltip title={`ORCA Swap Fees (to LPs): including 0.05% split 80/20 Orca Treasury and Orca Impact Fund`}><HelpOutlineIcon sx={{ fontSize:14  }}/></Tooltip>\n                                        </Grid>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        > \n                                            {swapfrom != 'SOL' ?\n                                                <>\n                                                {(lpFees/amounttoswap*100).toFixed(2)}% = ${lpFees.toFixed(6)}\n                                                </>\n                                            :\n                                                <>{(0.30)}% + {(0.30)}% = ~${lpFees.toFixed(6)*2}</>\n                                            }\n                                        </Grid>\n                                        </>\n                                    </Grid>\n                                } \n                                {networkFees &&\n                                    <Grid container spacing={1}>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        >\n                                        Network Fees\n                                        </Grid>\n                                        <Grid item xs={6}\n                                            sx={{\n                                                textAlign:'right'\n                                            }}\n                                        > \n                                            {(networkFees/web3.LAMPORTS_PER_SOL)} SOL\n                                        </Grid>\n                                    </Grid>\n                                } \n                            </Typography>\n                        :\n                            <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12} \n                                            sx={{\n                                                textAlign:'center'\n                                            }}>\n                                        loading...\n                                    </Grid>\n                                </Grid>\n                            </Typography>\n                        }\n                        </p>\n                        \n                </DialogContent>\n                <DialogActions>\n                    <Button     \n                        fullWidth\n                        type=\"submit\"\n                        variant=\"outlined\" \n                        title=\"Swap\"\n                        disabled={userTokenBalanceInput > tokenSwapAvailableBalance}\n                        sx={{\n                            margin:1\n                        }}>\n                        Swap\n                    </Button>\n                </DialogActions>\n            </form>\n        </BootstrapDialog>\n        </div>\n    );\n}","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Typography,\n  Button,\n  Grid,\n} from '@mui/material/';\nimport OrcaSwap from '../OrcaSwap/OrcaSwap';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { makeFtxPayUrl } from '../../utils/ftx-pay';\n\ninterface SummaryProps {\n  children?: React.ReactNode;\n}\n\nexport default function Summary(props: any) {\n  //const theme = useTheme();\n  const title = props.title;\n  const subtitle = props.subtitle;\n  const showtimestamp = props.showtimestamp;\n  const tstamp = props.tstamp;\n  const swaptoken = props.swaptoken || null;\n  const swaptomint = props.swaptomint || null;\n  const tokenMap = props.tokenMap || null;\n  const portfolioPositions = props.portfolioPositions || null;\n  const { publicKey } = useWallet();\n  const token = props.token;\n\n  const [ftxurl, setFtxUrl] = React.useState(null);\n\n  const swapfrom = 'USDC';\n  const swapto = 'GRAPE';\n\n  const handleFTXPay = () => {\n    let params = `scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\n    width=600,height=675,left=100,top=100`;\n    window.open(ftxurl,'FTX Pay', params);\n  }\n\n  React.useEffect(() => {\n    if (publicKey)\n      setFtxUrl(makeFtxPayUrl(publicKey.toBase58(), 'SOL'));\n  }, [publicKey]);\n    \n\n\n  //function handleSwapDialogRequest(){\n  //  return <SwapDialog />\n  //}\n\n  return (\n    <React.Fragment>\n      <Grid container \n        spacing={2} \n        justifyContent=\"center\" \n        direction=\"column\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n        {title} <small>{subtitle}</small>\n        </Grid>\n        <Grid item>\n          <Typography component=\"p\" variant=\"h4\" justifyContent=\"center\" >\n            {props.children}\n          </Typography>\n          {showtimestamp &&\n            <Typography color=\"text.secondary\" variant=\"subtitle2\" sx={{ flex: 1 }}>\n              {tstamp}\n            </Typography>\n          } \n        </Grid>\n        \n        {swaptoken &&\n          <Grid item>\n            <OrcaSwap swapfrom={swapfrom} swapto={swapto} portfolioPositions={portfolioPositions} tokenMap={tokenMap} />\n          </Grid>\n        }\n        {token && token === 'sol' &&\n          <>\n          {ftxurl && ftxurl.length > 0 &&\n            <Grid item>\n              <Button\n                  variant=\"outlined\" \n                  title=\"FTX Pay\"\n                  onClick={handleFTXPay}\n                  size=\"small\"\n                  >\n                  FTX Pay\n              </Button>\n            </Grid>\n          }\n          </>\n        }\n      \n        <div>\n          {/*\n          <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n            View balance\n          </Link>\n          */}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n}","export const makeFtxPayUrl = (address: string, coin: string) => {\n    const url = `https://ftx.us/pay/request?coin=${coin}&address=${address}&tag=&wallet=sol&memoIsRequired=false&memo=&allowTip=false&fixedWidth=true`;\n    return url;\n};","import React, { FC, useCallback } from 'react';\n\nimport { styled } from '@mui/material/styles';\n\nimport {\n  Dialog,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Grid,\n  Skeleton,\n  Typography,\n  DialogTitle,\n  DialogContent,\n  Chip,\n  Avatar,\n} from '@mui/material';\n\nimport { PretifyCommaNumber } from '../../components/Tools/PretifyCommaNumber';\nimport { MakeLinkableAddress, ValidateAddress } from '../../components/Tools/WalletAddress'; // global key handling\n\nimport HelpIcon from '@mui/icons-material/Help';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n  '& .MuiTableCell-root': {\n    borderBottom: '1px solid rgba(255,255,255,0.05)',\n  },\n  '& .MuiTableContainer-root': {\n    backgroundColor: 'none',  \n  },\n}));\n\nfunction trimAddress(addr: string) {\n    if (!addr) return addr;\n    let start = addr.substring(0, 8);\n    let end = addr.substring(addr.length - 4);\n    return `${start}...${end}`;\n}\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport interface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function TopHolders(props: any) {\n    const [open, setOpen] = React.useState(false);\n    const [largestAccounts, setLargestAccounts] = React.useState(null);\n    const [tokenSupply, setTokenSupply] = React.useState(null);\n    const mint = props.mint;\n    const logoURI = props.logoURI;\n    const name = props.name;\n    \n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const GetLargestTokenAccounts = async () => {\n      const body = {\n        method: \"getTokenLargestAccounts\",\n        jsonrpc: \"2.0\",\n        params: [\n          // Get the public key of the account you want the balance for.\n          mint,\n          // add <object> (optional) Commitment\n        ],\n        \"id\":1,\n      };\n  \n      const response = await fetch(\"https://free.rpcpool.com\", {\n      //const response = await fetch(\"https://solana-api.projectserum.com/\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n  \n      const json = await response.json();\n      const resultValues = json.result.value\n      return resultValues;\n    };\n\n    const GetTokenSupply = async () => {\n      const body = {\n        method: \"getTokenSupply\",\n        jsonrpc: \"2.0\",\n        params: [\n          // Get the public key of the account you want the balance for.\n          mint,\n          // add <object> (optional) Commitment\n        ],\n        \"id\":2,\n      };\n  \n      const response = await fetch(\"https://free.rpcpool.com\", {\n      //const response = await fetch(\"https://solana-api.projectserum.com/\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n  \n      const json = await response.json();\n      const resultValues = json.result.value\n      return resultValues;\n    };\n    \n    const fetchTokenAccountData = async () => {\n      let [flargestTokenAccounts] = await Promise.all([GetLargestTokenAccounts()]);\n      setLargestAccounts(flargestTokenAccounts);\n    }\n    const fetchTokenSupply = async () => {\n      let [ftokenSupply] = await Promise.all([GetTokenSupply()]);\n      setTokenSupply(ftokenSupply);\n    }\n\n    React.useEffect(() => { \n      if (!largestAccounts){\n        fetchTokenAccountData();\n      }\n      if (!tokenSupply){\n        fetchTokenSupply();\n      }\n    }, [mint]);\n    \n    return (\n      <React.Fragment>\n            <Button\n                variant=\"outlined\" \n                //aria-controls={menuId}\n                title={`Top 20 ${name} Holders`}\n                onClick={handleClickOpen}\n                size=\"small\"\n                >\n                <AccountBalanceIcon sx={{mr:1}} /> {name} Holders\n            </Button>\n            <BootstrapDialog\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}\n                PaperProps={{ \n                    style: {\n                        background: 'linear-gradient(to right, #251a3a, #000000)',\n                        boxShadow: '3',\n                        border: '1px solid rgba(255,255,255,0.15)',\n                        borderTop: '1px solid rgba(255,255,255,0.3)',\n                        borderRadius: '20px',\n                        padding:'4'\n                        },\n                    }}\n            >\n              <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                Top 20 {name} Holders\n              </BootstrapDialogTitle>\n              <DialogContent dividers>\n\n              {tokenSupply && \n                <>\n                {+tokenSupply.amount > 0 &&\n                  <Grid container spacing={3}                  \n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    >\n                    <Grid item>\n                        <Typography\n                          variant=\"h6\"\n                          textAlign=\"center\"\n                        >\n                        <PretifyCommaNumber number={parseFloat(tokenSupply.uiAmountString).toFixed(2)} />\n                        <br/>\n                        <Chip \n                          avatar={<Avatar alt={name} src={logoURI} />}\n                          color=\"primary\"\n                          size=\"small\"\n                          label=\"Current Total Supply\" \n                          variant=\"outlined\" />\n                        </Typography>\n                    </Grid>\n                  </Grid>\n                }\n                </> \n              }\n\n                <TableContainer>\n                  <StyledTable sx={{ minWidth: 500 }} size=\"small\" aria-label=\"Portfolio Table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell></TableCell>\n                        <TableCell align=\"center\">Address</TableCell>\n                        <TableCell align=\"right\">Holdings</TableCell>\n                        {tokenSupply && \n                          <>\n                            {+tokenSupply.amount > 0 &&\n                              <TableCell align=\"right\"></TableCell>\n                            }\n                          </>\n                        }\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {largestAccounts ? largestAccounts.map((item: any, index: number) => (\n                        <TableRow\n                          key={item.address}\n                          sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                          <TableCell component=\"th\" scope=\"row\">{index+1}</TableCell>\n                          <TableCell component=\"th\" scope=\"row\">  \n                            <MakeLinkableAddress addr={item.address} trim={4} hasextlink={true} hascopy={true} fontsize={12} />\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <PretifyCommaNumber number={parseFloat(item.uiAmountString).toFixed(2)} />\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {tokenSupply && \n                              <>\n                                {+tokenSupply.amount > 0 &&\n                                <>\n                                {(parseFloat(item.uiAmountString)/parseFloat(tokenSupply.uiAmountString)*100).toFixed(2)}\n                                %\n                                </>\n                                }\n                              </>\n                            }\n                          </TableCell>\n                        </TableRow>\n                        ))\n                        :\n                        <React.Fragment>\n                            <TableRow>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                            </TableRow>\n                        </React.Fragment>\n                      }\n                    </TableBody>\n                  </StyledTable>\n                </TableContainer>\n              </DialogContent>\n            </BootstrapDialog>\n      </React.Fragment>\n    );\n}","import Session from '../../models/Session';\n\nexport const NakedWallet = (props: any, session: any) => {\n    //console.log(\"Wallet NProp: \"+props);\n    \n    try {\n        const walletid = props;\n        \n        session.userId = walletid;\n        session.publicKey = walletid;\n        session.isConnected = true;\n        session.isWallet = false;\n        //return setSession(session);\n        return new Session(session);\n    } catch (e) {\n        console.warn(e);\n    }\n}\n\n\nexport default NakedWallet;","import { createContext, useContext } from 'react';\n\nexport interface WalletDialogContextState {\n    open: boolean;\n    setOpen: (open: boolean) => void;\n}\n\nexport const WalletDialogContext = createContext<WalletDialogContextState>({} as WalletDialogContextState);\n\nexport function useWalletDialog(): WalletDialogContextState {\n    return useContext(WalletDialogContext);\n}","import{\n    makeStyles,\n} from '@mui/styles';\nimport { Wallet } from '@solana/wallet-adapter-wallets';\nimport React, { DetailedHTMLProps, FC, ImgHTMLAttributes } from 'react';\n\nconst useStyles = makeStyles({\n    root: {\n        width: \"24px\",\n        height: \"24px\",\n    },\n});\n\nexport interface WalletIconProps extends DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n    wallet: Wallet | null;\n}\n\nexport const WalletIcon: FC<WalletIconProps> = ({ wallet, ...props }) => {\n    const styles = useStyles();\n\n    return wallet && <img src={wallet.icon} alt={`${wallet.name} icon`} className={styles.root} {...props} />;\n};","import { \n    Button, \n    ButtonProps } \nfrom '@mui/material';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { FC, MouseEventHandler, useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon';\nimport { useSession } from \"../../contexts/session\";\n\nexport const WalletConnectButton: FC<ButtonProps> = ({\n    color = 'primary',\n    variant = 'contained',\n    children,\n    disabled,\n    onClick,\n    ...props\n}) => {\n    const { wallet, connect, connecting, connected } = useWallet();\n    \n    const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\n        (event) => {\n            if (onClick) onClick(event);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            if (!event.defaultPrevented)\n                connect().catch(() => {\n                    // Silently catch because any errors are caught by the context `onError` handler\n                });\n        },\n        [onClick, connect]\n    );\n    \n    const content = useMemo(() => {\n        if (children) return children;\n        if (connecting) \n            return 'Connecting ...';\n        if (connected) \n            return 'Connected';\n        if (wallet)\n            return 'Connect';\n        return 'Connect Wallet';\n    }, [children, connecting, connected, wallet]);\n\n    return (\n        <Button\n            color={color}\n            variant={variant}\n            onClick={handleClick}\n            disabled={disabled || !wallet || connecting || connected}\n            startIcon={<WalletIcon wallet={wallet} />}\n            {...props}\n        >\n            {content}\n        </Button>\n    );\n};","import { \n    Paper,\n    Button, \n    ListItem, \n    ListItemAvatar,\n    ListItemIcon,\n    ListItemText,\n    Avatar,\n    ListItemProps } \nfrom '@mui/material';\nimport { Wallet } from '@solana/wallet-adapter-wallets';\nimport React, { FC, MouseEventHandler } from 'react';\nimport { WalletIcon } from './WalletIcon';\n\ninterface WalletListItemProps extends Omit<ListItemProps, 'onClick' | 'button'> {\n    onClick: MouseEventHandler<HTMLButtonElement>;\n    wallet: Wallet;\n}\n\nexport const WalletListItem: FC<WalletListItemProps> = ({ onClick, wallet, ...props }) => {\n    return (\n        <ListItem {...props}>\n            <Button onClick={onClick} endIcon={<WalletIcon wallet={wallet} />}>\n                {wallet.name}\n            </Button>\n        </ListItem>\n    );\n};","import {\n    Button,\n    Collapse,\n    Dialog,\n    DialogContent,\n    DialogProps,\n    DialogTitle,\n    IconButton,\n    List,\n    ListItem\n} from '@mui/material';\n\nimport{\n    styled, createTheme\n} from '@mui/material/styles';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletName } from '@solana/wallet-adapter-wallets';\nimport React, { FC, ReactElement, SyntheticEvent, useCallback, useMemo, useState } from 'react';\nimport { useWalletDialog } from './useWalletDialog';\nimport { WalletListItem } from './WalletListItem';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n    '& .MuiDialog-paper': {\n        width: theme.spacing(40),\n        margin: 0,\n    },\n    '& .MuiDialogTitle-root': {\n        //backgroundColor: theme.palette.primary.main,\n        //backgroundColor: '#000000',  /* fallback for old browsers */\n        //backgroundColor: 'rgb(0 0 0 / 50%)',\n        background: 'linear-gradient(to right, #251a3a, #000000)',\n        '& .MuiTypography-root': {\n            display: 'flex',\n            justifyContent: 'space-between',\n            lineHeight: theme.spacing(5) + 'px',\n        },\n        '& .MuiIconButton-root': {\n            flexShrink: 1,\n            padding: theme.spacing(),\n            marginRight: theme.spacing(-1),\n            color: theme.palette.grey[500],\n        },\n    },\n    '& .MuiDialogContent-root': {\n        padding: 0,\n        '& .MuiCollapse-root': {\n            '& .MuiList-root': {\n                background: 'rgba(0,0,0,0.5)',\n            },\n        },\n        '& .MuiList-root': {\n            background: 'rgba(0,0,0,0.5)',\n            padding: 0,\n        },\n        '& .MuiListItem-root': {\n            boxShadow: 'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)',\n            '&:hover': {\n                boxShadow:\n                    'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)' + ', 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.05)',\n            },\n            padding: 0,\n            '& .MuiButton-endIcon': {\n                margin: 0,\n            },\n            '& .MuiButton-root': {\n                flexGrow: 1,\n                justifyContent: 'space-between',\n                padding: theme.spacing(1, 3),\n                borderRadius: undefined,\n                fontSize: '1rem',\n                fontWeight: 400,\n            },\n            '& .MuiSvgIcon-root': {\n                color: theme.palette.grey[500],\n            },\n        },\n    },\n}));\n\nexport interface DialogTitleProps {\n    id: string;\n    children?: React.ReactNode;\n    onClose: () => void;\n}\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport interface WalletDialogProps extends Omit<DialogProps, 'title' | 'open'> {\n    featuredWallets?: number;\n    title?: ReactElement;\n}\n\nexport const WalletDialog: FC<WalletDialogProps> = ({\n    title = 'Select your wallet',\n    featuredWallets = 3,\n    onClose,\n    ...props\n}) => {\n    const { wallets, select } = useWallet();\n    const { open, setOpen } = useWalletDialog();\n    const [expanded, setExpanded] = useState(false);\n\n    const [featured, more] = useMemo(\n        () => [wallets.slice(0, featuredWallets), wallets.slice(featuredWallets)],\n        [wallets, featuredWallets]\n    );\n\n    const handleClose = useCallback(\n        (event: SyntheticEvent, reason?: 'backdropClick' | 'escapeKeyDown') => {\n            if (onClose) onClose(event, reason!);\n            if (!event.defaultPrevented) setOpen(false);\n        },\n        [setOpen, onClose]\n    );\n\n    const handleWalletClick = useCallback(\n        (event: SyntheticEvent, walletName: WalletName) => {\n            select(walletName);\n            handleClose(event);\n        },\n        [select, handleClose]\n    );\n\n    const handleExpandClick = useCallback(() => setExpanded(!expanded), [setExpanded, expanded]);\n    \n    return (\n        <BootstrapDialog\n            open={open} \n            onClose={handleClose} \n            //fullWidth={true}\n            maxWidth={\"xs\"}\n            PaperProps={{ \n            style: {\n                background: 'linear-gradient(to right, #251a3a, #000000)',\n                boxShadow: '3',\n                border: '1px solid rgba(255,255,255,0.15)',\n                borderTop: '1px solid rgba(255,255,255,0.3)',\n                borderRadius: '20px',\n                padding:'4'\n                },\n            }}\n            {...props}>\n            <DialogTitle>\n                {title}\n                <IconButton \n                    sx={{\n                        position: 'absolute',\n                        right: 8,\n                        top: 8,\n                    }} \n                    onClick={handleClose}>\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent>\n                <List>\n                    {featured.map((wallet) => (\n                        <WalletListItem\n                            key={wallet.name}\n                            onClick={(event) => handleWalletClick(event, wallet.name)}\n                            wallet={wallet}\n                        />\n                    ))}\n                    {more.length ? (\n                        <>\n                            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                                <List>\n                                    {more.map((wallet) => (\n                                        <WalletListItem\n                                            key={wallet.name}\n                                            onClick={(event) => handleWalletClick(event, wallet.name)}\n                                            wallet={wallet}\n                                        />\n                                    ))}\n                                </List>\n                            </Collapse>\n                            <ListItem>\n                                <Button onClick={handleExpandClick}>\n                                    {expanded ? 'Less' : 'More'} options\n                                    {expanded ? <ExpandLess /> : <ExpandMore />}\n                                </Button>\n                            </ListItem>\n                        </>\n                    ) : null}\n                </List>\n            </DialogContent>\n        </BootstrapDialog>\n    );\n};","import { \n    Button, \n    ButtonProps } \nfrom '@mui/material';\nimport React, { FC, MouseEventHandler, useCallback } from 'react';\nimport { useWalletDialog } from './useWalletDialog';\n\nexport const WalletDialogButton: FC<ButtonProps> = ({\n    children = 'Connect',\n    color = 'primary',\n    variant = 'contained',\n    onClick,\n    ...props\n}) => {\n    const { setOpen } = useWalletDialog();\n\n    const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\n        (event) => {\n            if (onClick) onClick(event);\n            if (!event.defaultPrevented) setOpen(true);\n        },\n        [onClick, setOpen]\n    );\n\n    return (\n        <Button color={color} variant={variant} onClick={handleClick} {...props}>\n            {children}\n        </Button>\n    );\n};","import React, { FC, useState } from 'react';\nimport { WalletDialogContext } from './useWalletDialog';\nimport { WalletDialog, WalletDialogProps } from './WalletDialog';\n\nexport const WalletDialogProvider: FC<WalletDialogProps> = ({ children, ...props }) => {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <WalletDialogContext.Provider\n            value={{\n                open,\n                setOpen,\n            }}\n        >\n            {children}\n            <WalletDialog {...props} />\n        </WalletDialogContext.Provider>\n    );\n};","import {\n    Button,\n    ButtonProps,\n    Collapse,\n    Fade,\n    ListItemIcon,\n    Menu,\n    MenuItem,\n} from '@mui/material';\n\nimport{\n    makeStyles, styled\n} from '@mui/material/styles';\nimport CopyIcon from '@mui/icons-material/FileCopy';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\n\nimport { WalletAdapterNetwork, WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { Connection, Keypair, SystemProgram, Transaction, clusterApiUrl } from '@solana/web3.js';\n\nimport bs58 from 'bs58';\nimport { sign } from 'tweetnacl';\n\nimport { useSnackbar } from 'notistack';\nimport { useSession } from \"../../contexts/session\";\nimport DisconnectIcon from '@mui/icons-material/LinkOff';\nimport SwitchIcon from '@mui/icons-material/SwapHoriz';\nimport AccountBalanceWalletOutlinedIcon from '@mui/icons-material/AccountBalanceWalletOutlined';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { FC, useMemo, useCallback, useState } from 'react';\nimport { useWalletDialog } from './useWalletDialog';\nimport { WalletConnectButton } from './WalletConnectButton';\nimport { WalletDialogButton } from './WalletDialogButton';\n\nimport { WalletIcon } from './WalletIcon';\nimport { isCompositeComponent } from 'react-dom/test-utils';\n\nconst StyledMenu = styled(Menu)(({ theme }) => ({\n    '& .MuiList-root': {\n        padding: 0,\n    },\n    '& .MuiMenuItem-root': {\n        padding: theme.spacing(1, 2),\n        boxShadow: 'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)',\n        '&:not(.MuiButtonBase-root)': {\n            padding: 0,\n            '& .MuiButton-root': {\n                borderRadius: 0,\n            },\n        },\n        '&:hover': {\n            boxShadow:\n                'inset 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.1)' + ', 0 1px 0 0 ' + 'rgba(255, 255, 255, 0.05)',\n        },\n    },\n    '& .MuiListItemIcon-root': {\n        marginRight: theme.spacing(),\n        minWidth: 'unset',\n        '& .MuiSvgIcon-root': {\n            width: 20,\n            height: 20,\n        },\n    },\n}));\n\nfunction trimAddress(addr: string) {\n    if (!addr) return null;\n    if (addr.length > 10){\n            let start = addr.substring(0, 4);\n            let end = addr.substring(addr.length - 4);\n            return `${start}...${end}`;\n    }\n    return addr;\n  }\n\n  function showWalletAddress(addr: string){\n    return (\n      <React.Fragment>\n        <AccountBalanceWalletOutlinedIcon fontSize=\"small\" sx={{ mr:1 }}  /> {trimAddress(addr)}\n      </React.Fragment>\n    )\n  }\n\nexport const WalletMultiButton: FC<ButtonProps> = ({\n    color = 'primary',\n    variant = 'outlined',\n    children,\n    ...props\n}) => {\n    const { publicKey, wallet, disconnect } = useWallet();\n    const { session, setSession } = useSession();\n    const { setOpen } = useWalletDialog();\n    const [anchor, setAnchor] = useState<HTMLElement>();\n    //const message  = '$GRAPE';\n\n    let base58 = useMemo(() => publicKey?.toBase58(), [publicKey]) || null;\n    const content = useMemo(() => {\n        if (children) return children;\n        if (!wallet || !base58) return null;\n        return base58.slice(0, 4) + '..' + base58.slice(-4);\n    }, [children, wallet, base58]);\n\n    const { enqueueSnackbar } = useSnackbar();\n    \n    //console.log(JSON.stringify(wallet));\n    //console.log(JSON.stringify(session));\n    \n    async function disconnectSession(redirect:boolean) {\n        setSession(null);\n        if (redirect)\n            window.location.href = \"/\";\n    }\n\n    if (!wallet) {\n        //if ((session.isConnected)&&(!publicKey))\n        //    disconnectSession(false);\n\n        if (session?.publicKey){\n            //disconnectSession(false);\n            //console.log(\"1. DISCONNECT!\")\n        }\n\n        return (\n            <WalletDialogButton color={color} variant={variant} {...props}>\n                {children}\n            </WalletDialogButton>\n        );\n        \n    }\n    if (!base58) {\n        if (session?.publicKey){\n            console.log(\"Session: \"+session.publicKey);\n            if (!publicKey){\n                // check if wallet?\n                console.log(\"No publicKey, checking wallet availability\");\n                if (!wallet){\n                    console.log(\"Clearing Session...\");\n                    disconnectSession(false);\n                    console.log(\"Session cleared.\");\n                }\n            }\n        }\n\n        return (\n            <WalletConnectButton color={color} variant={variant} {...props}>\n                {children}\n            </WalletConnectButton>\n        );\n    }\n    \n    return (\n        <>\n            <Button\n                color={color}\n                variant={variant}\n                startIcon={<WalletIcon wallet={wallet} />}\n                onClick={(event) => setAnchor(event.currentTarget)}\n                aria-controls=\"wallet-menu\"\n                aria-haspopup=\"true\"\n                //className={styles.root}\n                {...props}\n            >\n                {showWalletAddress(session.publicKey)}\n            </Button>\n            <StyledMenu\n                id=\"wallet-menu\"\n                anchorEl={anchor}\n                open={!!anchor}\n                onClose={() => setAnchor(undefined)}\n                marginThreshold={0}\n                TransitionComponent={Fade}\n                transitionDuration={250}\n                keepMounted\n            >\n                {/*\n                <MenuItem onClick={() => setAnchor(undefined)}>\n                    \n                    <Button\n                        color={color}\n                        variant={variant}\n                        //startIcon={<WalletIcon wallet={wallet} />}\n                        className={styles.root}\n                        onClick={(event) => {\n                            setAnchor(undefined);\n                            enqueueSnackbar({'Success': 'copied'}, { variant: 'success' });\n                            enqueueSnackbar('Copied address', { variant: 'success'} );\n                        }}\n                        fullWidth\n                        {...props}\n                    >\n                        {session.publicKey}\n                    </Button>\n                </MenuItem>\n                */}\n                <Collapse in={!!anchor}>\n                    <MenuItem\n                        onClick={async () => {\n                            setAnchor(undefined);\n                            await navigator.clipboard.writeText(base58);\n                            enqueueSnackbar(`Copied...`,{ variant: 'success' });\n                        }}\n                    >\n                        <ListItemIcon>\n                            <CopyIcon />\n                        </ListItemIcon>\n                        Copy address\n                    </MenuItem>\n                    <MenuItem\n                        component=\"a\"\n                        href={`https://explorer.solana.com/address/${session.publicKey}`}\n                        target=\"_blank\"\n                    >\n                        <ListItemIcon>\n                            <OpenInNewIcon />\n                        </ListItemIcon>\n                        Explore\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() => {\n                            setAnchor(undefined);\n                            disconnect()\n                                .catch(() => {\n                                    // Silently catch because any errors are caught by the context `onError` handler\n                                })\n                                .then(() => {\n                                    disconnectSession(false);\n                                });\n                            setOpen(true);\n                        }}\n                    >\n                        <ListItemIcon>\n                            <SwitchIcon />\n                        </ListItemIcon>\n                        Connect a different wallet\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() => {\n                            setAnchor(undefined);\n                            // eslint-disable-next-line @typescript-eslint/no-empty-function\n                            disconnect()\n                                .catch(() => {\n                                    // Silently catch because any errors are caught by the context `onError` handler\n                                })\n                                .then(() => {\n                                    disconnectSession(true);\n                                });\n                            //setOpen(true);\n                        }}\n                    >\n                        <ListItemIcon>\n                            <DisconnectIcon />\n                        </ListItemIcon>\n                        Disconnect\n                    </MenuItem>\n                </Collapse>\n            </StyledMenu>\n        </>\n\n    );\n    \n    /*\n    return (\n        <>\n            <Button\n                color={color}\n                variant={variant}\n                startIcon={<WalletIcon wallet={wallet} />}\n                onClick={(event) => setAnchor(event.currentTarget)}\n                aria-controls=\"wallet-menu\"\n                aria-haspopup=\"true\"\n                className={styles.root}\n                {...props}\n            >\n                {content}\n            </Button>\n            <Menu\n                id=\"wallet-menu\"\n                anchorEl={anchor}\n                open={!!anchor}\n                onClose={() => setAnchor(undefined)}\n                className={styles.menu}\n                marginThreshold={0}\n                TransitionComponent={Fade}\n                transitionDuration={250}\n                keepMounted\n            >\n                <MenuItem onClick={() => setAnchor(undefined)}>\n                    <Button\n                        color={color}\n                        variant={variant}\n                        startIcon={<WalletIcon wallet={wallet} />}\n                        className={styles.root}\n                        onClick={(event) => {\n                            setAnchor(undefined);\n                            enqueueSnackbar({'Success': 'copied'}, { variant: 'success' });\n                            enqueueSnackbar('Copied address', { variant: 'success'} );\n                        }}\n                        fullWidth\n                        {...props}\n                    >\n                        {wallet.name}\n                    </Button>\n                </MenuItem>\n                <Collapse in={!!anchor}>\n                    <MenuItem\n                        onClick={async () => {\n                            setAnchor(undefined);\n                            await navigator.clipboard.writeText(base58);\n\n                        }}\n                    >\n                        <ListItemIcon>\n                            <CopyIcon />\n                        </ListItemIcon>\n                        Copy address\n                    </MenuItem>\n                    <MenuItem\n                        component=\"a\"\n                        href={`https://explorer.solana.com/address/${session.publicKey}`}\n                        target=\"_blank\"\n                    >\n                        <ListItemIcon>\n                            <OpenInNewIcon />\n                        </ListItemIcon>\n                        Explore\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() => {\n                            setAnchor(undefined);\n                            setOpen(true);\n                        }}\n                    >\n                        <ListItemIcon>\n                            <SwitchIcon />\n                        </ListItemIcon>\n                        Connect a different wallet\n                    </MenuItem>\n                    <MenuItem\n                        onClick={() => {\n                            setAnchor(undefined);\n                            async function disconnect() {\n                                //setSession(null);\n                                //window.location.href = \"/\"\n                            }    \n                            // eslint-disable-next-line @typescript-eslint/no-empty-function\n                            disconnect().catch(() => {\n                                // Silently catch because any errors are caught by the context `onError` handler\n                            });\n                        }}\n                    >\n                        <ListItemIcon>\n                            <DisconnectIcon />\n                        </ListItemIcon>\n                        Disconnect\n                    </MenuItem>\n                </Collapse>\n            </Menu>\n        </>\n    );\n    */\n};","import React, { FC, useCallback, useMemo } from 'react';\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Typography,\n\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  List,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemText,\n  ListItem,\n  Divider,\n  TextField,\n  Grid,\n  Backdrop,\n  CircularProgress\n} from '@mui/material';\n\nimport { useSnackbar } from 'notistack';\nimport CloseIcon from '@mui/icons-material/Close';\nimport DisconnectIcon from '@mui/icons-material/LinkOff';\nimport AccountBalanceWalletOutlinedIcon from '@mui/icons-material/AccountBalanceWalletOutlined';\n\nimport bs58 from 'bs58';\nimport { sign } from 'tweetnacl';\n\nimport { NakedWallet } from '../../utils/wallet/NakedWallet';\nimport { useSession } from \"../../contexts/session\";\nimport Session from '../../models/Session';\nimport { PublicKey, SystemProgram, Transaction, TransactionInstruction, Signer } from '@solana/web3.js';\nimport { useConnection, ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogProvider, WalletDisconnectButton, WalletMultiButton } from '../WalletAdapterMui';\n//import { WalletDialogProvider, WalletDisconnectButton, WalletMultiButton } from '@solana/wallet-adapter-material-ui';\nimport { WalletAdapterNetwork, WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { propsToClassKey } from '@mui/styles';\n\nimport { confirmDialog } from '../ConfirmDialog/ConfirmDialog';\nimport { GRAPE_APP_API_URL } from '../Tools/constants';\n\n// Default styles\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport interface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nconst WalletNavigation: FC = (props:any) => {\n  //const { connection } = useConnection();\n  const { userId, discordId, token, login } = props;\n  const { session, setSession } = useSession();\n  const { connection } = useConnection();\n  const { publicKey, wallet, disconnect, sendTransaction, signMessage } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n  const message  = '$GRAPE';\n  //session: Object;\n  \n  function sleep(milliseconds:number) {\n    const date = Date.now();\n    let currentDate = null;\n    do {\n      currentDate = Date.now();\n    } while (currentDate - date < milliseconds);\n  }\n\n  async function disconnectSession(redirect:boolean) {\n    await disconnect().catch(() => { /* catch any errors */ });\n    setSession(null);\n    if (redirect)\n        window.location.href = \"/\";\n  }\n\n  function createNakedSession(cnsPublicKey: string){\n    setSession(NakedWallet(cnsPublicKey, session));\n  }\n  \n  async function confirmWalletWithTransaction() { \n    const amountToSend = 0.00001;\n    const decimals = 9;\n    const adjustedAmountToSend = amountToSend * Math.pow(10, decimals);\n    const transaction = new Transaction()\n    .add(\n        SystemProgram.transfer({\n            fromPubkey: publicKey,\n            toPubkey: publicKey,\n            lamports: adjustedAmountToSend,\n        })\n    );\n    \n    //enqueueSnackbar(`Preparing to send ${amountToSend} ${name} to ${toaddress}`,{ variant: 'info' });\n    console.log(\"Preparing transaction to self: \" + amountToSend);\n    enqueueSnackbar(`Preparing transaction`,{ variant: 'info' });\n    const sm_signature = await sendTransaction(transaction, connection);\n    //enqueueSnackbar(`Transaction ready`,{ variant: 'info' });\n    enqueueSnackbar(`Please wait while the transaction completes, this may take a few seconds`,{ variant: 'info', autoHideDuration: 5000 });\n    console.log(\"Confirming Transaction: \" + JSON.stringify(sm_signature));\n    sleep(5000);\n    //enqueueSnackbar(`Confirming transaction`,{ variant: 'info' });\n    await connection.confirmTransaction(sm_signature, 'processed');\n    //if (!transaction.verifySignatures()){\n    if (!sm_signature){\n      console.log(\"Signature Verification = false\");\n      disconnectSession(true);\n    }\n    enqueueSnackbar(`Transaction complete`,{ variant: 'success' });\n    \n    return sm_signature;\n  }\n\n  //if (!publicKey) throw new WalletNotConnectedError();\n  const VerifyWallet = useCallback(async (sent_publicKey) => {\n    console.log(\"CD: Running wallet verification...\");\n    try {\n        let naked_session = false;\n        // `publicKey` will be null if the wallet isn't connected\n        \n        //console.log('pubkey: '+publicKey + ' vs ' + sent_publicKey);\n        if (!publicKey){\n          //console.log('CD: WALLET NOT CONNECTED...');\n          //disconnect().catch(() => { /* catch any errors */ });\n          //throw new Error('Wallet not connected!');\n        }\n        // `signMessage` will be undefined if the wallet doesn't support it\n        //console.log(\"Checking signing support \"+wallet?.name + \" wallet\");\n        \n        // ask to sign message only if no session\n        \n        if (!session.isConnected){\n          //console.log(\"No session\");\n          if (!signMessage){ \n            if (wallet?.adapter.name){\n              console.log(wallet?.adapter.name + ' wallet does not support message signing!');\n\n              if (wallet?.adapter.name == \"Solflare\"){\n              //  console.log(\"CD: SOLFLARE WALLET CONNECTED!\");\n              }\n\n              if (wallet?.adapter.name){ // only if a wallet has a name but cannot sign (naked wallet)\n                alert(\"WARNING: Message signing is not supported with \"+wallet?.adapter.name+\" for Grape Access!\");\n                // allow wallet to board but only as a naked wallet (since signing is required)\n                createNakedSession(publicKey.toBase58());\n                return null;\n                //publicKey = null;\n              }\n            } else{\n              //alert(publicKey);\n              if ((publicKey)&&(login)){ // no wallet name but we have the publicKey:\n                createNakedSession(publicKey.toBase58());\n                naked_session = true;\n                return null;\n              }\n            }\n            //if (wallet.name != \"Ledger\"){\n            disconnectSession(false);\n            //alert(\"Wallet does not support message signing!\");\n            throw new Error('Wallet does not support message signing!');\n          }\n          \n          // Encode anything as bytes\n          const smessage = new TextEncoder().encode(message);\n          // Sign the bytes using the wallet\n          console.log(wallet?.adapter.name + \" attempting to sign message\");\n\n          let fromTransaction = false;\n          let sm_signature = await signMessage(smessage)\n          .catch((error: any)=>{\n            \n            if (publicKey){\n             \n            } else{\n                return null;\n            }\n\n          });\n\n          if (!sm_signature){\n            if (window.confirm(\"Grape signs a message to verify your wallet\\n\\nYour current wallet could not be verified, some wallets including Ledger do not support message signing, if you would like to send a transaction to your wallet to confirm your wallet please press OK\")){\n              fromTransaction = true;\n              sm_signature = await confirmWalletWithTransaction();\n              sm_signature = new TextEncoder().encode(sm_signature); // convert to \"utf-8\"\n            }\n            \n          }\n          \n          //console.log(\"sm_signature: \"+sm_signature);\n          if ((!sm_signature)&&(publicKey)){ // signature is null but there is a publickey\n            // 1. set naked session (above)\n            // 2. prompt user that they will need to make a transaction to themselves in order to have access to add/remove servers\n            createNakedSession(publicKey.toString());\n            return null;\n          } else if (!sm_signature){ // invalid signature\n            disconnectSession(false);\n          }\n          \n          //console.log(\"smessage: \"+smessage);\n          //console.log(\"Signature: \"+sm_signature);\n          //console.log(\"pKey: \"+publicKey.toBytes());\n\n          // Verify that the bytes were signed using the private key that matches the known public key\n          if (wallet?.adapter.name != \"Slope\"){\n            if (!fromTransaction){ // verify signature from signed message\n              if (!sign.detached.verify(smessage, sm_signature, publicKey.toBytes())){ \n                disconnectSession(false);\n                throw new Error('CD: Invalid signature!');\n              }\n            }\n          }\n\n          const bs58_address = bs58.decode(publicKey.toString());\n          const address = {\"type\":\"Buffer\",\"data\":Object.values(bs58_address)}\n          const signature = {\"type\":\"Buffer\",\"data\":Object.values(sm_signature)}\n          \n          //const address = bs58.decode(bs58_address.toString());\n          //const signature2 = bs58.decode(sm_signature); \n\n          //console.log(\"Signature 1: \"+signature);\n          //console.log(\"Signature 2: \"+signature2);\n\n          //const address = bs58.decode(signed.publicKey);\n          //const decoded_signature = Buffer.from(signature, 'utf8');\n          //const decoded_signature = Buffer.from(signature).toString('utf8');\n          \n          console.log(JSON.stringify({\n              userId: userId,\n              token: message,\n              address: bs58_address,\n              publicKey: publicKey.toString(),\n              signature: signature,\n              fromTransaction: fromTransaction\n          }));\n\n          console.log(wallet?.adapter.name + \" connecting to Grape Dashboard...\");\n          \n          if (login){ // login\n            console.log(\"LOGIN GRAPE\");\n            if (GRAPE_APP_API_URL){\n              const response = await fetch(`${GRAPE_APP_API_URL}/login`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    token: message,\n                    address: bs58_address,\n                    publicKey: publicKey.toString(),\n                    signature: signature,\n                    fromTransaction: fromTransaction\n                })\n              }).catch( err => {\n                console.log(\"ERROR: \"+err);\n                return null;\n              });\n              const session = await response.json();\n            \n              console.log(wallet?.adapter.name+\" connected to Grape Dashboard!\");\n              session.token = {address, signature};\n              session.publicKey = publicKey.toString();\n              session.isConnected = true;\n              session.fromTransaction = fromTransaction;\n              if (!response)\n                session.isWallet = false;\n              else\n                session.isWallet = true;\n              setSession(session);\n            } else{\n              createNakedSession(publicKey.toBase58());\n            }\n          } else{ // register\n            console.log(\"REGISTERING WITH GRAPE\");\n            console.log(JSON.stringify({\n                userId: userId,\n                token: token,\n                address: bs58_address,\n                publicKey: publicKey.toString(),\n                signature: signature,\n                fromTransaction: fromTransaction\n            }));\n            \n            if (GRAPE_APP_API_URL){\n              const response2 = await fetch(`${GRAPE_APP_API_URL}/register`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    userId: userId,\n                    token: token,\n                    address: bs58_address,\n                    publicKey: publicKey.toString(),\n                    signature: signature,\n                    fromTransaction: fromTransaction\n                })\n              }).catch( err => {\n                console.log(\"ERROR: \"+err);\n                return null;\n              });\n              const session2 = await response2.json();\n              console.log(wallet?.adapter.name+\" connected to Grape Dashboard!\");\n              session2.token = {address, signature};\n              session2.publicKey = publicKey.toString();\n              session2.discordId = discordId;\n              session.fromTransaction = fromTransaction;\n              if (!response2){\n                session2.isConnected = false;\n                session.isWallet = false;\n              }else{\n                session2.isConnected = true;\n                session.isWallet = true;\n              }\n              setSession(session2);\n            }\n            //console.log(\"CD: Session created (\"+publicKey.toString()+\")\");\n          }\n          \n            \n        }\n        return session;\n    \n    } catch (error: any) {\n      console.log(`Signing failed: ${error?.message}`);\n      disconnectSession(false);\n      //setSession(null);\n      return null;\n    }\n  }, [signMessage]);\n//};\n\n  //console.log('Pre call: '+publicKey);\n\n  const [callstopk, setCallToPk] = React.useState(0);\n  \n  React.useEffect(() => { \n    \n    setCallToPk(callstopk+1);\n\n    if ((!session.publicKey)&&(publicKey)){\n      if (publicKey.toString().length > 0){\n        //console.log(callstopk+\". CD SESSION CHANGED: \"+session.publicKey);\n        //console.log(callstopk+\". CD WALLET PK: \"+publicKey);  \n        // show dialog to connect \n        VerifyWallet(publicKey);\n      }\n    }\n  }, [publicKey]);\n\n  // <WalletDisconnectButton startIcon={<DisconnectIcon />} style={{ marginLeft: 8 }} />\n  return(\n    <React.Fragment>\n      <WalletMultiButton />\n    </React.Fragment>\n  );\n}\n\nconst WalletButton: FC = (props:any) => {\n  const [open, setOpen] = React.useState(false);\n  const { publicKey, wallet, disconnect, sendTransaction, signMessage } = useWallet();\n  \n  function trimAddress(addr: string) {\n    let start = addr.substring(0, 5);\n    let end = addr.substring(addr.length - 4);\n    return `${start}...${end}`;\n  }\n\n  function showWalletAddress(addr: string){\n    return (\n      <React.Fragment>\n        <AccountBalanceWalletOutlinedIcon fontSize=\"small\" sx={{ mr:1 }}  /> {trimAddress(addr)}\n      </React.Fragment>\n    )\n  }\n  \n  const handleOpen = () => {\n      setOpen(true);\n    };\n    const handleClose = () => {\n      setOpen(false);\n    };\n    \n   return(\n      <WalletNavigation {...props} />\n   );\n  \n};\n\nexport default function ConnectDialog(props: any) {\n  const { isConnected, menuId, handleProfileMenuOpen, handleClickOpen, buttonText, nakedWallet, userId, discordId, token, login } = props;\n  const [open, setOpen] = React.useState(false);\n  const { session, setSession } = useSession();\n  //const [providers, setProviders] = React.useState(['Sollet', 'Sollet Extension', 'Phantom', 'Solflare']);\n  //const [anchorEl, setAnchorEl] = React.useState(null);\n  \n  function trimAddress(addr: string) {\n    let start = addr.substring(0, 5);\n    let end = addr.substring(addr.length - 4);\n    return `${start}...${end}`;\n  }\n\n  function showWalletAddress(addr: string){\n    return (\n      <React.Fragment>\n        <AccountBalanceWalletOutlinedIcon fontSize=\"small\" sx={{ mr:1 }}  /> {trimAddress(addr)}\n      </React.Fragment>\n    )\n  }\n\n  const ManualWalletForm = () => {\n    const [walletId, setInputValue] = React.useState('');\n    const [error, setError] = React.useState(false)\n    const handleInput = (val: any) => {\n      return val;\n    };\n\n    function handleSubmit(event: any) {\n      event.preventDefault();\n      // use the inputValue which is the wallet ID\n      console.log( 'MANUALLY SET WALLET ID:' + walletId); \n      if ((walletId.length >= 32) && \n          (walletId.length <= 44)){\n        // WalletId is base58 validate the type too later on\n        setSession(NakedWallet(walletId, session));\n        handleClose();\n      } else{\n        // Invalid Wallet ID\n        \n      }\n        //console.log( 'SET WALLET:', walletId); \n    }\n    \n    //console.log(\"CONNECT USERID: \"+walletId);\n\n    return (\n        <>\n          <form onSubmit={handleSubmit}>\n            <Grid container>\n              <Grid item>\n                <TextField\n                  autoFocus\n                  autoComplete='off'\n                  margin=\"dense\"\n                  id=\"wallet_id\"\n                  label=\"Paste Wallet ID\"\n                  type=\"text\"\n                  fullWidth\n                  variant=\"standard\"\n                  value={walletId}\n                  onChange={(e) => setInputValue(e.target.value)}\n                />\n              </Grid>\n              <Grid item alignItems=\"center\" style={{ display: \"flex\" }}>\n                <Button \n                  type=\"submit\"\n                  variant=\"contained\" \n                  title=\"GO\">\n                    Go\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </>\n    );\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /*\n  const handleClickOpen = () => {\n    setOpen(true);\n  };*/\n  \n  const wallet_connect_body = (\n    <React.Fragment>\n      {nakedWallet &&\n        <React.Fragment>\n          <Divider />\n          <ManualWalletForm />\n        </React.Fragment>\n      }\n    </React.Fragment>\n  );\n\n  return (\n    <>\n      <WalletDialogProvider>    \n        <WalletButton {...props}/>\n        {wallet_connect_body}\n      </WalletDialogProvider>\n    </>\n\n  );\n}","import UserWallet from './UserWallet';\nimport UserServer from './UserServer';\nimport Server from './Server';\n\nexport default class Session {\n  userId: string;\n  discordId: string;\n  twitterId: string;\n  userWallets: UserWallet[];\n  servers: Server[];\n  userServers: UserServer[];\n  token: {\n    signature: Buffer,\n    address: Buffer,\n  };\n  publicKey: string;\n  isWallet: Boolean;\n  isConnected: Boolean;\n  fromTransaction: Boolean;\n\n  constructor(data: any) {\n    this.userId = data && data.userId;\n    this.discordId = data && data.discordId;\n    this.twitterId = data && data.twitterId;\n    this.userWallets = (data && data.userWallets) || [];\n    this.userServers = (data && data.userServers) || [];\n    this.servers = (data && data.servers) || [];\n    this.isConnected = data && data.userId ? true : false;\n    this.token = (data && data.token) || {signature: null, address: null};\n    this.publicKey = data && data.publicKey;\n    this.isWallet = data && data.isWallet;\n    this.fromTransaction = data && data.fromTransaction;\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\n\nexport default function GrapeIcon(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>       \n           <path d=\"M9.01656587,22 C7.35962231,22 6.01590977,20.6620342 6.01414706,19.0104197 C6.014381,18.6854574 6.0683383,18.3627546 6.17385019,18.0552822 C4.65355783,17.7078956 3.66088018,16.2486823 3.89967765,14.712301 C3.92491623,14.5431035 3.96663621,14.3767602 4.02424609,14.2156295 C3.4237021,14.0728659 2.88175433,13.7494098 2.47193169,13.2891462 C1.72849601,12.4624125 1.51596312,11.2886187 1.92255293,10.2549928 C0.574618257,9.74031484 -0.212717429,8.33995457 0.0504549418,6.92526737 C0.313627312,5.51058017 1.55231363,4.48469804 2.99575795,4.48596237 C3.70977051,4.48440525 4.40081639,4.73735035 4.94413611,5.19913169 C5.03896245,5.11514097 5.13926233,5.03749899 5.24437799,4.96671491 L5.36894643,4.89985528 L5.42643955,4.86801737 C5.5328774,4.80668234 5.64271625,4.75140804 5.755428,4.7024602 L5.89916081,4.65470333 L5.96304206,4.63560058 C6.07846122,4.5978584 6.19572768,4.56597948 6.31438894,4.54008683 L6.45173363,4.54008683 L6.51242082,4.54008683 C6.63409636,4.52251081 6.75680077,4.51293873 6.87973802,4.51143271 C6.93403708,4.51143271 6.97555989,4.51143271 7.02027677,4.51143271 L7.08096396,4.51143271 C7.2084816,4.51824383 7.33543563,4.53313157 7.4610574,4.55600579 C7.50980885,4.56536124 7.55783865,4.578128 7.60479022,4.59421129 L7.67186553,4.61331404 C7.78701504,4.64184071 7.90012381,4.67800422 8.01043616,4.72156295 C8.08070554,4.75021708 8.14458679,4.78523878 8.2116621,4.82026049 L8.27554336,4.8552822 L8.34900679,4.8934877 C8.40018906,4.9144998 8.44936418,4.94007388 8.49593367,4.9698987 C8.57259117,5.02402315 8.62369617,5.06541245 8.67160711,5.10361795 C8.35220086,3.6040521 7.7517171,1.62054993 6.04928175,1.07930535 C5.69874518,0.95068507 5.33014791,0.877632393 4.95691236,0.862807525 C4.0913214,0.862807525 3.21614826,1.35629522 1.73090917,2.67756874 C1.60080541,2.7887062 1.4167449,2.81179054 1.26307634,2.73624297 C1.10940777,2.66069541 1.01574927,2.501077 1.02502135,2.33053546 C1.0291406,2.21770958 1.08003178,2.11164293 1.1655601,2.03762663 C2.81050232,0.569898698 3.87412515,0 4.95371829,0 C5.42529916,0.0101105104 5.89178986,0.0994489882 6.33355332,0.264254703 C7.32371271,0.601736614 7.97849554,1.12387844 8.65244274,2.34327062 C9.08779739,2.41141279 9.52771094,2.44653527 9.96839651,2.44833575 C13.057055,2.44833575 13.9513925,0.538060781 13.9865272,0.461649783 C14.0566749,0.308273678 14.2102907,0.209927141 14.3793969,0.210130246 C14.439031,0.209865925 14.4979671,0.222920722 14.5518763,0.248335745 C14.6560393,0.293055164 14.7379381,0.377435376 14.7793339,0.48268504 C14.8207296,0.587934704 14.818185,0.705314118 14.7722666,0.808683068 C14.7275497,0.910564399 13.6287922,3.30795948 9.98117276,3.30795948 C9.66619319,3.30562385 9.35160204,3.2854272 9.03892431,3.24746744 C9.21808608,3.74708278 9.36530791,4.25751208 9.47970494,4.77568741 C9.88059439,4.59234413 10.3162601,4.49680589 10.75733,4.49551375 C11.3243112,4.49761987 11.8787106,4.6622996 12.3543612,4.9698987 C12.4592934,5.03719347 12.5586292,5.11278662 12.6514091,5.1959479 C13.7179784,4.28262725 15.2782426,4.23152348 16.4026614,5.0730821 C17.5270802,5.91464071 17.9130852,7.42240785 17.3307107,8.69811867 C17.1172335,9.18183803 16.7775078,9.59963239 16.3469394,9.90795948 C16.6475777,10.4422013 16.7747835,11.0561645 16.7110626,11.6654124 C16.5482745,13.0729395 15.4233048,14.1770605 14.0088856,14.3175109 C14.0783161,14.5238349 14.1233379,14.7375349 14.1430363,14.9542692 C14.1983201,15.7406538 13.9387581,16.5168358 13.4211781,17.1128799 C13.011662,17.5917696 12.4584577,17.9266434 11.8433112,18.0680174 C11.9511271,18.3749955 12.0061994,18.6979085 12.0062084,19.0231548 C11.9957344,20.6641175 10.6628326,21.9913138 9.01656587,22 Z M9.01656587,16.8740955 C8.23171201,16.8438771 7.49314811,17.2440165 7.09170769,17.9169457 C6.69026727,18.589875 6.69026727,19.4277805 7.09170769,20.1007098 C7.49314811,20.7736391 8.23171201,21.1737785 9.01656587,21.1435601 L9.10599962,21.1435601 C10.2609266,21.0820791 11.1585961,20.1182818 11.1344522,18.9656793 C11.1103083,17.8130768 10.1730609,16.8874693 9.01656587,16.8740955 L9.01656587,16.8740955 Z M6.85737958,13.0280753 C6.05016188,13.0307334 5.31291109,13.4852636 4.95002299,14.2039995 C4.58713489,14.9227355 4.66017012,15.7837503 5.13897392,16.4315485 C5.48253616,16.8938982 5.99820802,17.1990938 6.56991395,17.278437 C6.99079272,16.6921752 7.60828846,16.2754353 8.31067804,16.1036179 C8.22868139,15.8733861 8.17609802,15.633778 8.15416898,15.3904486 C8.10820215,14.8342868 8.21881781,14.2763714 8.47357523,13.7794501 C8.07018694,13.3065158 7.48012934,13.032196 6.85737958,13.0280753 Z M9.19543337,16.0303907 C10.0990762,16.0839079 10.9301277,16.5413885 11.4568297,17.2752533 C12.5753211,17.1251594 13.3846319,16.1350614 13.3061432,15.0128326 C13.2276545,13.8906038 12.2883473,13.022019 11.1597818,13.0280438 L10.9936906,13.0280438 C10.2984222,13.0788458 9.67153958,13.4640023 9.31361654,14.0603123 C8.9556935,14.6566223 8.91159606,15.3893377 9.19543337,16.0240232 L9.19543337,16.0303907 Z M13.7405844,13.4547033 C14.8780822,13.4527628 15.8159137,12.565379 15.877036,11.4331754 C15.9381583,10.3009717 15.1012771,9.3183948 13.9705569,9.19479016 C13.8918421,9.19003787 13.812911,9.19003787 13.7341963,9.19479016 C12.9945106,9.1954234 12.3075972,9.57676471 11.9176114,10.2032707 C11.5276256,10.8297767 11.4898678,11.6126082 11.8177587,12.2735166 C12.5405612,12.4358198 13.1776329,12.8587906 13.6064338,13.4610709 L13.7405844,13.4547033 Z M4.72374579,9.17884454 C4.20148452,9.17924802 3.69727793,9.3694154 3.30558201,9.71374819 C2.87716278,10.0884383 2.61611408,10.6177935 2.58015112,11.1847786 C2.54418815,11.7517638 2.73627321,12.309676 3.11393826,12.7351664 C3.43971725,13.1036746 3.88309651,13.3488295 4.36920485,13.429233 L4.4330861,13.429233 C4.60949986,13.1734096 4.82505364,12.9467316 5.07189861,12.757453 C5.37302433,12.5381021 5.7134479,12.3781636 6.07483425,12.2862518 C6.02685202,12.155471 5.988423,12.0214019 5.959848,11.8850941 C5.81421654,11.184587 5.92766234,10.4552146 6.27925426,9.83154848 C5.87169659,9.41171294 5.30983083,9.17595915 4.72374579,9.17884454 L4.72374579,9.17884454 Z M6.95958958,12.1875543 C7.72850039,12.2144165 8.4573458,12.536039 8.99420743,13.0853835 C9.49089257,12.5739091 10.154849,12.2565511 10.8659281,12.1907381 C10.6934499,11.6251251 10.6934499,11.0211846 10.8659281,10.4555716 C10.7054989,10.0520038 10.4230819,9.70818462 10.0578303,9.47178003 C9.06331223,8.83528333 7.73970584,9.11993277 7.09693427,10.1085384 C6.6832694,10.7311114 6.63573858,11.5268185 6.97236583,12.1939219 L6.95958958,12.1875543 Z M8.9111618,8.27785818 C9.47758191,8.27752686 10.0320808,8.4400253 10.5081931,8.74587554 C10.832384,8.95675707 11.1105046,9.23073462 11.3258731,9.55137482 C11.5046094,9.30756863 11.7200929,9.09277807 11.9646856,8.9146165 C11.8986018,8.80055244 11.8419848,8.6812936 11.7954003,8.55803184 C11.4402148,7.65636899 11.5499602,6.63854258 12.0892541,5.83270622 C12.0284575,5.77863236 11.9632907,5.72964822 11.8944162,5.68625181 C11.5499331,5.46119295 11.1468536,5.3416541 10.7349715,5.34237857 C10.0888731,5.3393669 9.47598473,5.62745989 9.0673192,6.12629538 C8.65865367,6.62513086 8.49796299,7.28130319 8.6300843,7.91172214 C8.66091664,8.03795321 8.70480374,8.16065534 8.76104086,8.27785818 L8.9111618,8.27785818 Z M2.99895201,5.33921852 C2.13350184,5.33989161 1.35365398,5.86009369 1.02297389,6.65730629 C0.69229379,7.4545189 0.875886268,8.37178556 1.48816042,8.98147612 C1.72949325,9.21958505 2.02391031,9.39741279 2.34736325,9.50043415 C2.46335995,9.34425557 2.59499407,9.20024368 2.74023294,9.07062229 C3.10844546,8.75890306 3.54675058,8.54045521 4.01785796,8.43386397 C3.9832349,8.33588154 3.95443836,8.2359493 3.93161827,8.13458755 L3.93161827,8.07727931 C3.89459608,7.90128014 3.87427739,7.72219782 3.87093109,7.54240232 C3.86246147,7.16185724 3.92864665,6.78332735 4.0657689,6.42807525 C4.0657689,6.39942113 4.08812734,6.370767 4.10090359,6.34211288 C4.16114472,6.20556893 4.22940295,6.07268078 4.30532359,5.94413893 C4.31851769,5.9156609 4.33345134,5.88801616 4.35004047,5.86136035 L4.35004047,5.8422576 C3.97109966,5.52471787 3.49394423,5.34706272 2.99895201,5.33921852 L2.99895201,5.33921852 Z M13.7405844,8.32879884 C13.8473438,8.3286875 13.9540106,8.33506693 14.0599907,8.34790159 C14.7362371,8.42120368 15.3671869,8.72218725 15.8486657,9.20115774 C16.6445011,8.63099229 16.9509333,7.59535695 16.5928823,6.68596237 C16.2784485,5.87998024 15.5081686,5.34193 14.6408215,5.32242346 C13.7734745,5.30291691 12.979633,5.80579021 12.6290506,6.59681621 C12.3989609,7.11471517 12.3863092,7.70284721 12.5939159,8.2301013 C12.628905,8.32212907 12.6705367,8.41150919 12.7184844,8.4975398 C13.0466542,8.38211147 13.3926035,8.32499787 13.7405844,8.32879884 L13.7405844,8.32879884 Z M4.90900142,8.32879884 C5.60879418,8.37101575 6.2713813,8.6572887 6.78072208,9.13748191 C7.09942652,8.82539619 7.48333645,8.5873112 7.9050321,8.44023155 C7.86365578,8.32221389 7.82847344,8.20212845 7.79962803,8.0804631 C7.63211174,7.30599095 7.7815741,6.49690552 8.21485617,5.83270622 L8.21485617,5.81678726 C7.82963121,5.50130197 7.34636748,5.32910199 6.84779739,5.3296599 C6.29830626,5.32822893 5.76996856,5.54071225 5.37533455,5.92185239 C4.72015515,6.54785756 4.53316477,7.51810213 4.90900142,8.34153401 L4.90900142,8.32879884 Z\" id=\"Shape\"></path>\n        </SvgIcon>\n    );\n  }","import React, { FC, useCallback } from 'react';\nimport { styled } from '@mui/material/styles';\n\nimport {\n  Dialog,\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Skeleton,\n  DialogTitle,\n  DialogContent,\n} from '@mui/material';\n\nimport { useSession } from \"../../contexts/session\";\nimport { TokenAmount } from '../../utils/token/safe-math';\nimport { PublicKey } from '@solana/web3.js'\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\n\nimport { MakeLinkableAddress, ValidateAddress, trimAddress } from '../../components/Tools/WalletAddress';\n\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { web3 } from '@project-serum/anchor';\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport interface DialogTitleProps {\n  id: string;\n  children?: React.ReactNode;\n  onClose: () => void;\n}\n\nfunction formatBlockTime(date: string, epoch: boolean, time: boolean){\n  // TODO: make a clickable date to change from epoch, to time from, to UTC, to local date\n\n  let date_str = new Date(date).toLocaleDateString(); //.toUTCString();\n  if (time)\n      date_str = new Date(date).toLocaleString();\n  if (epoch){\n      date_str = new Date(+date * 1000).toLocaleDateString(); //.toUTCString();\n      if (time)\n          date_str = new Date(+date * 1000).toLocaleString(); //.toUTCString();\n  }\n  return (\n      <>{date_str}</>\n  );\n}\n\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default function TransactionHistory(props: any) {\n    const [mint, setMint] = React.useState(props.mint);\n    const [mintdecimals, setMintDecimals] = React.useState(props.decimals);\n    const [open, setOpen] = React.useState(false);\n    const [publicKey, setPublicKey] = React.useState(props.publicKey);\n    const [address, setAddress] = React.useState(props.address);\n    const [transactionHistory, setTransactionHistory] = React.useState(null);\n    const [transactionArray, setTransactionArray] = React.useState(null);\n    const [transactionHistoryDetails, setTransactionHistoryDetails] = React.useState(null);\n    const [transactionRecentHistory, setTransactionRecentHistory] = React.useState(null);\n    const { session, setSession } = useSession();\n\n    const { connection } = useConnection();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n        fetchTransactionHistoryData();\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const fetchTransactionHistoryData = async () => {\n      //console.log(\"ADDRESS: \"+address);\n      const transaction = await connection.getSignaturesForAddress(new PublicKey(address));\n      //console.log(\"RESPONSE: \"+JSON.stringify(transaction));\n\n      let tarray: any[] = [];\n      let tmemo: any[] = [];\n      let ttime: any[] = [];\n      let x = 0;\n      for (var value of transaction){\n        if (x<100){\n          tarray.push(transaction[x].signature);\n          tmemo.push(transaction[x].memo);\n          ttime.push(transaction[x].blockTime);\n        }\n        x++;\n      }\n\n      setTransactionHistory(transaction);\n\n      const transactionDetails = await connection.getParsedTransactions(tarray);\n      //setTransactionHistoryDetails(transactionDetails);\n\n      let txObject = {\n        transaction:transaction,\n        details: transactionDetails\n      }\n\n      setTransactionRecentHistory(txObject);\n\n      let arrtransactional: any[] = [];\n\n      let pos = 0;\n      for (var tvalue of transactionDetails){\n        //console.log(\"value: \"+JSON.stringify(tvalue));\n        // loop instructions\n        \n        let ipos = 0;\n\n        for (var ivalue of tvalue.transaction.message.instructions){\n          console.log(\"inner value: \"+JSON.stringify(ivalue));\n          let ival_str = JSON.stringify(ivalue);\n          let ival_json = JSON.parse(ival_str);\n          if (ipos === 0){\n          //for (var xvalue of ivalue){\n            if (ival_json?.parsed?.info?.amount){\n              if (ival_json.parsed.info.authority === session.publicKey){\n                console.log(\"amount: \" + ival_json.parsed.info.amount);\n                console.log(\"sender: \" + ival_json.parsed.info.authority);\n                console.log(\"destination: \" + ival_json.parsed.info.destination);\n                console.log(\"type: \" + ival_json.parsed.type);\n\n                arrtransactional.push({\n                  signature:tarray[ipos],\n                  transaction:ival_json?.parsed?.info,\n                  memo:tmemo[ipos],\n                  time:ttime[ipos],\n                });\n              }\n\n            }\n          }\n          ipos++;\n        }\n      }\n\n      setTransactionArray(arrtransactional);\n      \n    }\n    /*\n    React.useEffect(() => { \n      if (!transactionHistory){\n        fetchTransactionHistoryData();\n      }\n    }, [address]);\n    */\n    return (\n      <React.Fragment>\n            <Button\n                variant=\"outlined\" \n                //aria-controls={menuId}\n                title={`Transaction History`}\n                onClick={handleClickOpen}\n                size=\"small\"\n                sx={{ml:1}}\n                >\n                <ReceiptIcon />\n            </Button>\n            <BootstrapDialog\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}\n                PaperProps={{ \n                    style: {\n                        background: 'linear-gradient(to right, #251a3a, #000000)',\n                        boxShadow: '3',\n                        border: '1px solid rgba(255,255,255,0.15)',\n                        borderTop: '1px solid rgba(255,255,255,0.3)',\n                        borderRadius: '20px',\n                        padding:'4'\n                        },\n                    }}\n            >\n              <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                Transaction History\n              </BootstrapDialogTitle>\n              <DialogContent dividers>\n                <TableContainer component={Paper} \n                  sx={{\n                      background: 'rgba(255,255,255,0.015)',\n                      boxShadow: 3,\n                      borderRadius: '20px'\n                  }}\n                  >\n                  <Table sx={{ minWidth: 400 }} size=\"small\" aria-label=\"a dense table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Signature</TableCell>\n                        <TableCell align=\"right\">Amount</TableCell>\n                        <TableCell align=\"right\">Destination</TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                        <TableCell align=\"right\">Memo</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {/*\n                      {transactionArray ? transactionArray.map((item: any) => (\n                        <TableRow\n                          key={1}\n                          sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                          <TableCell component=\"th\" scope=\"row\">  \n                            <MakeLinkableAddress addr={item.signature} trim={5} hasextlink={true} hascopy={false} fontsize={14} />\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {item.transaction.amount && item.transaction.amount > 0 &&\n                            <>\n                              {parseFloat(new TokenAmount(item.transaction.amount, mintdecimals).format())}\n                            </>\n                            }\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <MakeLinkableAddress addr={item.transaction.destination} trim={5} hasextlink={true} hascopy={false} fontsize={14} />\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <small>{formatBlockTime(item.time, true, true)}</small>\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            {item.memo}\n                          </TableCell>\n                        </TableRow>\n                        ))\n                        */}\n\n                      {transactionHistory ? transactionHistory.map((item: any) => (\n                        <TableRow\n                        key={1}\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                      >\n                        <TableCell component=\"th\" scope=\"row\">  \n                          <MakeLinkableAddress addr={item.signature} trim={5} hasextlink={true} hascopy={false} fontsize={14} />\n                        </TableCell>\n                        <TableCell align=\"center\" colSpan={2}>\n                          (coming soon)\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <small>{formatBlockTime(item.blockTime, true, true)}</small>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {item.memo}\n                        </TableCell>\n                      </TableRow>\n                      ))\n                      \n                      \n                        :\n                        <React.Fragment>\n                            <TableRow>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                                <TableCell><Skeleton/></TableCell>\n                            </TableRow>\n                        </React.Fragment>\n                      }\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </DialogContent>\n            </BootstrapDialog>\n      </React.Fragment>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\n\nexport default function SolIcon(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>       \n            <path d=\"M3.57430068,13.158837 C3.70705061,13.0260871 3.88958177,12.9486496 4.08317542,12.9486496 L21.6393539,12.9486496 C21.9601663,12.9486496 22.1205724,13.3358369 21.8937913,13.5626181 L18.4256993,17.03071 C18.2929494,17.16346 18.1104182,17.2408974 17.9168246,17.2408974 L0.36064607,17.2408974 C0.0398337337,17.2408974 -0.120572435,16.8537101 0.1062087,16.626929 L3.57430068,13.158837 Z\"></path>\n            <path d=\"M3.57430068,0.210187393 C3.71258186,0.0774374604 3.89511302,0 4.08317542,0 L21.6393539,0 C21.9601663,0 22.1205724,0.387187302 21.8937913,0.613968436 L18.4256993,4.08206041 C18.2929494,4.21481035 18.1104182,4.29224781 17.9168246,4.29224781 L0.36064607,4.29224781 C0.0398337337,4.29224781 -0.120572435,3.9050605 0.1062087,3.67827937 L3.57430068,0.210187393 Z\"></path>\n            <path d=\"M18.4256993,6.64302785 C18.2929494,6.51027792 18.1104182,6.43284046 17.9168246,6.43284046 L0.36064607,6.43284046 C0.0398337337,6.43284046 -0.120572435,6.82002776 0.1062087,7.0468089 L3.57430068,10.5149009 C3.70705061,10.6476508 3.88958177,10.7250883 4.08317542,10.7250883 L21.6393539,10.7250883 C21.9601663,10.7250883 22.1205724,10.337901 21.8937913,10.1111198 L18.4256993,6.64302785 Z\"></path>\n        </SvgIcon>\n    );\n  }","export const GRAPE_APP_API_URL = process.env.REACT_APP_API_URL || null;\nexport const FREE_RPC_ENDPOINT = process.env.REACT_APP_API_FREE_RPC_ENDPOINT || 'https://api.mainnet-beta.solana.com';\nexport const GRAPE_RPC_ENDPOINT = process.env.REACT_APP_API_GRAPE_RPC_ENDPOINT || 'https://api.mainnet-beta.solana.com';\nexport const BONFIDA_TWITTER_REGISTRAR_URL = process.env.REACT_APP_API_BONFIDA_TWITTER_REGISTRAR_SERVER_URL || null;\nexport const GRAPE_TREASURY = 'GrapevviL94JZRiZwn2LjpWtmDacXU8QhAJvzpUMMFdL';","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry';\nimport { getProfilePicture } from '@solflare-wallet/pfp';\n\nimport { useConnection } from '@solana/wallet-adapter-react';\n\nimport{\n  Typography,\n  Paper,\n  Grid,\n  Box,\n  Divider,\n  Chip,\n  Tab,\n  Tabs,\n  Button,\n  Skeleton,\n  Tooltip,\n  Avatar,\n} from '@mui/material/'\n\nimport PropTypes from 'prop-types';\n\nimport { useSession } from \"../../contexts/session\";\nimport Summary from '../Summary/Summary';\nimport PortfolioTable from './PortfolioTable';\nimport { struct } from 'buffer-layout';\nimport { publicKey, u128, u64 } from '@project-serum/borsh'\nimport { TokenAmount, lt } from '../../utils/token/safe-math';\n\n//import { useTheme } from '@mui/material/styles';\nimport {PublicKey} from '@solana/web3.js';\nimport { PretifyCommaNumber } from '../../components/Tools/PretifyCommaNumber';\nimport { GRAPE_RPC_ENDPOINT } from '../../components/Tools/constants';\n\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ImageIcon from '@mui/icons-material/Image';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport GrapeIcon from '../../components/StaticIcons/GrapeIcon';\nimport SolIcon from '../../components/StaticIcons/SolIcon';\nimport SolCurrencyIcon from '../../components/StaticIcons/SolCurrencyIcon';\n\nimport { FarmsView } from \"../\";\n\n  const USER_STAKE_INFO_ACCOUNT_LAYOUT = struct([\n    u64('state'),\n    publicKey('poolId'),\n    publicKey('stakerOwner'),\n    u64('depositBalance'),\n    u64('rewardDebt')\n  ])\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nexport const PortfolioView = () => {\n  const [initPortfolio, setInitPortfolio] = useState(null);\n  const [initCGPriceData, setInitCGPriceData] = useState(null);\n  const [initNewPriceData, setInitNewPriceData] = useState(null);\n  const [portfolioPositions, setPorfolioBalances] = useState(null);\n  const [tokenMap, setTokenMap] = useState(new Map());\n  const { session, setSession } = useSession();\n  const [grapeTicker, setGrapeTicker] = useState(null);\n  const [solTicker, setSolTicker] = useState(null);\n  const [tstamp, setTickerTimestamp] = useState(null);\n  const [value, setTabValue] = React.useState(0);\n  const [profilePictureUrl, setProfilePicutureUrl] = React.useState(null);\n  const [hasProfilePicture, setHasProfilePicture] = React.useState(false);\n  const { connection } = useConnection();\n\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [array, setArray] = useState([]);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  //const connection = new Connection(url, \"singleGossip\");\n  //const orca = getOrca(connection);\n  //const owner: Keypair = getKeyPair();\n\n  //RAYDIUM: /logos/platforms/raydium.png\n  //SOLFARM: /logos/platforms/solfarm.png\n  //ORCA: /logos/platforms/orca.png\n\n  //Get Balances RPC\n  const fetchStakedRaydium = async () => {\n    const body = {\n        method: \"getProgramAccounts\",\n        //method: \"getMultipleAccountsInfo\",\n        jsonrpc: \"2.0\",\n        params: [\n            \"9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z\",\n            //\"97q89hnoKwqcynvwXcj83YqfqUBuCm4A8f2zHeV6bfZg\", ORCA/GRAPE\n            //session.publicKey\n            //\"9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z\", // raydium stakes\n            {\"commitment\":\"confirmed\",\"filters\":[{\"memcmp\":{\"offset\":40,\"bytes\":session.publicKey}}],\"encoding\":\"base64\"}\n            //{\"connection\":\"Connection\",\"publicKeys\": [session.publicKey]}\n        ],\n        id: \"84203270-a3eb-4812-96d7-0a3c40c87a88\"\n      };\n      \n      \n      const response = await fetch(GRAPE_RPC_ENDPOINT, {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      \n      const json = await response.json();\n      let decoded = json.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new PublicKey(pubkey),\n        accountInfo: {\n          data: Buffer.from(data[0], 'base64'),\n          executable,\n          owner: new PublicKey(owner),\n          lamports\n        }}));\n\n        return decoded;\n  }\n\n  const fetchPairsSolFarm = async () => {\n    const response = await fetch(\"https://api.raydium.io/pairs\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchPairsOrca = async () => {\n    // ORCA token:\n    // orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE\n    // ORCA pool:\n    // 97q89hnoKwqcynvwXcj83YqfqUBuCm4A8f2zHeV6bfZg\n\n    /* CONSIDERING THEIR API:\n    const connection = new Connection(url, \"singleGossip\");\n    const orca = getOrca(connection);\n    \n    // Get an instance of the ETH-USDC orca pool\n    let pool = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n\n    // Get the number of ETH-USDC LP tokens in your wallet\n    let grapeUsdcLPBalance = await pool.getLPBalance(owner.publicKey);\n    // Get the total supply of ETH-USDC LP tokens\n    let grapeUsdcLPSupply = await pool.getLPSupply();\n    \n    */\n    const response = await fetch(\"https://api.orca.so/allPools\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchPairsRaydium = async () => {\n    const response = await fetch(\"https://api.raydium.io/pairs\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchAdditionalFarmPools = async () => {\n\n    // get Orca (we should function this out though)\n    const response = await fetch(\"https://api.orca.so/allPools\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchBalances = async () => {\n    const body = {\n      method: \"getTokenAccountsByOwner\",\n      jsonrpc: \"2.0\",\n      params: [\n        // Get the public key of the account you want the balance for.\n        session.publicKey,\n        { programId: \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\" },\n        { encoding: \"jsonParsed\", commitment: \"processed\" },\n      ],\n      id: \"35f0036a-3801-4485-b573-2bf29a7c77d2\",\n    };\n\n    //try{\n      const response = await fetch(GRAPE_RPC_ENDPOINT, {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      const json = await response.json();\n      const resultValues = json.result.value\n      return resultValues;\n  };\n\n  const fetchSOLBalance = async () => {\n    const body = {\n      method: \"getBalance\",\n      jsonrpc: \"2.0\",\n      params: [\n        // Get the public key of the account you want the balance for.\n        session.publicKey\n      ],\n      id: \"35f0036a-3801-4485-b573-2bf29a7c77d3\",\n    };\n\n    const response = await fetch(GRAPE_RPC_ENDPOINT, {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    const resultValues = json.result.value;\n    return resultValues;\n  };\n\n  //Get Prices RPC\n  const fetchNSWPriceList = async () => {\n    const response = await fetch(\"https://api.sonar.watch/latest\", {\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING CG DATA!\");\n      return null;\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  //Get Prices RPC\n  const fetchCoinGeckoPriceList = async () => {\n    const response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?include_24hr_change=true&ids=solana,kitty-solana,astrapad,buff-samo,solana-inu,wipemyass,almond,swole-doge,oogi,solex-finance,bamboo-coin,solum,solberg,sola-token,solana,usd-coin,everid,impossible-finance,investin,bitcoin,ethereum,yearn-finance,chainlink,ripple,tether,sushi,aleph,swipe,hedget,cream-2,upbots,helium,frontier-token,akropolis,hxro,uniswap,serum,ftx-token,megaserum,usd-coin,tomochain,karma-dao,lua-token,math,keep-network,swag-finance,celsius-degree-token,reserve-rights-token,1inch,the-graph,compound-coin,pax-gold,strong,bonfida,kin,maps,oxygen,brz,tether,xmark,raydium,bitsong,3x-short-eos-token,3x-long-eos-token,3x-short-bnb-token,3x-long-bnb-token,3x-long-bitcoin-sv-token,3x-short-bitcoin-sv-token,3x-short-litecoin-token,3x-long-litecoin-token,3x-long-bitcoin-token,3x-short-bitcoin-token,3x-short-bitcoin-cash-token,3x-long-bitcoin-cash-token,3x-long-ethereum-token,3x-short-ethereum-token,3x-long-altcoin-index-token,3x-short-altcoin-index-token,3x-long-shitcoin-index-token,3x-short-shitcoin-index-token,3x-long-midcap-index-token,3x-short-midcap-index-token,3x-short-chainlink-token,3x-long-chainlink-token,3x-long-xrp-token,3x-short-xrp-token,1x-long-btc-implied-volatility-token,1x-short-btc-implied-volatility,aave,serum-ecosystem-token,holy-trinity,bilira,3x-long-dogecoin-token,perpetual-protocol,weth,coin-capsule,ftx-token,true-usd,tokenlon,allianceblock,skale,unlend-finance,orion-protocol,sparkpoint,uma,smartkey,mirror-protocol,growth-defi,xdai-stake,yearn-finance,basic-attention-token,basic-attention-token,decentraland,xio,unilayer,unimex-network,1inch,armor,armor-nxm,defipulse-index,deltahub-community,kira-network,energy-web-token,cryptocurrency-top-10-tokens-index,audius,vesper-finance,keep3rv1,lead-token,uniswap,wrapped-bitcoin,union-protocol-governance-token,unisocks,idextools,hex,cream-2,yfimobi,zeroswap,wrapped-anatha,ramp,parsiq,smooth-love-potion,the-sandbox,concentrated-voting-power,republic-protocol,sora,funfair,pickle-finance,pax-gold,quant-network,oraichain-token,truefi,mcdex,nucypher,razor-network,chainlink,unfederalreserve,nusd,hegic,xfinance,dextf,iexec-rlc,cvault-finance,cyberfi,wise-token11,gnosis,poolz-finance,dai,sushi,fyooz,quiverx,unitrade,bird-money,axion,bridge-mutual,dynamite,bitberry-token,waxe,matic-network,robonomics-network,aave,ethlend,polkastarter,unibright,dia-data,frax,keep-network,reserve-rights-token,88mph,paid-network,swipe,request-network,whale,kleros,krown,apy-finance,ocean-protocol,shopping-io,binance-wrapped-btc,unistake,maker,harvest-finance,usd-coin,aragon,pundi-x,redfox-labs-2,meta,rubic,noia-network,celsius-degree-token,crowns,option-room,yield-optimization-platform,lgcy-network,rio-defi,mahadao,rocket-pool,nexo,saffron-finance,stabilize,balancer,band-protocol,swapfolio,loopring,perpetual-protocol,compound-governance-token,havven,dlp-duck-token,chain-games,the-graph,rootkit,trustswap,terra-virtua-kolect,omisego,wrapped-terra,bondly,dextrust,ampleforth,polkamarkets,curve-dao-token,degenerator,exnetwork-token,tether,yield,kyber-network,coti,injective-protocol,0x,superfarm,ankreth,surf-finance,renbtc,dmm-governance,hermez-network-token,rally-2,yfdai-finance,fractal,axie-infinity,enjincoin,yield-app,duckdaodime,rarible,amp-token,fsw-token,binance-usd,aave-dai-v1,aave-tusd-v1,aave-usdc-v1,aave-usdt-v1,aave-susd-v1,aave-bat-v1,aave-eth-v1,aave-link-v1,aave-knc-v1,aave-mkr-v1,aave-mana-v1,aave-zrx-v1,aave-snx-v1,aave-wbtc-v1,aave-busd-v1,aave-enj-v1,aave-ren-v1,ayfi,aave-usdt,aave-wbtc,aave-zrx,aave-bat,aave-busd,aave-dai,aave-enj,aave-knc,aave-link,aave-mana,aave-mkr,aave-ren,aave-snx,aave-susd,aave-tusd,aave-usdc,stake-dao,cope,cope,mango-market-caps,rope-token,media-network,step-finance,solanium,samoyedcoin,panda-coin,star-atlas,star-atlas-dao,soldoge,synthetify-token,moonlana,solape-token,woof-token,mercurial,lotto,bole-token,apyswap,shibaverse-token,shibaverse-token,solfarm,ardcoin,cheems,cato,ninja-protocol,boring-protocol,dexlab,grape-2,apexit-finance,black-label,orca,renbtc,renbch,rendoge,renzec,sail,aldrin,oxbull-solana,fabric,naxar,space-hamster,gu,liq-protocol,cropperfinance,solrise-finance,jet,cheesesoda-token,only1,terrausd,orbs,solberry,coin98,saber,huobi-btc,husd,hapi,larix,msol,mim,port-finance,jpyc,mango-markets,solanasail-governance-token,parrot-usd,parrot-protocol,sunny-aggregator,cyclos,lido-staked-ether,million,million,shapeshift-fox-token,ashera,balisari,solminter,tether,usd-coin,renfil,bitspawn,socean-staked-sol,agronomist,polyplay,allbridge,binance-usd,weth,tether,usd-coin,multi-collateral-dai,celo-dollar,chihuahuasol,chronologic,ftx-token,matrixetf,solblank,marinade,wrapped-conceal,graviton,dogelana,usd-coin,bitcoin,solana,ftx-token,ethereum,usd-coin,tether,dai,himalayan-cat-coin,frakt-token,tether,usd-coin,multi-collateral-dai,wrapped-bitcoin,avalanche,aurory,matrixetf,lizard-token,cave,ftx-token,terra-usd,weth,serum,terra-luna,husd,binance-usd,frax,huobi-btc,usdk,sushi,uniswap,wbnb,chainlink,pax-gold,hxro,swipe,frax-share,celsius-network-token,cream,usd-coin,wrapped-bitcoin,tether,floof,baby-samo-coin,solend,lunachow,lunachow,biconomy-exchange-token,ariadne,solana,invictus,wrapped-bitcoin,polygon,polygon,binance-usd,the-4th-pillar,genopets,safe-coin-2&vs_currencies=usd\",{\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING CG DATA!\");\n      return null;\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  //Get Prices RPC\n  const fetchLegacyPriceList = async () => {\n    const response = await fetch(\"https://price-api.sonar.watch/prices\", {\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING SW DATA!\");\n      return [];\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  const fetchTokenMap = async () => {\n    let tokens = await new TokenListProvider().resolve();\n    const tokenList = tokens.filterByClusterSlug('mainnet-beta').getList();\n\n    let tokenMap = tokenList.reduce((map, item) => {\n      map.set(item.address, item);\n      return map;\n    }, new Map());\n\n    return tokenMap;\n  }\n\n  //Get Porfolio\n  const getBalances = async () => {\n    if (!loading){\n      \n      setSuccess(false);\n      setLoading(true);\n      \n      //let [portfolio, staked, sol, priceData, tokenMap, pairsDataRaydium] = await Promise.all([fetchBalances(), fetchStakedRaydium(), fetchSOLBalance(), fetchPriceList(), fetchTokenMap(), fetchPairsRaydium()]);\n      let [portfolio, tokenMap] = await Promise.all([fetchBalances(), fetchTokenMap()]);\n      \n      // first load a skeleton of the portfolio\n      // then fetch cg\n      let [cgPriceData] = await Promise.all([fetchCoinGeckoPriceList()]);\n\n      // finally check farms (this can break so lets split)\n      let [sol, newPriceData] = await Promise.all([fetchSOLBalance(), fetchNSWPriceList()]);\n      \n      setInitNewPriceData(newPriceData);\n      setInitPortfolio(portfolio);\n      setInitCGPriceData(cgPriceData);\n      setTokenMap(tokenMap);\n      \n      // we need to now first get portfolio \n      // then load a skeleton (without positions)\n      // then load positions from fetched data from cg or other source\n      // then loa\n\n      let legacyPriceData = [];\n      //let [newPriceData] = [null];\n      \n      let other_stakes = [];\n      const tmint = '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA';\n      const grapesymbol = 'grape-2';\n      \n      const smint = 'So11111111111111111111111111111111111111112';\n      const solanasymbol = 'solana';\n\n      let grapeTokenReference = null;\n      let solTokenReference = null;\n      \n      let priceData = [];\n\n      if (!newPriceData){\n        [legacyPriceData] = await Promise.all([fetchLegacyPriceList()]);\n        \n        if (!legacyPriceData)\n          console.log(\"NO DATA\");\n      }\n      // check which data we have loaded so we can parse accordingly\n\n      if (!newPriceData){ // reverting to legacy\n        grapeTokenReference = legacyPriceData.find(grapeTokenReference => grapeTokenReference.mint === tmint);\n        grapeTokenReference = grapeTokenReference && grapeTokenReference.price;\n        solTokenReference = legacyPriceData.find(solTokenReference => solTokenReference.mint === smint);\n        solTokenReference = solTokenReference && solTokenReference.price;\n        priceData = legacyPriceData;\n      }else {\n      \n        if (newPriceData.prices.hasOwnProperty(tmint))\n          grapeTokenReference = newPriceData.prices[tmint].value;\n\n        if (newPriceData.prices.hasOwnProperty(smint))\n          solTokenReference = newPriceData.prices[smint].value;\n\n      }\n      \n      setTickerTimestamp((new Date()).toLocaleString());\n\n      let collectibles = [];\n\n      portfolio = portfolio.map((token) => {\n        let mint = token.account.data.parsed.info.mint;\n        let balance = token.account.data.parsed.info.tokenAmount.uiAmount;\n        let tmapitem = mint && tokenMap.get(mint);\n        let price = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd || 0;\n        let usd_24h_change = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd_24h_change || '';\n\n        // tokenInfo.extensions.coingeckoId\n        if (tmapitem){  \n          if (tmapitem.extensions?.coingeckoId){\n\n            //try{\n              //console.log(\"tmapitem: \"+JSON.stringify(tmapitem));\n              //console.log(\"pushing (\"+tmapitem.extensions.coingeckoId+\"): \" + JSON.stringify(cgPriceData[tmapitem.extensions.coingeckoId]?.usd));\n              //console.log(\"FOUND: \"+psymbol);\n              // IMPORTANT ADD CHECK TO GET PRICE FROM CG\n              priceData.push({\n                address: token.pubkey,\n                decimals: token.decimals,\n                mint: mint,\n                symbol: tmapitem && tmapitem.symbol || 'Unknown',\n                logoURI: tmapitem && tmapitem.logoURI || '',\n                price: price,\n                usd_24h_change: usd_24h_change,\n                updatedAt: ''\n              }); \n\n            //}catch(e){console.log(\"ERR: \"+e)}\n          }\n          \n        }\n        //var price = 0;\n        //if (priceData)\n          //price = priceData.find(price => price.mint === token.account.data.parsed.info.mint);\n        \n        // Fetch collectibles\n        try{\n            (+token.account.data.parsed.info.tokenAmount.amount >= 1) &&\n              (+token.account.data.parsed.info.tokenAmount.decimals === 0) && \n                  collectibles.push(token);    \n        } catch(e){console.log(e);}\n        \n        \n\n        return {\n          address: token.pubkey,\n          decimals: token.decimals,\n          mint: mint,\n          symbol: tmapitem && tmapitem.symbol || 'Unknown',\n          coingeckoId: tmapitem && tmapitem?.extensions?.coingeckoId || '',\n          balance: balance,\n          price: price && price,\n          value: price && price * balance,\n          tokenInfo: mint && tokenMap.get(mint),\n          usd_24h_change: usd_24h_change\n        };\n        \n      }).filter((token) => {\n        return (token.balance > 1) &&  (token.decimals !== 0) && typeof token.balance !== \"undefined\";\n      });\n      \n      if (sol){ // use sol calc for balance\n          sol = parseFloat(new TokenAmount(sol, 9).format());\n          const mint = 'So11111111111111111111111111111111111111112';\n          \n          //var price = priceData.find(price => price.mint === mint);\n          //price = price && price.price;\n          let tokenInfo = tokenMap.get(mint);\n          tokenInfo.name = \"SOL\";\n\n          let tmapitem = mint && tokenMap.get(mint);\n          let price = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd || 0;\n          let usd_24h_change = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd_24h_change || '';\n\n          portfolio.push({\n              mint: mint,\n              balance: sol,\n              price,\n              value: price * sol,\n              tokenInfo: tokenInfo,\n              usd_24h_change: usd_24h_change\n          });\n      }\n\n      portfolio = portfolio.sort(function(a, b) {\n          return b.value - a.value;\n      });\n      \n      setSuccess(true);\n      \n      setGrapeTicker({\n        grapeTokenReference\n      })\n      setSolTicker({\n        solTokenReference\n      })\n      \n      setPorfolioBalances({\n          portfolio,\n          //staked,\n          collectibles\n      });\n\n      const { isAvailable, url } = await getProfilePicture(connection, new PublicKey(session.publicKey), {resize:'256'});\n      setProfilePicutureUrl(url);\n      setHasProfilePicture(isAvailable);\n\n      //console.log(\"2. PORTFOLIO: \"+JSON.stringify(portfolio));\n      //console.log(\"2. STAKED: \"+JSON.stringify(staked));\n      //console.log(\"2. COLLECTIBLES: \"+JSON.stringify(collectibles));\n\n      setLoading(false);\n      \n    } else{\n      return (\n        <Grid item xs={12} md={8} lg={9}>\n          <Paper class=\"grape-paper-background\">\n            <Paper\n              class=\"grape-paper\"\n              sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: 240,\n              }}\n            >\n              <Box sx={{ p:1, display: 'flex', alignItems: 'center' }}>\n                <Skeleton />\n              </Box>\n            </Paper>\n          </Paper>\n        </Grid>\n      );\n    }\n  };\n\n  //Get Balances\n  let total = 0;\n  let portfolioTotal = 0; \n  let portfolioChange = 0; \n  let portfolioPercentageChange = 0; \n  let stakedTotal = 0;\n\n  const handleDeleteChange = () => {\n\n  };\n\n  if(!portfolioPositions){\n    //console.log(\"Getting balances...\");\n    if (session.publicKey)\n      getBalances();\n    return (\n      <React.Fragment>\n        <Grid item xs={12} md={8} lg={9}>\n          <Paper class=\"grape-paper-background\">\n            <Paper\n              class=\"grape-paper\"\n              sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: 240,\n              }}\n            >\n              <Box sx={{ p:1, width: \"100%\" }}>\n                <Skeleton\n                  animation=\"wave\"\n                  width=\"25%\"\n                />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 1 }} />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 0 }} />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 0 }} />\n              </Box>\n            </Paper>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4} lg={3}>\n          <Paper class=\"grape-paper-background\">\n            <Paper\n              class=\"grape-paper\"\n              sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: 240,\n              }}\n            >\n              <Box sx={{ p:1, width: \"100%\" }}>\n                <Skeleton \n                  animation=\"wave\" \n                  width=\"20%\" />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 1 }} />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 0 }} />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 0 }} />\n                </Box>\n            </Paper>\n\n          </Paper>\n        </Grid>\n      </React.Fragment>\n    );\n  }else{   \n    portfolioTotal = portfolioPositions.portfolio.reduce((acc, token) => {\n      return acc + token.value;\n    }, 0);\n\n    portfolioChange = portfolioPositions.portfolio.reduce((acc, token) => {\n      // change for the token value in %\n      // see what the change was\n      //let change = token.usd_24h_change; // \n      let change_amount = token.value * (1*token.usd_24h_change/100);// calculate change\n      \n      return acc + change_amount;\n    }, 0);\n\n    // let percentage_change = change_amount/token.value;\n    portfolioPercentageChange = portfolioChange / portfolioTotal * 100;\n\n    total = portfolioTotal;\n  }\n  \n  return (\n      <React.Fragment>\n        <Grid item xs={12} md={8} lg={9}>\n          <Paper class=\"grape-paper-background\">\n            <Box\n              class=\"grape-paper\"\n              sx={{\n                //minHeight: 240,\n              }}\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <Box class=\"grape-dashboard-component-header\" sx={{ m: 0, position: 'relative' }}>\n                  <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                    PORTFOLIO\n                  </Typography>\n                </Box>\n                <Box sx={{ m: 0, position: 'relative' }}>\n                <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ ml: 1, position: 'relative'}}>\n                  <Button size=\"small\" variant=\"text\" value=\"Refresh\" onClick={getBalances} disabled={loading}>\n                    <RefreshIcon sx={{fontSize:16}} />\n                  </Button>\n                  {loading && (\n                    <CircularProgress \n                      size={18} \n                      color=\"inherit\"\n                      sx={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        marginTop: '-8px',\n                        marginLeft: '-9px',\n                      }}/>\n                  )}\n                  </Typography>\n                      \n                </Box>\n              </Box>\n              <PortfolioTable balances={portfolioPositions.portfolio}/>\n            </Box>\n          </Paper>\n        </Grid>\n        \n        <Grid item xs={12} md={4} lg={3}>\n          <Paper class=\"grape-paper-background\">\n            <Box\n              class=\"grape-paper\"\n            >\n            \n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n              <Tabs value={value} onChange={handleTabChange} aria-label=\"basic tabs example\">\n                <Tab icon={<GrapeIcon />} aria-label=\"Grape\" {...a11yProps(0)} />\n                <Tab icon={<SolIcon />} aria-label=\"Solana\" {...a11yProps(1)} />\n              </Tabs>\n            </Box>\n            <TabPanel value={value} index={0}>\n              <Summary title=\"TICKER\" token={'grape'} subtitle={<GrapeIcon fontSize='12px' />} showtimestamp={true} tstamp={tstamp} calltoaction=\"\" hasrefresh={true} swaptoken={'grape'} portfolioPositions={portfolioPositions} tokenMap={tokenMap}>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item>\n                    $<PretifyCommaNumber number={parseFloat(grapeTicker.grapeTokenReference).toFixed(3)} />\n                  </Grid>\n                </Grid>\n              </Summary>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              <Summary title=\"TICKER\" token={'sol'} subtitle={<SolCurrencyIcon fontSize='12px' />} showtimestamp={true} tstamp={tstamp} calltoaction=\"\" hasrefresh={true}>\n                <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n                  <Grid item>\n                    $<PretifyCommaNumber number={parseFloat(solTicker.solTokenReference).toFixed(2)} />\n                  </Grid>\n                </Grid>\n              </Summary>\n            </TabPanel>\n        \n              {(+portfolioTotal > 0) && \n                <React.Fragment>\n                  <Divider sx={{mt:2}} />\n                  <Box sx={{mt:2}}>\n                    <Summary title=\"WALLET\" subtitle=\"SUMMARY\" showtimestamp={false} calltoaction=\"\" hasrefresh={false}>\n                      $<PretifyCommaNumber number={portfolioTotal.toFixed(2)} />\n                      {portfolioChange < 0 ?\n                        <>\n                          <Typography variant=\"subtitle2\" sx={{ flex: 1, color:\"#f00\", textAlign:\"center\"}}>\n                              <Tooltip title={`24h change $${portfolioChange.toFixed(2)}`}> \n                                <Chip color=\"error\" deleteIcon={<ArrowDownwardIcon />} onDelete={handleDeleteChange} label={`${portfolioPercentageChange.toFixed(2)}%`} size=\"small\" variant=\"outlined\"/>\n                              </Tooltip>\n                          </Typography>\n                        </>\n                      :\n                        <>\n                          <Typography color=\"text.secondary\" variant=\"subtitle2\" sx={{ flex: 1, textAlign:\"center\" }}>\n                            <Tooltip title={`24h change $${portfolioChange.toFixed(2)}`}>  \n                              <Chip color=\"success\" deleteIcon={<ArrowUpwardIcon />} onDelete={handleDeleteChange} label={`${portfolioPercentageChange.toFixed(2)}%`} size=\"small\" variant=\"outlined\"/>\n                            </Tooltip>\n                          </Typography>\n                        </>\n                      }\n                    </Summary>\n                    \n                  </Box>\n                  <Summary title=\"\" subtitle=\"\" showtimestamp={false} calltoaction=\"\" hasrefresh={false}>\n                      {(portfolioPositions.collectibles && portfolioPositions.collectibles.length > 0) &&\n                          <Grid item sx={{textAlign:\"center\"}}>\n                              <Button\n                                component=\"a\" href={`https://grape.art/profile?pkey=${session?.publicKey}`} target=\"_blank\"\n                                variant=\"outlined\" \n                                title=\"View Collection\"\n                                size=\"small\"\n                                >\n                                \n                                {(hasProfilePicture && profilePictureUrl) ?\n                                  <Avatar sx={{ width: 24, height: 24, mr:1 }} alt=\"Profile\" src={profilePictureUrl} />\n                                :\n                                  <AccountCircleIcon sx={{mr:1}}/>\n                                }\n                                \n                                {portfolioPositions.collectibles.length} {portfolioPositions.collectibles.length > 1 ? 'Collectibles' : 'Collectible'}\n                              </Button>\n                            \n                          </Grid>\n                        }\n                    </Summary>\n                </React.Fragment>\n              }\n                {/* (balances.staked && balances.staked.length) &&*/}\n\n              { /*(stakedTotal > 0) &&\n                <Box sx={{mt:2}}>\n                  <Summary title=\"STAKED\" subtitle=\"SUMMARY\" showtimestamp={false} calltoaction=\"\" hasrefresh={false}>{`$${+stakedTotal.toFixed(2)}`}</Summary>\n                </Box>\n              */  }\n              \n            </Box>\n          </Paper>\n        </Grid>\n        \n        <FarmsView portfolioPositions={portfolioPositions} tokenMap={tokenMap} initPortfolio={initPortfolio} initCGPriceData={initCGPriceData} initNewPriceData={initNewPriceData} />\n\n      </React.Fragment>\n  );\n};\n","import React, { createContext, useContext, useState, useEffect, useReducer } from 'react';\nimport Session from '../models/Session';\n\n//Initial state\nconst LOCAL_STORAGE_KEY = 'grape-session';\n// let grapeSession = localStorage.getItem(LOCAL_STORAGE_KEY);\n// if (grapeSession === \"undefined\") grapeSession = null;\n// let initialState = JSON.parse(grapeSession) || null;\n\n// if (initialState === \"undefined\") {\n//   initialState = null;\n// }\nconst initialState = new Session(null);\n\nconst localState = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n//Reducer\nlet reducer = (session: Session, newSession: Session) => {\n  if (newSession === null) {\n    localStorage.removeItem(LOCAL_STORAGE_KEY);\n    return initialState;\n  }\n\n  return { ...session, ...newSession };\n};\n\n//Context\ninterface SessionContext {\n  session: Session,\n  setSession: React.Dispatch<any>\n}\n\nexport const SessionContext = createContext<SessionContext>({} as SessionContext);\nexport const useSession = () => useContext(SessionContext);\n\n//Provider\nexport const SessionProvider: React.FC = ({ children }) => {\n  const [session, setSession] = useReducer(reducer, localState || initialState);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(session));\n  }, [session]);\n\n  return (\n    <SessionContext.Provider value={{ session, setSession }}>\n      {children}\n    </SessionContext.Provider>\n  )\n}","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry';\n\nimport{\n  Typography,\n  Paper,\n  Grid,\n  Box,\n  Divider,\n  Chip,\n  Tab,\n  Tabs,\n  Button,\n  Skeleton,\n  Tooltip,\n} from '@mui/material/'\n\nimport PropTypes from 'prop-types';\n\nimport { useSession } from \"../../contexts/session\";\nimport ContributeTable from './ContributeTable';\nimport { struct } from 'buffer-layout';\nimport { publicKey, u128, u64 } from '@project-serum/borsh'\nimport { TokenAmount, lt } from '../../utils/token/safe-math';\n\n//import { useTheme } from '@mui/material/styles';\nimport {PublicKey} from '@solana/web3.js';\nimport { PretifyCommaNumber } from '../../components/Tools/PretifyCommaNumber';\n\nimport { GRAPE_RPC_ENDPOINT } from '../../components/Tools/constants';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport { FarmsView } from \"../\";\n\n  const USER_STAKE_INFO_ACCOUNT_LAYOUT = struct([\n    u64('state'),\n    publicKey('poolId'),\n    publicKey('stakerOwner'),\n    u64('depositBalance'),\n    u64('rewardDebt')\n  ])\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nexport const ContributeView = () => {\n  const [initPortfolio, setInitPortfolio] = useState(null);\n  const [initCGPriceData, setInitCGPriceData] = useState(null);\n  const [initNewPriceData, setInitNewPriceData] = useState(null);\n  const [portfolioPositions, setPorfolioBalances] = useState(null);\n  const [tokenMap, setTokenMap] = useState(new Map());\n  const { session, setSession } = useSession();\n  const [grapeTicker, setGrapeTicker] = useState(null);\n  const [solTicker, setSolTicker] = useState(null);\n  const [tstamp, setTickerTimestamp] = useState(null);\n  const [value, setTabValue] = React.useState(0);\n\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [array, setArray] = useState([]);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  //const connection = new Connection(url, \"singleGossip\");\n  //const orca = getOrca(connection);\n  //const owner: Keypair = getKeyPair();\n\n  //RAYDIUM: /logos/platforms/raydium.png\n  //SOLFARM: /logos/platforms/solfarm.png\n  //ORCA: /logos/platforms/orca.png\n\n  //Get Balances RPC\n  const fetchStakedRaydium = async () => {\n    const body = {\n        method: \"getProgramAccounts\",\n        //method: \"getMultipleAccountsInfo\",\n        jsonrpc: \"2.0\",\n        params: [\n            \"9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z\",\n            //\"97q89hnoKwqcynvwXcj83YqfqUBuCm4A8f2zHeV6bfZg\", ORCA/GRAPE\n            //session.publicKey\n            //\"9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z\", // raydium stakes\n            {\"commitment\":\"confirmed\",\"filters\":[{\"memcmp\":{\"offset\":40,\"bytes\":session.publicKey}}],\"encoding\":\"base64\"}\n            //{\"connection\":\"Connection\",\"publicKeys\": [session.publicKey]}\n        ],\n        id: \"84203270-a3eb-4812-96d7-0a3c40c87a88\"\n      };\n      \n      \n      const response = await fetch(GRAPE_RPC_ENDPOINT, {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      \n      const json = await response.json();\n      let decoded = json.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new PublicKey(pubkey),\n        accountInfo: {\n          data: Buffer.from(data[0], 'base64'),\n          executable,\n          owner: new PublicKey(owner),\n          lamports\n        }}));\n\n        return decoded;\n  }\n\n  const fetchPairsSolFarm = async () => {\n    const response = await fetch(\"https://api.raydium.io/pairs\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchPairsOrca = async () => {\n    // ORCA token:\n    // orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE\n    // ORCA pool:\n    // 97q89hnoKwqcynvwXcj83YqfqUBuCm4A8f2zHeV6bfZg\n\n    /* CONSIDERING THEIR API:\n    const connection = new Connection(url, \"singleGossip\");\n    const orca = getOrca(connection);\n    \n    // Get an instance of the ETH-USDC orca pool\n    let pool = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n\n    // Get the number of ETH-USDC LP tokens in your wallet\n    let grapeUsdcLPBalance = await pool.getLPBalance(owner.publicKey);\n    // Get the total supply of ETH-USDC LP tokens\n    let grapeUsdcLPSupply = await pool.getLPSupply();\n    \n    */\n    const response = await fetch(\"https://api.orca.so/allPools\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchPairsRaydium = async () => {\n    const response = await fetch(\"https://api.raydium.io/pairs\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchAdditionalFarmPools = async () => {\n\n    // get Orca (we should function this out though)\n    const response = await fetch(\"https://api.orca.so/allPools\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchBalances = async () => {\n    const body = {\n      method: \"getTokenAccountsByOwner\",\n      jsonrpc: \"2.0\",\n      params: [\n        // Get the public key of the account you want the balance for.\n        session.publicKey,\n        { programId: \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\" },\n        { encoding: \"jsonParsed\", commitment: \"processed\" },\n      ],\n      id: \"35f0036a-3801-4485-b573-2bf29a7c77d2\",\n    };\n\n    //try{\n      const response = await fetch(GRAPE_RPC_ENDPOINT, {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      const json = await response.json();\n      const resultValues = json.result.value\n      return resultValues;\n    /*\n    } catch(e){\n      //const response = await fetch(\"https://free.rpcpool.com\", {\n      const response = await fetch(\"https://solana-api.projectserum.com/\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n      })\n      const json = await response.json();\n      const resultValues = json.result.value\n      return resultValues;\n    }*/\n  };\n\n  const fetchSOLBalance = async () => {\n    const body = {\n      method: \"getBalance\",\n      jsonrpc: \"2.0\",\n      params: [\n        // Get the public key of the account you want the balance for.\n        session.publicKey\n      ],\n      id: \"35f0036a-3801-4485-b573-2bf29a7c77d3\",\n    };\n\n    const response = await fetch(GRAPE_RPC_ENDPOINT, {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    const resultValues = json.result.value;\n    return resultValues;\n  };\n\n  //Get Prices RPC\n  const fetchNSWPriceList = async () => {\n    const response = await fetch(\"https://api.sonar.watch/latest\", {\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING CG DATA!\");\n      return null;\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  //Get Prices RPC\n  const fetchCoinGeckoPriceList = async () => {\n    const response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?include_24hr_change=true&ids=solana,kitty-solana,astrapad,buff-samo,solana-inu,wipemyass,almond,swole-doge,oogi,solex-finance,bamboo-coin,solum,solberg,sola-token,solana,usd-coin,everid,impossible-finance,investin,bitcoin,ethereum,yearn-finance,chainlink,ripple,tether,sushi,aleph,swipe,hedget,cream-2,upbots,helium,frontier-token,akropolis,hxro,uniswap,serum,ftx-token,megaserum,usd-coin,tomochain,karma-dao,lua-token,math,keep-network,swag-finance,celsius-degree-token,reserve-rights-token,1inch,the-graph,compound-coin,pax-gold,strong,bonfida,kin,maps,oxygen,brz,tether,xmark,raydium,bitsong,3x-short-eos-token,3x-long-eos-token,3x-short-bnb-token,3x-long-bnb-token,3x-long-bitcoin-sv-token,3x-short-bitcoin-sv-token,3x-short-litecoin-token,3x-long-litecoin-token,3x-long-bitcoin-token,3x-short-bitcoin-token,3x-short-bitcoin-cash-token,3x-long-bitcoin-cash-token,3x-long-ethereum-token,3x-short-ethereum-token,3x-long-altcoin-index-token,3x-short-altcoin-index-token,3x-long-shitcoin-index-token,3x-short-shitcoin-index-token,3x-long-midcap-index-token,3x-short-midcap-index-token,3x-short-chainlink-token,3x-long-chainlink-token,3x-long-xrp-token,3x-short-xrp-token,1x-long-btc-implied-volatility-token,1x-short-btc-implied-volatility,aave,serum-ecosystem-token,holy-trinity,bilira,3x-long-dogecoin-token,perpetual-protocol,weth,coin-capsule,ftx-token,true-usd,tokenlon,allianceblock,skale,unlend-finance,orion-protocol,sparkpoint,uma,smartkey,mirror-protocol,growth-defi,xdai-stake,yearn-finance,basic-attention-token,basic-attention-token,decentraland,xio,unilayer,unimex-network,1inch,armor,armor-nxm,defipulse-index,deltahub-community,kira-network,energy-web-token,cryptocurrency-top-10-tokens-index,audius,vesper-finance,keep3rv1,lead-token,uniswap,wrapped-bitcoin,union-protocol-governance-token,unisocks,idextools,hex,cream-2,yfimobi,zeroswap,wrapped-anatha,ramp,parsiq,smooth-love-potion,the-sandbox,concentrated-voting-power,republic-protocol,sora,funfair,pickle-finance,pax-gold,quant-network,oraichain-token,truefi,mcdex,nucypher,razor-network,chainlink,unfederalreserve,nusd,hegic,xfinance,dextf,iexec-rlc,cvault-finance,cyberfi,wise-token11,gnosis,poolz-finance,dai,sushi,fyooz,quiverx,unitrade,bird-money,axion,bridge-mutual,dynamite,bitberry-token,waxe,matic-network,robonomics-network,aave,ethlend,polkastarter,unibright,dia-data,frax,keep-network,reserve-rights-token,88mph,paid-network,swipe,request-network,whale,kleros,krown,apy-finance,ocean-protocol,shopping-io,binance-wrapped-btc,unistake,maker,harvest-finance,usd-coin,aragon,pundi-x,redfox-labs-2,meta,rubic,noia-network,celsius-degree-token,crowns,option-room,yield-optimization-platform,lgcy-network,rio-defi,mahadao,rocket-pool,nexo,saffron-finance,stabilize,balancer,band-protocol,swapfolio,loopring,perpetual-protocol,compound-governance-token,havven,dlp-duck-token,chain-games,the-graph,rootkit,trustswap,terra-virtua-kolect,omisego,wrapped-terra,bondly,dextrust,ampleforth,polkamarkets,curve-dao-token,degenerator,exnetwork-token,tether,yield,kyber-network,coti,injective-protocol,0x,superfarm,ankreth,surf-finance,renbtc,dmm-governance,hermez-network-token,rally-2,yfdai-finance,fractal,axie-infinity,enjincoin,yield-app,duckdaodime,rarible,amp-token,fsw-token,binance-usd,aave-dai-v1,aave-tusd-v1,aave-usdc-v1,aave-usdt-v1,aave-susd-v1,aave-bat-v1,aave-eth-v1,aave-link-v1,aave-knc-v1,aave-mkr-v1,aave-mana-v1,aave-zrx-v1,aave-snx-v1,aave-wbtc-v1,aave-busd-v1,aave-enj-v1,aave-ren-v1,ayfi,aave-usdt,aave-wbtc,aave-zrx,aave-bat,aave-busd,aave-dai,aave-enj,aave-knc,aave-link,aave-mana,aave-mkr,aave-ren,aave-snx,aave-susd,aave-tusd,aave-usdc,stake-dao,cope,cope,mango-market-caps,rope-token,media-network,step-finance,solanium,samoyedcoin,panda-coin,star-atlas,star-atlas-dao,soldoge,synthetify-token,moonlana,solape-token,woof-token,mercurial,lotto,bole-token,apyswap,shibaverse-token,shibaverse-token,solfarm,ardcoin,cheems,cato,ninja-protocol,boring-protocol,dexlab,grape-2,apexit-finance,black-label,orca,renbtc,renbch,rendoge,renzec,sail,aldrin,oxbull-solana,fabric,naxar,space-hamster,gu,liq-protocol,cropperfinance,solrise-finance,jet,cheesesoda-token,only1,terrausd,orbs,solberry,coin98,saber,huobi-btc,husd,hapi,larix,msol,mim,port-finance,jpyc,mango-markets,solanasail-governance-token,parrot-usd,parrot-protocol,sunny-aggregator,cyclos,lido-staked-ether,million,million,shapeshift-fox-token,ashera,balisari,solminter,tether,usd-coin,renfil,bitspawn,socean-staked-sol,agronomist,polyplay,allbridge,binance-usd,weth,tether,usd-coin,multi-collateral-dai,celo-dollar,chihuahuasol,chronologic,ftx-token,matrixetf,solblank,marinade,wrapped-conceal,graviton,dogelana,usd-coin,bitcoin,solana,ftx-token,ethereum,usd-coin,tether,dai,himalayan-cat-coin,frakt-token,tether,usd-coin,multi-collateral-dai,wrapped-bitcoin,avalanche,aurory,matrixetf,lizard-token,cave,ftx-token,terra-usd,weth,serum,terra-luna,husd,binance-usd,frax,huobi-btc,usdk,sushi,uniswap,wbnb,chainlink,pax-gold,hxro,swipe,frax-share,celsius-network-token,cream,usd-coin,wrapped-bitcoin,tether,floof,baby-samo-coin,solend,lunachow,lunachow,biconomy-exchange-token,ariadne,solana,invictus,wrapped-bitcoin,polygon,polygon,binance-usd,the-4th-pillar,genopets,safe-coin-2&vs_currencies=usd\",{\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING CG DATA!\");\n      return null;\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  //Get Prices RPC\n  const fetchLegacyPriceList = async () => {\n    const response = await fetch(\"https://price-api.sonar.watch/prices\", {\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING SW DATA!\");\n      return [];\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  const fetchTokenMap = async () => {\n    let tokens = await new TokenListProvider().resolve();\n    const tokenList = tokens.filterByClusterSlug('mainnet-beta').getList();\n\n    let tokenMap = tokenList.reduce((map, item) => {\n      map.set(item.address, item);\n      return map;\n    }, new Map());\n\n    return tokenMap;\n  }\n\n  //Get Porfolio\n  const getBalances = async () => {\n    if (!loading){\n      \n      setSuccess(false);\n      setLoading(true);\n      \n      //let [portfolio, staked, sol, priceData, tokenMap, pairsDataRaydium] = await Promise.all([fetchBalances(), fetchStakedRaydium(), fetchSOLBalance(), fetchPriceList(), fetchTokenMap(), fetchPairsRaydium()]);\n      let [portfolio, tokenMap] = await Promise.all([fetchBalances(), fetchTokenMap()]);\n      \n      // first load a skeleton of the portfolio\n      // then fetch cg\n      let [cgPriceData] = await Promise.all([fetchCoinGeckoPriceList()]);\n\n      // finally check farms (this can break so lets split)\n      let [sol, newPriceData] = await Promise.all([fetchSOLBalance(), fetchNSWPriceList()]);\n      \n      setInitNewPriceData(newPriceData);\n      setInitPortfolio(portfolio);\n      setInitCGPriceData(cgPriceData);\n      setTokenMap(tokenMap);\n      \n      // we need to now first get portfolio \n      // then load a skeleton (without positions)\n      // then load positions from fetched data from cg or other source\n      // then loa\n\n      let legacyPriceData = [];\n      //let [newPriceData] = [null];\n      \n      let other_stakes = [];\n      const tmint = '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA';\n      const grapesymbol = 'grape-2';\n      \n      const smint = 'So11111111111111111111111111111111111111112';\n      const solanasymbol = 'solana';\n\n      let grapeTokenReference = null;\n      let solTokenReference = null;\n      \n      let priceData = [];\n\n      if (!newPriceData){\n        [legacyPriceData] = await Promise.all([fetchLegacyPriceList()]);\n        //[newPriceData] = await Promise.all([fetchCoinGeckoPriceList()]);\n        \n        //const newPriceDataResponse = await newPriceData;\n        //   console.log(\"DATA: \"+JSON.stringify(newPriceData.prices));\n        \n        if (!legacyPriceData)\n          console.log(\"NO DATA\");\n      }\n      // check which data we have loaded so we can parse accordingly\n\n      if (!newPriceData){ // reverting to legacy\n        grapeTokenReference = legacyPriceData.find(grapeTokenReference => grapeTokenReference.mint === tmint);\n        grapeTokenReference = grapeTokenReference && grapeTokenReference.price;\n        solTokenReference = legacyPriceData.find(solTokenReference => solTokenReference.mint === smint);\n        solTokenReference = solTokenReference && solTokenReference.price;\n        priceData = legacyPriceData;\n      }else {\n      \n        if (newPriceData.prices.hasOwnProperty(tmint))\n          grapeTokenReference = newPriceData.prices[tmint].value;\n\n        if (newPriceData.prices.hasOwnProperty(smint))\n          solTokenReference = newPriceData.prices[smint].value;\n\n      }\n      \n      setTickerTimestamp((new Date()).toLocaleString());\n\n      let collectibles = [];\n\n      // TULIP POOL: \n      // ?? fhA1P91Hk3K689GJcvP9pEAjPC2RmeLdyPZzqSyBwsh balance = 1 ??\n      // ?? EorFh8siFyLF1QTZ7cCXQaPGqyo7eb4SAgKtRH8Jcxjd??\n      // ?? A8ZYmnZ1vwxUa4wpJVUaJgegsuTEz5TKy5CiJXffvmpt ??\n\n      //console.log(\"Portfolio HERE: \"+JSON.stringify(portfolio));\n      \n      portfolio = portfolio.map((token) => {\n        let mint = token.account.data.parsed.info.mint;\n        let balance = token.account.data.parsed.info.tokenAmount.uiAmount;\n        let tmapitem = mint && tokenMap.get(mint);\n        let price = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd || 0;\n        let usd_24h_change = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd_24h_change || '';\n\n        // tokenInfo.extensions.coingeckoId\n\n        if (tmapitem){  \n          if (tmapitem.extensions?.coingeckoId){\n\n            //try{\n              //console.log(\"tmapitem: \"+JSON.stringify(tmapitem));\n              //console.log(\"pushing (\"+tmapitem.extensions.coingeckoId+\"): \" + JSON.stringify(cgPriceData[tmapitem.extensions.coingeckoId]?.usd));\n              //console.log(\"FOUND: \"+psymbol);\n              // IMPORTANT ADD CHECK TO GET PRICE FROM CG\n              priceData.push({\n                mint: mint,\n                symbol: tmapitem && tmapitem.symbol || 'Unknown',\n                logoURI: tmapitem && tmapitem.logoURI || '',\n                price: price,\n                usd_24h_change: usd_24h_change,\n                updatedAt: ''\n              }); \n\n            //}catch(e){console.log(\"ERR: \"+e)}\n          }\n          \n        }\n        //var price = 0;\n        //if (priceData)\n          //price = priceData.find(price => price.mint === token.account.data.parsed.info.mint);\n        \n        // Fetch collectibles\n        try{\n            (+token.account.data.parsed.info.tokenAmount.amount == 1) &&\n              (+token.account.data.parsed.info.tokenAmount.decimals == 0) && \n                  collectibles.push(token);    \n        } catch(e){console.log(e);}\n        \n\n        return {\n          mint: mint,\n          symbol: tmapitem && tmapitem.symbol || 'Unknown',\n          coingeckoId: tmapitem && tmapitem?.extensions?.coingeckoId || '',\n          balance: balance,\n          price: price && price,\n          value: price && price * balance,\n          tokenInfo: mint && tokenMap.get(mint),\n          usd_24h_change: usd_24h_change\n        };\n        \n      }).filter((token) => {\n        return (token.balance > 0) && (token.price > 0) && typeof token.balance !== \"undefined\";\n      });\n      \n      if (sol){ // use sol calc for balance\n          sol = parseFloat(new TokenAmount(sol, 9).format());\n          const mint = 'So11111111111111111111111111111111111111112';\n          \n          //var price = priceData.find(price => price.mint === mint);\n          //price = price && price.price;\n          let tokenInfo = tokenMap.get(mint);\n          tokenInfo.name = \"SOL\";\n\n          let tmapitem = mint && tokenMap.get(mint);\n          let price = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd || 0;\n          let usd_24h_change = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd_24h_change || '';\n\n          portfolio.push({\n              mint: mint,\n              balance: sol,\n              price,\n              value: price * sol,\n              tokenInfo: tokenInfo,\n              usd_24h_change: usd_24h_change\n          });\n      }\n\n      portfolio = portfolio.sort(function(a, b) {\n          return b.value - a.value;\n      });\n\n      \n      setSuccess(true);\n      \n      setGrapeTicker({\n        grapeTokenReference\n      })\n      setSolTicker({\n        solTokenReference\n      })\n      \n      setPorfolioBalances({\n          portfolio,\n          //staked,\n          collectibles\n      });\n      \n      //console.log(\"2. PORTFOLIO: \"+JSON.stringify(portfolio));\n      //console.log(\"2. STAKED: \"+JSON.stringify(staked));\n      //console.log(\"2. COLLECTIBLES: \"+JSON.stringify(collectibles));\n\n      setLoading(false);\n      \n    } else{\n      return (\n        <Grid item xs={12} md={8} lg={9}>\n          <Paper class=\"grape-paper-background\">\n            <Paper\n              class=\"grape-paper\"\n              sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: 240,\n              }}\n            >\n              <Box sx={{ p:1, display: 'flex', alignItems: 'center' }}>\n                <Skeleton />\n              </Box>\n            </Paper>\n          </Paper>\n        </Grid>\n      );\n    }\n  };\n\n  //Get Balances\n  let total = 0;\n  let portfolioTotal = 0; \n  let portfolioChange = 0; \n  let portfolioPercentageChange = 0; \n  let stakedTotal = 0;\n\n  const handleDeleteChange = () => {\n\n  };\n\n  if(!portfolioPositions){\n    //console.log(\"Getting balances...\");\n    if (session.publicKey)\n      getBalances();\n    return (\n      <React.Fragment>\n        <Grid item xs={12} md={12} lg={12}>\n          <Paper class=\"grape-paper-background\">\n            <Paper\n              class=\"grape-paper\"\n              sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: 240,\n              }}\n            >\n              <Box sx={{ p:1, width: \"100%\" }}>\n                <Skeleton\n                  animation=\"wave\"\n                  width=\"25%\"\n                />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 1 }} />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 0 }} />\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 0 }} />\n              </Box>\n            </Paper>\n          </Paper>\n        </Grid>\n      </React.Fragment>\n    );\n  }else{   \n    portfolioTotal = portfolioPositions.portfolio.reduce((acc, token) => {\n      return acc + token.value;\n    }, 0);\n\n    portfolioChange = portfolioPositions.portfolio.reduce((acc, token) => {\n      // change for the token value in %\n      // see what the change was\n      //let change = token.usd_24h_change; // \n      let change_amount = token.value * (1*token.usd_24h_change/100);// calculate change\n      \n      return acc + change_amount;\n    }, 0);\n\n    // let percentage_change = change_amount/token.value;\n    portfolioPercentageChange = portfolioChange / portfolioTotal * 100;\n\n    total = portfolioTotal;\n  }\n  \n  return (\n      <React.Fragment>\n        <Grid item xs={12} md={12} lg={12}>\n          <Paper class=\"grape-paper-background\">\n            <Box\n              class=\"grape-paper\"\n              sx={{\n                //minHeight: 240,\n              }}\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <Box class=\"grape-dashboard-component-header\" sx={{ m: 0, position: 'relative' }}>\n                  <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                    HOLDINGS\n                  </Typography>\n                </Box>\n                <Box sx={{ m: 0, position: 'relative' }}>\n                <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ ml: 1, position: 'relative'}}>\n                  <Button size=\"small\" variant=\"text\" value=\"Refresh\" onClick={getBalances} disabled={loading}>\n                    <RefreshIcon sx={{fontSize:16}} />\n                  </Button>\n                  {loading && (\n                    <CircularProgress \n                      size={18} \n                      color=\"inherit\"\n                      sx={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        marginTop: '-8px',\n                        marginLeft: '-9px',\n                      }}/>\n                  )}\n                  </Typography>\n                      \n                </Box>\n              </Box>\n              <ContributeTable balances={portfolioPositions.portfolio}/>\n            </Box>\n          </Paper>\n        </Grid>\n        \n      </React.Fragment>\n  );\n};\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { TokenListProvider, TokenInfo } from '@solana/spl-token-registry';\n\nimport{\n  Typography,\n  Paper,\n  Grid,\n  Box,\n  Divider,\n  Chip,\n  Tab,\n  Tabs,\n  Button,\n  Skeleton,\n  Tooltip,\n  Badge,\n} from '@mui/material/'\n\nimport PropTypes from 'prop-types';\n\nimport { useSession } from \"../../contexts/session\";\nimport Summary from '../Summary/Summary';\nimport TwitterFeedComponent from '../Feed/TwitterFeed';\nimport FarmsTable from './FarmsTable';\nimport { nu64, struct, u8, blob } from 'buffer-layout';\nimport { publicKey, u128, u64 } from '@project-serum/borsh'\nimport { TokenAmount, lt } from '../../utils/token/safe-math';\nimport { getFarmByPoolId } from '../../utils/token/farms';\nimport BigNumber from 'bignumber.js'\n\nimport { GRAPE_RPC_ENDPOINT } from '../../components/Tools/constants';\n//import { useTheme } from '@mui/material/styles';\nimport { Connection, Keypair } from \"@solana/web3.js\";\nimport { getOrca, OrcaPoolConfig, OrcaU64 } from \"@orca-so/sdk\";\nimport {PublicKey} from '@solana/web3.js'\nimport { PretifyCommaNumber } from '../../components/Tools/PretifyCommaNumber';\n\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ImageIcon from '@mui/icons-material/Image';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport GrapeIcon from '../../components/StaticIcons/GrapeIcon';\nimport SolIcon from '../../components/StaticIcons/SolIcon';\nimport { dark } from \"@mui/material/styles/createPalette\";\nimport { lookupService } from \"dns\";\n\n  const USER_STAKE_INFO_ACCOUNT_LAYOUT = struct([\n    u64('state'),\n    publicKey('poolId'),\n    publicKey('stakerOwner'),\n    u64('depositBalance'),\n    u64('rewardDebt')\n  ])\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n  };\n  \n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nexport const FarmsView = (props) => {\n  const [initPortfolio, setInitPortfolio] = useState(props.initPortfolio);\n  const [initCGPriceData, setInitCGPriceData] = useState(props.initCGPriceData);\n  const [initNewPriceData, setInitNewPriceData] = useState(props.initNewPriceData);\n  \n  const [portfolioPositions, setPorfolioBalances] = useState(props.porftolioPositions);\n  const [initTokenMap, setInitTokenMap] = useState(props.tokenMap);\n  const { session, setSession } = useSession();\n  const [loading, setLoading] = React.useState(false);\n  \n  //const connection = new Connection(url, \"singleGossip\");\n  //const orca = getOrca(connection);\n  //const owner: Keypair = getKeyPair();\n\n  //RAYDIUM: /logos/platforms/raydium.png\n  //SOLFARM: /logos/platforms/solfarm.png\n  //ORCA: /logos/platforms/orca.png\n\n  //Get Balances RPC\n  const fetchStakedRaydium = async () => {\n    const body = {\n        method: \"getProgramAccounts\",\n        //method: \"getMultipleAccountsInfo\",\n        jsonrpc: \"2.0\",\n        params: [\n            \"9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z\",\n            //\"97q89hnoKwqcynvwXcj83YqfqUBuCm4A8f2zHeV6bfZg\", ORCA/GRAPE\n            //session.publicKey\n            //\"9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z\", // raydium stakes\n            {\"commitment\":\"confirmed\",\"filters\":[{\"memcmp\":{\"offset\":40,\"bytes\":session.publicKey}}],\"encoding\":\"base64\"}\n            //{\"connection\":\"Connection\",\"publicKeys\": [session.publicKey]}\n        ],\n        id: \"84203270-a3eb-4812-96d7-0a3c40c87a88\"\n      };\n      \n      //const response = await fetch(\"https://solana-api.projectserum.com/\", {\n      const response = await fetch(GRAPE_RPC_ENDPOINT, {\n          method: \"POST\",\n        body: JSON.stringify(body),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      \n      const json = await response.json();\n      let decoded = json.result.map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\n        publicKey: new PublicKey(pubkey),\n        accountInfo: {\n          data: Buffer.from(data[0], 'base64'),\n          executable,\n          owner: new PublicKey(owner),\n          lamports\n        }}));\n\n        return decoded;\n  }\n\n  const fetchPairsSolFarm = async () => {\n    const response = await fetch(\"https://api.raydium.io/pairs\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchPairsOrca = async () => {\n    // ORCA token:\n    // orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE\n    // ORCA pool:\n    // 97q89hnoKwqcynvwXcj83YqfqUBuCm4A8f2zHeV6bfZg\n\n    /* CONSIDERING THEIR API:\n    const connection = new Connection(url, \"singleGossip\");\n    const orca = getOrca(connection);\n    \n    // Get an instance of the ETH-USDC orca pool\n    let pool = orca.getPool(OrcaPoolConfig.GRAPE_USDC);\n\n    // Get the number of ETH-USDC LP tokens in your wallet\n    let grapeUsdcLPBalance = await pool.getLPBalance(owner.publicKey);\n    // Get the total supply of ETH-USDC LP tokens\n    let grapeUsdcLPSupply = await pool.getLPSupply();\n    \n    */\n    const response = await fetch(\"https://api.orca.so/allPools\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchPairsRaydium = async () => {\n    const response = await fetch(\"https://api.raydium.io/pairs\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchAdditionalFarmPools = async () => {\n\n    // get Orca (we should function this out though)\n    const response = await fetch(\"https://api.orca.so/allPools\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    return json;\n  }\n\n  const fetchBalances = async () => {\n    const body = {\n      method: \"getTokenAccountsByOwner\",\n      jsonrpc: \"2.0\",\n      params: [\n        // Get the public key of the account you want the balance for.\n        session.publicKey,\n        { programId: \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\" },\n        { encoding: \"jsonParsed\", commitment: \"processed\" },\n      ],\n      id: \"35f0036a-3801-4485-b573-2bf29a7c77d2\",\n    };\n\n    const response = await fetch(GRAPE_RPC_ENDPOINT, {\n    //const response = await fetch(\"https://solana-api.projectserum.com/\", {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    const resultValues = json.result.value\n    return resultValues;\n  };\n\n  const fetchSOLBalance = async () => {\n    const body = {\n      method: \"getBalance\",\n      jsonrpc: \"2.0\",\n      params: [\n        // Get the public key of the account you want the balance for.\n        session.publicKey\n      ],\n      id: \"35f0036a-3801-4485-b573-2bf29a7c77d3\",\n    };\n\n    const response = await fetch(GRAPE_RPC_ENDPOINT, {\n    //const response = await fetch(\"https://solana-api.projectserum.com/\", {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n\n    const json = await response.json();\n    const resultValues = json.result.value;\n    return resultValues;\n  };\n\n  //Get Prices RPC\n  const fetchNSWPriceList = async () => {\n    const response = await fetch(\"https://api.sonar.watch/latest\", {\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING CG DATA!\");\n      return null;\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  //Get Prices RPC\n  const fetchCoinGeckoPriceList = async () => {\n    const response = await fetch(\"https://api.coingecko.com/api/v3/simple/price?include_24hr_change=true&ids=solana,kitty-solana,astrapad,buff-samo,solana-inu,wipemyass,almond,swole-doge,oogi,solex-finance,bamboo-coin,solum,solberg,sola-token,solana,usd-coin,everid,impossible-finance,investin,bitcoin,ethereum,yearn-finance,chainlink,ripple,tether,sushi,aleph,swipe,hedget,cream-2,upbots,helium,frontier-token,akropolis,hxro,uniswap,serum,ftx-token,megaserum,usd-coin,tomochain,karma-dao,lua-token,math,keep-network,swag-finance,celsius-degree-token,reserve-rights-token,1inch,the-graph,compound-coin,pax-gold,strong,bonfida,kin,maps,oxygen,brz,tether,xmark,raydium,bitsong,3x-short-eos-token,3x-long-eos-token,3x-short-bnb-token,3x-long-bnb-token,3x-long-bitcoin-sv-token,3x-short-bitcoin-sv-token,3x-short-litecoin-token,3x-long-litecoin-token,3x-long-bitcoin-token,3x-short-bitcoin-token,3x-short-bitcoin-cash-token,3x-long-bitcoin-cash-token,3x-long-ethereum-token,3x-short-ethereum-token,3x-long-altcoin-index-token,3x-short-altcoin-index-token,3x-long-shitcoin-index-token,3x-short-shitcoin-index-token,3x-long-midcap-index-token,3x-short-midcap-index-token,3x-short-chainlink-token,3x-long-chainlink-token,3x-long-xrp-token,3x-short-xrp-token,1x-long-btc-implied-volatility-token,1x-short-btc-implied-volatility,aave,serum-ecosystem-token,holy-trinity,bilira,3x-long-dogecoin-token,perpetual-protocol,weth,coin-capsule,ftx-token,true-usd,tokenlon,allianceblock,skale,unlend-finance,orion-protocol,sparkpoint,uma,smartkey,mirror-protocol,growth-defi,xdai-stake,yearn-finance,basic-attention-token,basic-attention-token,decentraland,xio,unilayer,unimex-network,1inch,armor,armor-nxm,defipulse-index,deltahub-community,kira-network,energy-web-token,cryptocurrency-top-10-tokens-index,audius,vesper-finance,keep3rv1,lead-token,uniswap,wrapped-bitcoin,union-protocol-governance-token,unisocks,idextools,hex,cream-2,yfimobi,zeroswap,wrapped-anatha,ramp,parsiq,smooth-love-potion,the-sandbox,concentrated-voting-power,republic-protocol,sora,funfair,pickle-finance,pax-gold,quant-network,oraichain-token,truefi,mcdex,nucypher,razor-network,chainlink,unfederalreserve,nusd,hegic,xfinance,dextf,iexec-rlc,cvault-finance,cyberfi,wise-token11,gnosis,poolz-finance,dai,sushi,fyooz,quiverx,unitrade,bird-money,axion,bridge-mutual,dynamite,bitberry-token,waxe,matic-network,robonomics-network,aave,ethlend,polkastarter,unibright,dia-data,frax,keep-network,reserve-rights-token,88mph,paid-network,swipe,request-network,whale,kleros,krown,apy-finance,ocean-protocol,shopping-io,binance-wrapped-btc,unistake,maker,harvest-finance,usd-coin,aragon,pundi-x,redfox-labs-2,meta,rubic,noia-network,celsius-degree-token,crowns,option-room,yield-optimization-platform,lgcy-network,rio-defi,mahadao,rocket-pool,nexo,saffron-finance,stabilize,balancer,band-protocol,swapfolio,loopring,perpetual-protocol,compound-governance-token,havven,dlp-duck-token,chain-games,the-graph,rootkit,trustswap,terra-virtua-kolect,omisego,wrapped-terra,bondly,dextrust,ampleforth,polkamarkets,curve-dao-token,degenerator,exnetwork-token,tether,yield,kyber-network,coti,injective-protocol,0x,superfarm,ankreth,surf-finance,renbtc,dmm-governance,hermez-network-token,rally-2,yfdai-finance,fractal,axie-infinity,enjincoin,yield-app,duckdaodime,rarible,amp-token,fsw-token,binance-usd,aave-dai-v1,aave-tusd-v1,aave-usdc-v1,aave-usdt-v1,aave-susd-v1,aave-bat-v1,aave-eth-v1,aave-link-v1,aave-knc-v1,aave-mkr-v1,aave-mana-v1,aave-zrx-v1,aave-snx-v1,aave-wbtc-v1,aave-busd-v1,aave-enj-v1,aave-ren-v1,ayfi,aave-usdt,aave-wbtc,aave-zrx,aave-bat,aave-busd,aave-dai,aave-enj,aave-knc,aave-link,aave-mana,aave-mkr,aave-ren,aave-snx,aave-susd,aave-tusd,aave-usdc,stake-dao,cope,cope,mango-market-caps,rope-token,media-network,step-finance,solanium,samoyedcoin,panda-coin,star-atlas,star-atlas-dao,soldoge,synthetify-token,moonlana,solape-token,woof-token,mercurial,lotto,bole-token,apyswap,shibaverse-token,shibaverse-token,solfarm,ardcoin,cheems,cato,ninja-protocol,boring-protocol,dexlab,grape-2,apexit-finance,black-label,orca,renbtc,renbch,rendoge,renzec,sail,aldrin,oxbull-solana,fabric,naxar,space-hamster,gu,liq-protocol,cropperfinance,solrise-finance,jet,cheesesoda-token,only1,terrausd,orbs,solberry,coin98,saber,huobi-btc,husd,hapi,larix,msol,mim,port-finance,jpyc,mango-markets,solanasail-governance-token,parrot-usd,parrot-protocol,sunny-aggregator,cyclos,lido-staked-ether,million,million,shapeshift-fox-token,ashera,balisari,solminter,tether,usd-coin,renfil,bitspawn,socean-staked-sol,agronomist,polyplay,allbridge,binance-usd,weth,tether,usd-coin,multi-collateral-dai,celo-dollar,chihuahuasol,chronologic,ftx-token,matrixetf,solblank,marinade,wrapped-conceal,graviton,dogelana,usd-coin,bitcoin,solana,ftx-token,ethereum,usd-coin,tether,dai,himalayan-cat-coin,frakt-token,tether,usd-coin,multi-collateral-dai,wrapped-bitcoin,avalanche,aurory,matrixetf,lizard-token,cave,ftx-token,terra-usd,weth,serum,terra-luna,husd,binance-usd,frax,huobi-btc,usdk,sushi,uniswap,wbnb,chainlink,pax-gold,hxro,swipe,frax-share,celsius-network-token,cream,usd-coin,wrapped-bitcoin,tether,floof,baby-samo-coin,solend,lunachow,lunachow,biconomy-exchange-token,ariadne,solana,invictus,wrapped-bitcoin,polygon,polygon,binance-usd,the-4th-pillar,genopets,safe-coin-2&vs_currencies=usd\",{\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING CG DATA!\");\n      return null;\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  //Get Prices RPC\n  const fetchLegacyPriceList = async () => {\n    const response = await fetch(\"https://price-api.sonar.watch/prices\", {\n      method: \"GET\",\n      //body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    }).catch((error)=>{\n      console.log(\"ERROR GETTING SW DATA!\");\n      return [];\n    });\n    \n    try{\n      const json = await response.json();\n      return json;\n    }catch(e){return null;}\n  }\n\n  const fetchTokenMap = async () => {\n    let tokens = await new TokenListProvider().resolve();\n    const tokenList = tokens.filterByClusterSlug('mainnet-beta').getList();\n\n    let tokenMap = tokenList.reduce((map, item) => {\n      map.set(item.address, item);\n      return map;\n    }, new Map());\n\n    return tokenMap;\n  }\n\n  //Get Porfolio\n  const getBalances = async () => {\n    if (!loading){\n      \n      setLoading(true);\n      \n      let portfolio = initPortfolio;\n      let cgPriceData = initCGPriceData; \n      let newPriceData = initNewPriceData;\n      let tokenMap = initTokenMap;\n      let [staked, sol, additionalFarmPools, pairsDataRaydium] = await Promise.all([fetchStakedRaydium(), fetchSOLBalance(), fetchAdditionalFarmPools(), fetchPairsRaydium()]);\n      \n      // we need to now first get portfolio \n      // then load a skeleton (without positions)\n      // then load positions from fetched data from cg or other source\n\n      let legacyPriceData = [];\n      //let [newPriceData] = [null];\n      \n      let other_stakes = [];\n      \n      let priceData = [];\n\n      if (!newPriceData){\n        [legacyPriceData] = await Promise.all([fetchLegacyPriceList()]);\n        //[newPriceData] = await Promise.all([fetchCoinGeckoPriceList()]);\n        \n        //const newPriceDataResponse = await newPriceData;\n        //   console.log(\"DATA: \"+JSON.stringify(newPriceData.prices));\n        \n        if (!legacyPriceData)\n          console.log(\"NO DATA\");\n      }\n      // check which data we have loaded so we can parse accordingly\n      // TULIP POOL: \n      // ?? fhA1P91Hk3K689GJcvP9pEAjPC2RmeLdyPZzqSyBwsh balance = 1 ??\n      // ?? EorFh8siFyLF1QTZ7cCXQaPGqyo7eb4SAgKtRH8Jcxjd??\n      // ?? A8ZYmnZ1vwxUa4wpJVUaJgegsuTEz5TKy5CiJXffvmpt ??\n\n      //console.log(\"Portfolio HERE: \"+JSON.stringify(portfolio));\n      \n      portfolio = portfolio.map((token) => {\n        let mint = token.account.data.parsed.info.mint;\n        let balance = token.account.data.parsed.info.tokenAmount.uiAmount;\n        let tmapitem = mint && tokenMap.get(mint);\n        let price = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd || 0;\n        let usd_24h_change = (tmapitem && tmapitem.extensions?.coingeckoId) && cgPriceData[tmapitem.extensions.coingeckoId]?.usd_24h_change || '';\n\n        // tokenInfo.extensions.coingeckoId\n\n        if (tmapitem){  \n          if (tmapitem.extensions?.coingeckoId){\n\n            //try{\n              //console.log(\"tmapitem: \"+JSON.stringify(tmapitem));\n              //console.log(\"pushing (\"+tmapitem.extensions.coingeckoId+\"): \" + JSON.stringify(cgPriceData[tmapitem.extensions.coingeckoId]?.usd));\n              //console.log(\"FOUND: \"+psymbol);\n              // IMPORTANT ADD CHECK TO GET PRICE FROM CG\n              priceData.push({\n                mint: mint,\n                symbol: tmapitem && tmapitem.symbol || 'Unknown',\n                logoURI: tmapitem && tmapitem.logoURI || '',\n                price: price,\n                usd_24h_change: usd_24h_change,\n                updatedAt: ''\n              }); \n\n            //}catch(e){console.log(\"ERR: \"+e)}\n          }\n          \n        }\n        \n        if ((balance > 0)&&\n            (+token.account.data.parsed.info.tokenAmount.decimals != 0)){\n\n          Object.keys(newPriceData.farms).forEach(function(key) {\n            if (newPriceData.farms[key].additional?.farmTokenMint){ // this is exclusively for Orca:\n              if (newPriceData.farms[key].additional?.farmTokenMint == token.account.data.parsed.info.mint){ \n                const farmPlatform = \"Orca Aquafarm\";//newPriceData.farms[key].platform;\n                const farmPlatformLogo = 'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/97q89hnoKwqcynvwXcj83YqfqUBuCm4A8f2zHeV6bfZg/logo.svg';\n                \n                // get assets\n                let assets = [];\n                \n                newPriceData.farms[key].lp.assets.map((asset) => {\n                  let atmapitem = asset.mint && tokenMap.get(asset.mint);\n                  assets.push({\n                    name: atmapitem && atmapitem.symbol || 'Unknown',//newPriceData.tokens[asset.mint].symbol,\n                    logo: atmapitem && atmapitem.logoURI || '', //newPriceData.tokens[asset.mint].logoURI\n                  })\n                });\n                \n                //console.log(\"Found: \"+JSON.stringify(newPriceData.farms[key]));\n                other_stakes.push({\n                  balance: balance,\n                  pendingReward: 0,\n                  tokenInfo: null,//mint && tokenMap.get(mint),\n                  lpprice: 0,\n                  apr: newPriceData.farms[key]?.apr || '',\n                  value: balance*(+newPriceData.farms[key]?.lp?.price || 0),\n                  farmInfo: assets,\n                  farmName: farmPlatform,\n                  farmPoolId: token.account.data.parsed.info.mint,\n                  stakedInfo: null,\n                  farmLogoURI: farmPlatformLogo,\n                  farmPendingReward: 0\n                });\n                  \n                \n              }\n            } else if (newPriceData.farms[key].lp?.mint){ // this is exclusively for SolFarm:\n              \n              /*\n              if (newPriceData.farms[key].platform == \"solfarm\"){\n                if (newPriceData.farms[key].mint == token.account.data.parsed.info.mint){ \n                  console.log(\"Platform: \"+newPriceData.farms[key]?.platform);\n                  console.log(\"Mint: \"+token.account.data.parsed.info.mint);\n                }\n              }\n              */\n              \n              if (newPriceData.farms[key].lp?.mint == token.account.data.parsed.info.mint){ \n                \n                \n\n                if (newPriceData.farms[key]?.platform == \"raydium\"){\n                } else if (newPriceData.farms[key].platform == \"solfarm\"){\n\n                  console.log(\"Solfarm::: \"+JSON.stringify(newPriceData.farms[key]));\n                  \n                  const farmPlatform = \"Tulip/solFarm\";//newPriceData.farms[key].platform;\n                  const farmPlatformLogo = 'https://tulip.garden/static/media/tulip.be0a265d.svg';\n\n                  // get assets\n                  let assets = [];\n                  newPriceData.farms[key].lp.assets.map((asset) => {\n                    let atmapitem = asset.mint && tokenMap.get(asset.mint);\n                    assets.push({\n                      name: atmapitem && atmapitem.symbol || 'Unknown',//newPriceData.tokens[asset.mint].symbol,\n                      logo: atmapitem && atmapitem.logoURI || '', //newPriceData.tokens[asset.mint].logoURI\n                    })\n                  });\n                \n                  let rassets = '';\n                  let y = 0;\n                  if (newPriceData.farms[key]?.rewardAssets) {\n                    newPriceData.farms[key].rewardAssets.map((rasset) => {\n                      if (y>0)\n                        rassets+= '-';\n                      rassets+= newPriceData.tokens[rasset.mint].symbol;\n                      y++;\n                    });\n                  }\n\n                  if ((y == 0)&&(newPriceData.farms[key].lp.value>0)){ \n                    //lp_balance = newPriceData.farms[key].lp.amount;\n                    /*\n                    other_stakes.push({\n                        balance: balance,\n                        pendingReward: 0,\n                        tokenInfo: null,//mint && tokenMap.get(mint),\n                        lpprice: newPriceData.farms[key].lp.price,\n                        value: price,\n                        farmInfo: assets,\n                        //farmInfo: {name:\"TULIP\"},\n                        farmName: farmPlatform,\n                        farmPoolId: token.account.data.parsed.info.mint,\n                        stakedInfo: null,\n                        farmLogoURI: farmPlatformLogo,\n                        farmPendingReward: 0\n                    });\n                    */\n                    \n                  }\n                }\n              }\n            }\n          });\n        }\n\n        return {\n          mint: mint,\n          symbol: tmapitem && tmapitem.symbol || 'Unknown',\n          coingeckoId: tmapitem && tmapitem?.extensions?.coingeckoId || '',\n          balance: balance,\n          price: price && price,\n          value: price && price * balance,\n          tokenInfo: mint && tokenMap.get(mint),\n          usd_24h_change: usd_24h_change\n        };\n        \n      }).filter((token) => {\n        return (token.balance > 0) && (token.price > 0) && typeof token.balance !== \"undefined\";\n      });\n      \n      portfolio = portfolio.sort(function(a, b) {\n          return b.value - a.value;\n      });\n\n      staked = staked.map((stakeAccountInfo) => {\n          const { data } = stakeAccountInfo.accountInfo\n          const userStakeInfo = USER_STAKE_INFO_ACCOUNT_LAYOUT.decode(data)\n          const poolId = userStakeInfo.poolId.toBase58()\n          const stakerOwner = userStakeInfo.stakerOwner.toBase58()\n          const farm = getFarmByPoolId(poolId);\n\n          //console.log(\"Pool:\" +poolId);\n\n          if(!farm) {\n            return {\n              balance: 0\n            }\n          }\n\n          const farmPlatform = 'Raydium';\n          const farmPlatformLogo = '/logos/platforms/raydium.png';\n\n          const pair = pairsDataRaydium.find(pair => {\n            return pair.name === farm.name\n          });\n          \n          let farmshift = farm.lp.coin.decimals;\n          let shift = -1*farmshift;\n\n          let balance = new BigNumber(+userStakeInfo.depositBalance);\n          balance = balance.shiftedBy(shift);\n          \n          let pendingReward = new BigNumber(+userStakeInfo.rewardDebt);\n          pendingReward = pendingReward.shiftedBy(shift);\n\n          let stupid_balance = new TokenAmount(userStakeInfo.depositBalance.toNumber(), 6);\n          stupid_balance = parseFloat(stupid_balance.format());\n\n          let stupid_pendingReward = new TokenAmount(userStakeInfo.rewardDebt.toNumber(), 6);\n          stupid_pendingReward = parseFloat(stupid_pendingReward.format());\n\n          //farmData = newPriceData.farms.find(pair => {\n          //const found = newPriceData.farms.find(element => element == poolId);\n          //console.log(\"FOUND: \"+JSON.stringify(found));\n\n          let farmValue = pair.price * balance;\n          let farmApr = 0;\n\n          let assets = [];\n\n          Object.keys(newPriceData.farms).forEach(function(key) {\n            if (newPriceData.farms[key]?.address){\n              if (newPriceData.farms[key]?.address == poolId){ \n                \n                newPriceData.farms[key].lp.assets.map((asset) => {\n                  let atmapitem = asset.mint && tokenMap.get(asset.mint);\n                  assets.push({\n                    name: atmapitem && atmapitem.symbol || 'Unknown',//newPriceData.tokens[asset.mint].symbol,\n                    logo: atmapitem && atmapitem.logoURI || '', //newPriceData.tokens[asset.mint].logoURI\n                  })\n                });\n                \n                farmValue = balance*(+newPriceData.farms[key]?.lp?.price || 0);\n                farmApr = newPriceData.farms[key]?.apr || 0;\n                \n              }\n            }\n          });\n\n          return {\n              balance,\n              pendingReward,\n              tokenInfo: null,//mint && tokenMap.get(mint),\n              lpprice : pair.price,\n              value : farmValue,\n              farmInfo: assets,\n              apr: farmApr,\n              farmName: farmPlatform,\n              farmPoolId: poolId,\n              stakedInfo: data,\n              farmLogoURI: farmPlatformLogo,\n              farmPendingReward: 0\n          }\n      }).filter((token) => {\n          return token.balance > 0;\n      });\n      \n      {other_stakes != null && \n        staked.push(...other_stakes);\n      }\n      \n      setPorfolioBalances({\n          staked\n      });\n      \n      //console.log(\"2. PORTFOLIO: \"+JSON.stringify(portfolio));\n      //console.log(\"2. STAKED: \"+JSON.stringify(staked));\n      //console.log(\"2. COLLECTIBLES: \"+JSON.stringify(collectibles));\n\n      setLoading(false);\n      \n    } else{\n      return (\n        <Grid item xs={12} md={8} lg={9}>\n          <Paper class=\"grape-paper-background\">\n            <Paper\n              class=\"grape-paper\"\n              sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n                minHeight: 240,\n              }}\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <Skeleton />\n              </Box>\n            </Paper>\n          </Paper>\n        </Grid>\n      );\n    }\n  };\n\n  //Get Balances\n  let total = 0;\n  let portfolioTotal = 0; \n  let portfolioChange = 0; \n  let portfolioPercentageChange = 0; \n  let stakedTotal = 0;\n\n  const handleDeleteChange = () => {\n\n  };\n\n  if(!portfolioPositions){\n    //console.log(\"Getting balances...\");\n    if (session.publicKey)\n      getBalances();\n    return (\n      <React.Fragment>\n        <Grid item xs={12} md={12} lg={12}>\n          <Paper class=\"grape-paper-background\">\n            <Paper\n              class=\"grape-paper\"\n              sx={{\n                p: 2,\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <Box sx={{ width: \"100%\", p:1 }}>\n                <Skeleton \n                  animation=\"wave\"\n                  width=\"100%\" \n                  sx={{ mt: 0 }} />\n              </Box>\n            </Paper>\n          </Paper>\n        </Grid>\n      </React.Fragment>\n    );\n  }else{   \n    \n    stakedTotal = portfolioPositions.staked.reduce((acc, token) => {\n        return acc + token.value;\n    }, 0);\n\n    total = portfolioTotal + stakedTotal;\n  }\n  \n  return (\n      <React.Fragment>\n        \n        {(portfolioPositions.staked && portfolioPositions.staked.length) ? \n        <React.Fragment>\n          {/*\n          <Grid item xs={12} md={4} lg={3}>\n            <Paper class=\"grape-paper-background\">\n              <Paper\n                class=\"grape-paper\"\n                sx={{\n                  p: 2,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  minHeight: 240,\n                }}\n              >\n                \n                \n              </Paper>\n            </Paper>\n          </Grid>\n          */}\n          <Grid item xs={12} md={12} lg={12}>\n            <Paper class=\"grape-paper-background\">\n              <Box class=\"grape-paper\">\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <Box class=\"grape-dashboard-component-header\" sx={{ m: 0, position: 'relative' }}>\n                    <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                      YIELD FARMING\n                    </Typography>\n                  </Box>\n                </Box>\n                <FarmsTable balances={portfolioPositions.staked} isFarm={true}/>\n              </Box>\n            </Paper>\n          </Grid>\n        </React.Fragment> : <div/>}\n        \n      </React.Fragment>\n  );\n};\n","import React, { FC, useCallback } from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport * as XLSX from 'xlsx';\nimport { Connection, PublicKey, SystemProgram, Transaction, TransactionInstruction, Signer } from '@solana/web3.js';\n\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { GRAPE_RPC_ENDPOINT, FREE_RPC_ENDPOINT } from '../../components/Tools/constants';\nimport { getTokenOwnerRecordForRealm } from '@solana/spl-governance';\nimport { Token, TOKEN_PROGRAM_ID, ASSOCIATED_TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletError, WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { ValidateAddress } from '../../components/Tools/WalletAddress';\nimport {\n  Typography,\n  Button,\n  Grid,\n  Box,\n  Paper,\n  Link,\n  Table,\n  TextField,\n} from '@mui/material/';\nimport { useSnackbar } from 'notistack';\nimport MUIDataTable from \"mui-datatables\";\n\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    '& .MuiTableCell-root': {\n        borderBottom: '1px solid rgba(255,255,255,0.05)'\n    },\n}));\n\nconst Input = styled('input')({\n    display: 'none',\n  });\n\nexport function PaymentsView(props: any) {\n    const [loading, setLoading] = React.useState(false);\n    const freeconnection = new Connection(FREE_RPC_ENDPOINT);\n    const { connection } = useConnection();\n    const { publicKey, wallet, sendTransaction } = useWallet();\n    \n    const [columns, setColumns] = React.useState([]);\n    const [data, setData] = React.useState([]);\n    const [memoText, setMemoText] = React.useState(null);\n    const [transactionSignature, setTransactionSignature] = React.useState(null);\n    const [grapeMemberBalance, setGrapeMemberBalance] = React.useState(0);\n    const [grapeGovernanceBalance, setGrapeGovernanceBalance] = React.useState(0);\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n    const onError = useCallback(\n        (error: WalletError) => {\n            enqueueSnackbar(error.message ? `${error.name}: ${error.message}` : error.name, { variant: 'error' });\n            console.error(error);\n        },\n        [enqueueSnackbar]\n    );\n\n    async function executeTransactions(transactions: Transaction, memo: string) {\n        if (memo){\n            transactions.add(\n                new TransactionInstruction({\n                    keys: [{ pubkey: publicKey, isSigner: true, isWritable: true }],\n                    data: Buffer.from(JSON.stringify(memo), 'utf-8'),\n                    programId: new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\"),\n                })\n            )\n        }        \n\n        try{\n            enqueueSnackbar(`Preparing to batch pay`,{ variant: 'info' });\n            const signature = await sendTransaction(transactions, freeconnection);\n            \n            const snackprogress = (key:any) => (\n                <CircularProgress sx={{padding:'10px'}} />\n            );\n            const cnfrmkey = enqueueSnackbar(`Confirming transaction`,{ variant: 'info', action:snackprogress, persist: true });\n            await connection.confirmTransaction(signature, 'processed');\n            closeSnackbar(cnfrmkey);\n            \n            await connection.confirmTransaction(signature, 'processed');\n            enqueueSnackbar(`Sent payments - ${signature}`,{ variant: 'success' });\n            \n            setTransactionSignature(signature);\n        }catch(e){\n            closeSnackbar();\n            enqueueSnackbar(`Error: ${(e)}`,{ variant: 'error' });\n        } \n\n    }\n    \n    async function transferTokenInstruction(tokenMintAddress: string, to: string, amount: number) {\n        const fromWallet = publicKey;\n        const toWallet = new PublicKey(to);\n        const mintPubkey = new PublicKey(tokenMintAddress);\n        const amountToSend = +amount;\n        const tokenAccount = new PublicKey(mintPubkey);\n        \n        if (tokenMintAddress == \"So11111111111111111111111111111111111111112\"){ // Check if SOL\n            const decimals = 9;\n            const adjustedAmountToSend = amountToSend * Math.pow(10, decimals);\n            const transaction = new Transaction()\n            .add(\n                SystemProgram.transfer({\n                    fromPubkey: fromWallet,\n                    toPubkey: toWallet,\n                    lamports: adjustedAmountToSend,\n                })\n            );\n            \n            return transaction;\n        } else{\n            const accountInfo = await connection.getParsedAccountInfo(tokenAccount);\n            const accountParsed = JSON.parse(JSON.stringify(accountInfo.value.data));\n            const decimals = accountParsed.parsed.info.decimals;\n\n            let fromAta = await Token.getAssociatedTokenAddress( // calculate from ATA\n                ASSOCIATED_TOKEN_PROGRAM_ID, // always ASSOCIATED_TOKEN_PROGRAM_ID\n                TOKEN_PROGRAM_ID, // always TOKEN_PROGRAM_ID\n                mintPubkey, // mint\n                fromWallet // from owner\n            );\n            \n            let toAta = await Token.getAssociatedTokenAddress( // calculate to ATA\n                ASSOCIATED_TOKEN_PROGRAM_ID, // always ASSOCIATED_TOKEN_PROGRAM_ID\n                TOKEN_PROGRAM_ID, // always TOKEN_PROGRAM_ID\n                mintPubkey, // mint\n                toWallet // to owner\n            );\n            \n            const adjustedAmountToSend = amountToSend * Math.pow(10, decimals);\n            const receiverAccount = await connection.getAccountInfo(toAta);\n            \n            if (receiverAccount === null) { // initialize token\n                const transaction = new Transaction()\n                .add(\n                    Token.createAssociatedTokenAccountInstruction(\n                        ASSOCIATED_TOKEN_PROGRAM_ID, // always ASSOCIATED_TOKEN_PROGRAM_ID\n                        TOKEN_PROGRAM_ID, // always TOKEN_PROGRAM_ID\n                        mintPubkey, // mint\n                        toAta, // ata\n                        toWallet, // owner of token account\n                        fromWallet // fee payer\n                    )\n                )\n                .add(\n                    Token.createTransferInstruction(\n                        TOKEN_PROGRAM_ID,\n                        fromAta,\n                        toAta,\n                        publicKey,\n                        [],\n                        adjustedAmountToSend,\n                    )\n                );\n                \n\n                return transaction;\n            } else{ // token already in wallet\n                const transaction = new Transaction()\n                .add(\n                    Token.createTransferInstruction(\n                    TOKEN_PROGRAM_ID,\n                    fromAta,\n                    toAta,\n                    publicKey,\n                    [],\n                    adjustedAmountToSend,\n                    )\n                );\n                \n                return transaction;\n            }\n        }\n    }\n\n    const options = {\n        responsive:\"scroll\",\n        selectableRows: false,\n        download:true,\n        print:true,\n        viewColumns:false,\n        filter:false,\n        rowsPerPage:20,\n        rowsPerPageOptions:[20, 50, 100],\n      };\n\n    // process CSV data\n  const processData = (dataString:any) => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n \n    const list = [];\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n      if (headers && row.length == headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] == '\"')\n              d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] == '\"')\n              d = d.substring(d.length - 2, 1);\n          }\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        }\n \n        // remove the blank rows\n        if (Object.values(obj).filter(x => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n \n    // prepare columns list from headers\n    const columns = headers.map((c:any) => ({\n      name: c,\n      selector: c,\n    }));\n \n    setData(list);\n    setColumns(columns);\n  }\n \n  // handle file upload\n  const handleFileUpload = (e:any) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: 'binary' });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_csv(ws);\n      //const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      processData(data);\n    };\n    reader.readAsBinaryString(file);\n  }\n    \n  async function HandlePayAll(event: any) {\n    event.preventDefault();\n    \n    // loop through all data\n    //console.log('dils: '+JSON.stringify(data));\n    //console.log('cils: '+columns);\n\n    let data_json = JSON.parse(JSON.stringify(data));\n    let sum = 0;\n    if (data.length <= 20){\n        let batchtx = new Transaction();\n\n        let grapecheck = await transferTokenInstruction('8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA', 'GrapevviL94JZRiZwn2LjpWtmDacXU8QhAJvzpUMMFdL', 1);\n\n        for (var value of data){\n            // consider validating address\n            // consider validating token\n            if (value.token && value.address && value.amount && +value.amount > 0){\n                let tokentouse = value.token;\n                if (!ValidateAddress(tokentouse)){\n                    tokentouse = '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA';\n                }\n                if (tokentouse !== '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA'){\n                    let r = window.confirm(\"Token in this row (\"+tokentouse+\") is not Grape\\n\\nPress OK to set to Grape or Cancel to use \"+value.token+\"\");\n                    if (r)\n                        tokentouse = '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA';\n                }\n\n                if (ValidateAddress(value.address)){\n                    let singletx = await transferTokenInstruction(tokentouse, value.address, +value.amount);\n                    sum+=+value.amount;\n                    //console.log('Transaction: '+JSON.stringify(singletx));\n                    batchtx.add(singletx);\n                } else{\n                    console.log(\"Skipping \"+value.address);\n                }\n            }\n        }\n        // Grape Check\n        batchtx.add(grapecheck);\n        let r = window.confirm(\"Total amount to send: \"+sum+\"\\n+1 Grape will be sent to Grape Treasury\\n\\nPress OK to Pay All \"+data.length+\" or Cancel.\");\n        if (r)\n            executeTransactions(batchtx, memoText);\n    } else{\n        enqueueSnackbar(`Up to 20 transactions can be completed in batch pay`,{ variant: 'error' });\n    }\n}\n    const fetchBalances = async () => {\n        const body = {\n        method: \"getTokenAccountsByOwner\",\n        jsonrpc: \"2.0\",\n        params: [\n            // Get the public key of the account you want the balance for.\n            publicKey.toString(),\n            { programId: \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\" },\n            { encoding: \"jsonParsed\", commitment: \"processed\" },\n        ],\n        id: \"35f0036a-3801-4485-b573-2bf29a7c77d2\",\n        };\n\n        const response = await fetch(GRAPE_RPC_ENDPOINT, {\n            method: \"POST\",\n            body: JSON.stringify(body),\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n        const json = await response.json();\n        const resultValues = json.result.value\n        return resultValues;\n\n    };\n\n    const fetchTokenAccountOwnerHoldings = async () => {\n        setLoading(true);\n        if (publicKey){ \n            //const portfolio_rsp = await connection.getTokenAccountsByOwner(publicKey, { programId: new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\") },{ commitment: \"processed\" });\n            let [portfolio_rsp, governance_rsp] = await Promise.all([fetchBalances(), getGovernanceBalance()]);\n            \n            let gov_balance = 0;\n            try{\n                if (governance_rsp?.account?.governingTokenDepositAmount){\n                    gov_balance = +governance_rsp.account.governingTokenDepositAmount/1000000;\n                    setGrapeGovernanceBalance(+governance_rsp.account.governingTokenDepositAmount/1000000 || 0);\n                }\n            }catch(e){\n                console.log(\"ERR: \"+e);\n            }\n\n            try{\n                //if (grapeGovernanceBalance)\n                //setGrapeMemberBalance(grapeGovernanceBalance);\n                portfolio_rsp.map((token:any) => {\n                    let mint = token.account.data.parsed.info.mint;\n                    let balance = token.account.data.parsed.info.tokenAmount.uiAmount;\n                    if (mint === '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA'){ // check if wallet has sol\n                        setGrapeMemberBalance(gov_balance+balance);\n                    }\n                });\n            } catch(e){console.log(\"ERR: \"+e);}\n            \n        }\n        setLoading(false);\n    }\n    const getGovernanceBalance = async () => {\n        try{\n            const programId = new PublicKey('GovER5Lthms3bLBqWub97yVrMmEogzX7xNjdXpPPCVZw');\n            const realmId = new PublicKey('By2sVGZXwfQq6rAiAM3rNPJ9iQfb5e2QhnF4YjJ4Bip'); // Grape RealmId\n            const governingTokenMint = new PublicKey('8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA'); // Grape Mint\n            const governingTokenOwner = publicKey;\n\n            const ownerRecords = await getTokenOwnerRecordForRealm(\n                connection, \n                programId,\n                realmId,\n                governingTokenMint,\n                governingTokenOwner\n            );\n            \n            return ownerRecords;\n        } catch(e){console.log(\"ERR: \"+e);}\n    }\n\n    React.useEffect(() => { \n        if (publicKey && !loading)\n            fetchTokenAccountOwnerHoldings();\n    }, [publicKey]);\n\n    if (loading){ \n        return (<>Loading...</>)\n    } else{\n        return (\n                <React.Fragment>\n                    <Grid item xs={12} md={12} lg={12}>\n                        <Paper className=\"grape-paper-background\">\n                            <Box className=\"grape-paper\">\n                                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                    <Box className=\"grape-dashboard-component-header\" sx={{ m: 0, position: 'relative' }}>\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\" sx={{ m: 0, position: 'relative'}}>\n                                        DAO PAYMENTS\n                                        </Typography>\n                                    </Box>\n                                </Box>\n                                {grapeMemberBalance && grapeMemberBalance > 1130 ? (\n                                    <Box sx={{ alignItems: 'center' }}>\n                                            \n                                        {transactionSignature ?\n                                            <Grid \n                                                container\n                                                alignItems=\"center\"\n                                                justifyContent=\"center\"\n                                            >\n                                                <Grid xs={12}>\n                                            \n                                                    <Typography variant=\"caption\">\n                                                        Confirmation TX:\n                                                        \n                                                        <Button size=\"small\" variant=\"text\">\n                                                            <CopyToClipboard \n                                                            text={transactionSignature} \n                                                            onCopy={() => enqueueSnackbar(`Copied ${transactionSignature}`,{ variant: 'success' })}\n                                                            >\n                                                                <ContentCopyIcon sx={{ fontSize:'14px', mr:0 }} />\n                                                            </CopyToClipboard>\n                                                        </Button>\n                                                        <Button\n                                                            variant='text'\n                                                            href={`https://explorer.solana.com/tx/${transactionSignature}`} \n                                                            target=\"_blank\"\n                                                        >\n                                                        {transactionSignature}\n                                                        </Button>\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                        :\n                                            <Grid \n                                                container\n                                                alignItems=\"center\"\n                                                justifyContent=\"center\"\n\n                                            >\n                                                <Grid item xs={12} sx={{p:1,m:1}}>\n                                                    \n                                                    <Typography variant=\"caption\" component=\"div\" align=\"justify\" >\n                                                    <strong>CSV Format:</strong>\n                                                    <br/><i>currently in use - address, amount, token * do not include parenthesis in the header</i>\n                                                    <ul>\n                                                        <li>seq (type:number)</li>\n                                                        <li>identifier (type:string)</li> \n                                                        <li>address (type:string)</li>\n                                                        <li>amount (type:number)</li>\n                                                        <li>token (type:string)</li>\n                                                        <li>notes (type:string)</li>\n                                                    </ul>\n                                                    </Typography>\n                                                    \n                                                    \n                                                    <Typography variant=\"caption\" component=\"div\" align=\"justify\" >\n                                                    <strong>Instructions:</strong>\n                                                    <ul>\n                                                        <li>Add a CSV in the specified format</li>\n                                                        <li>Verify the information is correct in the loaded table</li> \n                                                        <li>If everything is displaying correctly Press PAY ALL to proceed, otherwise re-upload a correct CSV file</li>\n                                                        <li>A single Grape will be sent to the Grape treasury to run a transaction</li>\n                                                    </ul>\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" component=\"div\" align=\"justify\" >\n                                                    <strong>Notes:</strong>\n                                                    &nbsp;Currently supports up to 20 payments in one go, will initialize tokens if they have not been initialized\n                                                    </Typography>\n\n                                                </Grid>\n                                                <Grid item xs={12}>\n                                                    <label htmlFor=\"contained-button-file\">\n                                                        <Input id=\"contained-button-file\" \n                                                            type=\"file\"\n                                                            accept=\".csv,.xlsx,.xls\"\n                                                            onChange={handleFileUpload} />\n                                                        <Button \n                                                            variant=\"contained\" \n                                                            component=\"span\"\n                                                            sx={{\n                                                                margin:1\n                                                            }}\n                                                        >\n                                                        <UploadFileIcon /> CSV\n                                                        </Button>\n                                                    </label>\n                                                </Grid>\n                                                <Grid item xs={12}>\n                                                    <TextField \n                                                        id=\"send-memo\" \n                                                        fullWidth \n                                                        placeholder=\"Add a memo for this transaction\" \n                                                        label=\"Memo\" \n                                                        variant=\"standard\"\n                                                        autoComplete=\"off\"\n                                                        onChange={(e) => {setMemoText(e.target.value)}}\n                                                        sx={{\n                                                            margin:1\n                                                        }}\n                                                        InputProps={{\n                                                            inputProps: {\n                                                                style: {\n                                                                    textAlign:'left'\n                                                                }\n                                                            }\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid xs={12}>\n                                                    <Button     \n                                                        onClick={HandlePayAll}\n                                                        variant=\"outlined\" \n                                                        title=\"Pay all\"\n                                                        disabled={(data.length < 1)}\n                                                        sx={{\n                                                            margin:1\n                                                        }}>\n                                                        Pay All {(data.length > 0 && data.length)}\n                                                    </Button>\n                                                </Grid>\n                                            </Grid>\n                                        }\n                                    \n                                        <StyledTable size=\"small\" aria-label=\"Payments Table\">\n                                            <MUIDataTable\n                                                title={\"\"}\n                                                data={data}\n                                                columns={columns}\n                                                options={options}\n                                                />\n                                        </StyledTable>\n                                    </Box>\n                                )\n                                :\n                                (\n                                    <Grid \n                                    container\n                                    alignItems=\"center\"\n                                    justifyContent=\"center\"\n                                    >\n                                        <Grid item xs={12}\n                                        alignItems=\"center\"\n                                        justifyContent=\"center\">\n                                            <Typography variant=\"h5\" component=\"div\" \n                                                align=\"center\" >\n                                                Available only for Grape Members\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>  \n                                )}\n                            </Box>\n                        </Paper>\n                    </Grid>\n                </React.Fragment>\n        )\n    }\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, styled, alpha, useTheme } from '@mui/material/styles';\n\nimport {\n    Grid,\n    Typography,\n    Collapse,\n    Button,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableContainer,\n    TableRow,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Box,\n    Avatar,\n    AvatarGroup,\n} from '@mui/material';\n\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport HelpIcon from '@mui/icons-material/Help';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nimport SendToken from '../SendToken/SendToken';\nimport TopHolders from '../TopHolders/TopHolders';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport { MakeLinkableAddress, ValidateAddress } from '../../components/Tools/WalletAddress'; // global key handling\nimport { PretifyCommaNumber } from '../../components/Tools/PretifyCommaNumber';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    '& .MuiTableCell-root': {\n        borderBottom: '1px solid rgba(255,255,255,0.05)'\n    },\n}));\n\nfunction TablePaginationActions(props) {\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onPageChange } = props;\n  \n    const handleFirstPageButtonClick = (event) => {\n        onPageChange(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onPageChange(event, page - 1);\n    };\n  \n    const handleNextButtonClick = (event) => {\n        onPageChange(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = (event) => {\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n    \n    return (\n        <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n                aria-label=\"previous page\"\n            >\n                {theme.direction === \"rtl\" ? (\n                    <KeyboardArrowRight />\n                ) : (\n                    <KeyboardArrowLeft />\n                )}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === \"rtl\" ? (\n                    <KeyboardArrowLeft />\n                ) : (\n                    <KeyboardArrowRight />\n                )}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </Box>\n    );\n  }\n  \n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n  };\n\nfunction trimAddress(addr) {\n    if (!addr) return addr;\n    let start = addr.substring(0, 8);\n    let end = addr.substring(addr.length - 4);\n    return `${start}...${end}`;\n}\n\nconst TokenIcon = (props) => {\n    const {tokenInfo, mint} = props;\n    const tokenLogo = tokenInfo && tokenInfo.logoURI;\n    const tokenName = tokenInfo && tokenInfo?.name;\n\n    return (\n        <Grid container direction=\"row\" alignItems=\"center\" sx={{ flexWrap:\"nowrap!important\" }}>\n            <Grid item>\n                {tokenLogo ? \n                    <Avatar component={Paper} \n                        elevation={4}\n                        alt=\"Token\" \n                        src={tokenLogo}\n                        sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                    /> : <HelpIcon />}\n            </Grid>\n            <Grid item sx={{ ml: 1 }}>\n                {tokenName || (mint && trimAddress(mint)) || ''}\n            </Grid>\n        </Grid>\n    );\n};\n\nconst TokenFixPrice = (props) => {\n    const { tokenFormatValue, defaultFixed } = props;\n    try{\n        switch (true){\n            case (+tokenFormatValue < 0.001):{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(6)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(6))\n            }case (+tokenFormatValue < 0.1):{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(4)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(4))\n            }default:{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(defaultFixed)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(defaultFixed))\n            }\n        }\n    } catch(e) {\n        return tokenFormatValue;\n    }\n}\n\nfunction PortfolioRow(props) {\n    const { token, index } = props;\n    const [open, setOpen] = React.useState(false);\n    \n    return (\n        <React.Fragment>\n            <TableRow key={index} sx={{ '& > *': { borderBottom: 'unset' }}}>\n                <TableCell align=\"middle\" sx={{borderBottom:\"none\"}}>\n                    <IconButton\n                        aria-label=\"expand row\"\n                        size=\"small\"\n                        onClick={() => setOpen(!open)}\n                    >\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell align=\"left\" sx={{borderBottom:\"none\"}}>\n                    <TokenIcon tokenInfo={token.tokenInfo} mint={token.mint} />\n                </TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}><TokenFixPrice tokenFormatValue={token.balance} defaultFixed={3} /></TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\", flexWrap:\"nowrap!important\"}}>\n                    {token.usd_24h_change ?\n                        <>\n                        {token.usd_24h_change < 0 ?\n                            <Typography variant=\"caption\" sx={{color:\"#f00\"}}>\n                                <Grid container direction=\"row\" alignItems=\"center\" sx={{ flexWrap:\"nowrap!important\" }}>\n                                    <Grid item>\n                                        {token.usd_24h_change.toFixed(2)}%\n                                    </Grid>\n                                    <Grid item>\n                                        <ArrowDownwardIcon fontSize=\"0.75rem\" />\n                                    </Grid>\n                                </Grid>\n                            </Typography>\n                        :\n                            <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>\n                                <Grid container direction=\"row\" alignItems=\"center\" sx={{ flexWrap:\"nowrap!important\" }}>\n                                    <Grid item>\n                                        {token.usd_24h_change.toFixed(2)}%\n                                    </Grid>\n                                    <Grid item>\n                                        <ArrowUpwardIcon fontSize=\"0.75rem\" />\n                                    </Grid>\n                                </Grid>\n                            </Typography>\n                        }\n                        </>\n                    :\n                        <>\n                            -\n                        </>\n                    }\n                </TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}>\n                    <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.price} defaultFixed={2} />\n                </TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}><Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.value} defaultFixed={2} /></TableCell>\n                <TableCell>\n                    <SendToken mint={token.mint} name={token.tokenInfo?.name} logoURI={token.tokenInfo?.logoURI} balance={token.balance} conversionrate={token.value/token.balance} showTokenName={false} sendType={0} />\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7} align=\"center\">\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box sx={{ margin: 1 }}>\n                            {/*\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                Address\n                            </Typography>\n                            */}\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TopHolders mint={token.mint} name={token.tokenInfo?.name} logoURI={token.tokenInfo?.logoURI} balance={token.balance}/>\n                                    {token.address &&\n                                    <TransactionHistory address={token.address} mint={token.mint} mintdecimals={token.mintdecimals} name={token.tokenInfo?.name} logoURI={token.tokenInfo?.logoURI} balance={token.balance}/>\n                                    }\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <MakeLinkableAddress addr={token.mint} trim={0} hasextlink={true} hascopy={true} fontsize={12} />\n                                </Grid>\n                            </Grid>\n\n                            \n\n                            {/*\n                            <Table size=\"small\" aria-label=\"purchases\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell><Typography fontSize=\"12px\">\n                                            <MakeLinkableAddress addr={token.mint} trim={0} hasextlink={true} hascopy={true} fontsize={12} />\n                                        </Typography></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                            </Table>\n                            */}\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\n\nexport const PortfolioTableView = (props) => {\n    const balances = props.balances || [];\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - balances.length) : 0;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    let portfolioTableCols = 7;\n    props.isFarm ?\n        portfolioTableCols = 5//3\n    :\n        portfolioTableCols = 7;\n\n    // When we have rewards add\n    //\n    //<TableCell align=\"center\">LP</TableCell>\n    //<TableCell align=\"center\">Value</TableCell>\n    //<TableCell align=\"right\">Pending</TableCell>\n\n    //<TableCell align=\"right\">{token.lpprice && `$${token.lpprice.toFixed(4)}`}</TableCell>\n    //<TableCell align=\"right\">{token.value && `$${token.value.toFixed(6)}`}</TableCell>\n    //<TableCell align=\"right\">{token.pendingReward}</TableCell>\n\n    return (\n        <React.Fragment>\n            <div style={{width: 'auto', overflowX: 'scroll'}}>\n                <TableContainer>\n                    <StyledTable sx={{ minWidth: 500 }} size=\"small\" aria-label=\"Portfolio Table\">\n                        <TableHead>\n                            {!props.isFarm &&\n                                <TableRow>\n                                    <TableCell sx={{width:\"1%\"}} />\n                                    <TableCell><Typography variant=\"caption\">Asset</Typography></TableCell>\n                                    <TableCell align=\"right\"><Typography variant=\"caption\">Balance</Typography></TableCell>\n                                    <TableCell align=\"right\"></TableCell>\n                                    <TableCell align=\"right\"><Typography variant=\"caption\">Price</Typography></TableCell> \n                                    <TableCell align=\"right\"><Typography variant=\"caption\">Value</Typography></TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            }\n                        </TableHead>\n                        <TableBody>\n                            {(rowsPerPage > 0\n                                ? balances.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                : balances\n                            ).map((token, index) => {\n                                return !props.isFarm &&\n                                    <PortfolioRow token={token} index={index} />\n                            })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 53 * emptyRows }}>\n                                <TableCell colSpan={4} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                        <TableFooter>\n                        <TableRow>\n                            <TablePagination\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                            colSpan={portfolioTableCols}\n                            count={balances.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            SelectProps={{\n                                inputProps: {\n                                'aria-label': 'rows per page',\n                                },\n                                native: true,\n                            }}\n                            //onChangePage={handleChangePage}\n                            onPageChange={handleChangePage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                            ActionsComponent={TablePaginationActions}\n                            />\n                        </TableRow>\n                        </TableFooter>\n                    </StyledTable>\n                </TableContainer>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default PortfolioTableView;","import SvgIcon, { SvgIconProps } from '@mui/material/SvgIcon';\n\nexport default function SolCurrencyIcon(props: SvgIconProps) {\n    return (\n        <SvgIcon {...props}>       \n            <path d=\"M12,24 C10.3434343,24 8.78787879,23.6868695 7.33333333,23.0606069 C5.8989899,22.4545463 4.62626263,21.6060614 3.51515152,20.5151524 C2.42424242,19.4040412 1.56565657,18.121213 0.939393939,16.6666675 C0.313131313,15.2121221 -2.8035935e-16,13.6565665 -2.8035935e-16,12 C-2.8035935e-16,10.3434352 0.313131313,8.78787963 0.939393939,7.33333418 C1.56565657,5.87878872 2.42424242,4.60606145 3.51515152,3.51515236 C4.62626263,2.40404125 5.8989899,1.54545539 7.33333333,0.939394781 C8.78787879,0.313132155 10.3434343,-3.73812466e-16 12,-3.73812466e-16 C13.6565657,-3.73812466e-16 15.2121212,0.313132155 16.6666667,0.939394781 C18.1212121,1.54545539 19.3939394,2.40404125 20.4848485,3.51515236 C21.5959596,4.60606145 22.4545455,5.87878872 23.0606061,7.33333418 C23.6868687,8.78787963 24,10.3434352 24,12 C24,13.6565665 23.6868687,15.2121221 23.0606061,16.6666675 C22.4545455,18.121213 21.5959596,19.4040412 20.4848485,20.5151524 C19.3939394,21.6060614 18.1212121,22.4545463 16.6666667,23.0606069 C15.2121212,23.6868695 13.6565657,24 12,24 Z M12,21.9090918 C13.3737374,21.9090918 14.6565657,21.6565665 15.8484848,21.151516 C17.040404,20.6262635 18.0909091,19.9090918 19,19.0000008 C19.9090909,18.0909099 20.6161616,17.0404049 21.1212121,15.8484857 C21.6464646,14.6565665 21.9090909,13.3737382 21.9090909,12.0000008 C21.9090909,10.6262635 21.6464646,9.34343519 21.1212121,8.15151599 C20.6161616,6.9595968 19.9090909,5.90909175 19,5.00000084 C18.0909091,4.09090993 17.040404,3.38383923 15.8484848,2.87878872 C14.6565657,2.3535362 13.3737374,2.09090993 12,2.09090993 C10.6262626,2.09090993 9.34343434,2.3535362 8.15151515,2.87878872 C6.95959596,3.38383923 5.90909091,4.09090993 5,5.00000084 C4.09090909,5.90909175 3.37373737,6.9595968 2.84848485,8.15151599 C2.34343434,9.34343519 2.09090909,10.6262635 2.09090909,12.0000008 C2.09090909,13.3737382 2.34343434,14.6565665 2.84848485,15.8484857 C3.37373737,17.0404049 4.09090909,18.0909099 5,19.0000008 C5.90909091,19.9090918 6.95959596,20.6262635 8.15151515,21.151516 C9.34343434,21.6565665 10.6262626,21.9090918 12,21.9090918 Z M12,20.4545463 C10.8282828,20.4545463 9.72727273,20.2424251 8.6969697,19.8181827 C7.68686869,19.3737382 6.78787879,18.7676776 6,18.0000008 C5.23232323,17.2121221 4.62626263,16.3131322 4.18181818,15.3030311 C3.75757576,14.2727281 3.54545455,13.171718 3.54545455,12.0000008 C3.54545455,10.8282837 3.75757576,9.73737458 4.18181818,8.72727357 C4.62626263,7.69697054 5.23232323,6.79798064 6,6.03030387 C6.78787879,5.24242508 7.68686869,4.63636448 8.6969697,4.21212205 C9.72727273,3.76767761 10.8282828,3.54545539 12,3.54545539 C13.1717172,3.54545539 14.2727273,3.76767761 15.3030303,4.21212205 C16.3333333,4.63636448 17.2323232,5.24242508 18,6.03030387 C18.7878788,6.79798064 19.3939394,7.69697054 19.8181818,8.72727357 C20.2626263,9.73737458 20.4848485,10.8282837 20.4848485,12.0000008 C20.4848485,13.171718 20.2626263,14.2727281 19.8181818,15.3030311 C19.3939394,16.3131322 18.7878788,17.2121221 18,18.0000008 C17.2323232,18.7676776 16.3333333,19.3737382 15.3030303,19.8181827 C14.2727273,20.2424251 13.1717172,20.4545463 12,20.4545463 Z M12,18.3636372 C13.1919192,18.3636372 14.2626263,18.0808089 15.2121212,17.5151524 C16.1818182,16.9494958 16.9494949,16.181819 17.5151515,15.2121221 C18.1010101,14.2424251 18.3939394,13.171718 18.3939394,12.0000008 C18.3939394,10.8080816 18.1010101,9.73737458 17.5151515,8.78787963 C16.9494949,7.81818266 16.1818182,7.05050589 15.2121212,6.48484933 C14.2626263,5.91919276 13.1919192,5.63636448 12,5.63636448 C10.8282828,5.63636448 9.75757576,5.91919276 8.78787879,6.48484933 C7.81818182,7.05050589 7.05050505,7.81818266 6.48484848,8.78787963 C5.91919192,9.73737458 5.63636364,10.8080816 5.63636364,12.0000008 C5.63636364,13.171718 5.91919192,14.2424251 6.48484848,15.2121221 C7.05050505,16.181819 7.81818182,16.9494958 8.78787879,17.5151524 C9.75757576,18.0808089 10.8282828,18.3636372 12,18.3636372 Z\" id=\"Shape\"></path>\n        </SvgIcon>\n    );\n  }","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, styled, alpha, useTheme } from '@mui/material/styles';\n\nimport {\n    Grid,\n    Typography,\n    Collapse,\n    Button,\n    Divider,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableContainer,\n    TableRow,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Box,\n    Avatar,\n    AvatarGroup,\n} from '@mui/material';\n\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport HelpIcon from '@mui/icons-material/Help';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nimport SendToken from '../SendToken/SendToken';\nimport TopHolders from '../TopHolders/TopHolders';\nimport { MakeLinkableAddress, ValidateAddress } from '../../components/Tools/WalletAddress'; // global key handling\nimport { PretifyCommaNumber } from '../../components/Tools/PretifyCommaNumber';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    '& .MuiTableCell-root': {\n        borderBottom: '1px solid rgba(255,255,255,0.05)'\n    },\n}));\n\nfunction TablePaginationActions(props) {\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onPageChange } = props;\n  \n    const handleFirstPageButtonClick = (event) => {\n        onPageChange(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onPageChange(event, page - 1);\n    };\n  \n    const handleNextButtonClick = (event) => {\n        onPageChange(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = (event) => {\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n    \n    return (\n        <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n                aria-label=\"previous page\"\n            >\n                {theme.direction === \"rtl\" ? (\n                    <KeyboardArrowRight />\n                ) : (\n                    <KeyboardArrowLeft />\n                )}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === \"rtl\" ? (\n                    <KeyboardArrowLeft />\n                ) : (\n                    <KeyboardArrowRight />\n                )}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </Box>\n    );\n  }\n  \n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n  };\n\nfunction trimAddress(addr) {\n    if (!addr) return addr;\n    let start = addr.substring(0, 8);\n    let end = addr.substring(addr.length - 4);\n    return `${start}...${end}`;\n}\n\nconst FarmStake = (props) => {\n    const{ stake } = props;\n    \n    let stakeList = '';\n\n    try{\n\n        return(\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <AvatarGroup\n                        sx={{ mr:1 }}\n                    >\n                        {stake.map((farmStake, i) => \n                            <Avatar \n                                component={Paper} \n                                elevation={4}\n                                alt={farmStake.name} \n                                src={farmStake.logo}\n                                sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                            />\n                        )}\n                    </AvatarGroup>\n                </Grid>\n                <Grid item>\n                    {stake.map((farmStake, i) =>\n                        <>\n                            {i>0 && ('-')}\n                            {farmStake.name}\n                        </> \n                    )}\n                </Grid>\n            </Grid>\n        );\n    } catch(e){ \n        console.log(\"ERR: \"+e) \n    }\n    \n    return '<></>';\n}\n\nconst FarmIcon = (props) => {\n    const { farmLogoURI, farmName } = props;\n\n    return (\n       <Grid container direction=\"row\" alignItems=\"center\">\n           <Grid item>\n                <Avatar \n                    component={Paper} \n                    elevation={4}\n                    alt=\"Token\" \n                    src={farmLogoURI}\n                    sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                />\n           </Grid>\n           <Grid item sx={{ ml: 1 }}>\n                {farmName}\n           </Grid>\n       </Grid>\n   );\n};\n\nconst TokenIcon = (props) => {\n    const {tokenInfo, mint} = props;\n    const tokenLogo = tokenInfo && tokenInfo.logoURI;\n    const tokenName = tokenInfo && tokenInfo.name;\n\n    return (\n        <Grid container direction=\"row\" alignItems=\"center\" sx={{ flexWrap:\"nowrap!important\" }}>\n            <Grid item>\n                {tokenLogo ? \n                    <Avatar component={Paper} \n                        elevation={4}\n                        alt=\"Token\" \n                        src={tokenLogo}\n                        sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                    /> : <HelpIcon />}\n            </Grid>\n            <Grid item sx={{ ml: 1 }}>\n                {tokenName || (mint && trimAddress(mint)) || ''}\n            </Grid>\n        </Grid>\n    );\n};\n\nconst TokenFixPrice = (props) => {\n    const { tokenFormatValue, defaultFixed } = props;\n    try{\n        switch (true){\n            case (+tokenFormatValue < 0.001):{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(6)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(6))\n            }case (+tokenFormatValue < 0.1):{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(4)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(4))\n            }default:{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(defaultFixed)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(defaultFixed))\n            }\n        }\n    } catch(e) {\n        return tokenFormatValue;\n    }\n}\n\nfunction PortfolioRow(props) {\n    const { token, index } = props;\n    const [open, setOpen] = React.useState(false);\n    \n    return (\n        <React.Fragment>\n            <TableRow key={index} sx={{ '& > *': { borderBottom: 'unset' }}}>\n                <TableCell align=\"left\" sx={{borderBottom:\"none\"}}>\n                    <TokenIcon tokenInfo={token.tokenInfo} mint={token.mint} />\n                </TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}><TokenFixPrice tokenFormatValue={token.balance} defaultFixed={3} /></TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\", flexWrap:\"nowrap!important\"}}>\n                    {token.usd_24h_change ?\n                        <>\n                        {token.usd_24h_change < 0 ?\n                            <Typography variant=\"caption\" sx={{color:\"#f00\"}}>\n                                <Grid container direction=\"row\" alignItems=\"center\" sx={{ flexWrap:\"nowrap!important\" }}>\n                                    <Grid item>\n                                        {token.usd_24h_change.toFixed(2)}%\n                                    </Grid>\n                                    <Grid item>\n                                        <ArrowDownwardIcon fontSize=\"0.75rem\" />\n                                    </Grid>\n                                </Grid>\n                            </Typography>\n                        :\n                            <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>\n                                <Grid container direction=\"row\" alignItems=\"center\" sx={{ flexWrap:\"nowrap!important\" }}>\n                                    <Grid item>\n                                        {token.usd_24h_change.toFixed(2)}%\n                                    </Grid>\n                                    <Grid item>\n                                        <ArrowUpwardIcon fontSize=\"0.75rem\" />\n                                    </Grid>\n                                </Grid>\n                            </Typography>\n                        }\n                        </>\n                    :\n                        <>\n                            -\n                        </>\n                    }\n                </TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}>\n                    <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.price} defaultFixed={2} />\n                </TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}><Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.value} defaultFixed={2} /></TableCell>\n                <TableCell>\n                    <SendToken mint={token.mint} name={token.tokenInfo.name} logoURI={token.tokenInfo.logoURI} balance={token.balance} conversionrate={token.value/token.balance} showTokenName={false} sendType={1} />\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\n\nexport const ContributeTableView = (props) => {\n    const balances = props.balances || [];\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - balances.length) : 0;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    let portfolioTableCols = 7;\n    \n    return (\n        <React.Fragment>\n            <div style={{width: 'auto', overflowX: 'scroll'}}>\n                <TableContainer>\n                    <StyledTable sx={{ minWidth: 500 }} size=\"small\" aria-label=\"Portfolio Table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell><Typography variant=\"caption\">Asset</Typography></TableCell>\n                                <TableCell align=\"right\"><Typography variant=\"caption\">Balance</Typography></TableCell>\n                                <TableCell align=\"right\"></TableCell>\n                                <TableCell align=\"right\"><Typography variant=\"caption\">Price</Typography></TableCell> \n                                <TableCell align=\"right\"><Typography variant=\"caption\">Value</Typography></TableCell>\n                                <TableCell></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {(rowsPerPage > 0\n                                ? balances.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                : balances\n                            ).map((token, index) => {\n                                return (\n                                    <> \n                                        <PortfolioRow token={token} index={index} />\n                                    </>\n                                )\n                            })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 53 * emptyRows }}>\n                                <TableCell colSpan={4} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                        <TableFooter>\n                        <TableRow>\n                            <TablePagination\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                            colSpan={portfolioTableCols}\n                            count={balances.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            SelectProps={{\n                                inputProps: {\n                                'aria-label': 'rows per page',\n                                },\n                                native: true,\n                            }}\n                            //onChangePage={handleChangePage}\n                            onPageChange={handleChangePage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                            ActionsComponent={TablePaginationActions}\n                            />\n                        </TableRow>\n                        </TableFooter>\n                    </StyledTable>\n                </TableContainer>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ContributeTableView;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, useTheme } from '@mui/material/styles';\n\nimport {\n    Grid,\n    Typography,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableContainer,\n    TableRow,\n    TableFooter,\n    TablePagination,\n    Paper,\n    Box,\n    Avatar,\n    AvatarGroup,\n} from '@mui/material';\n\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport HelpIcon from '@mui/icons-material/Help';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n\nimport SendToken from '../SendToken/SendToken';\nimport TopHolders from '../TopHolders/TopHolders';\nimport { MakeLinkableAddress, ValidateAddress } from '../../components/Tools/WalletAddress'; // global key handling\nimport { PretifyCommaNumber } from '../../components/Tools/PretifyCommaNumber';\n\nconst StyledTable = styled(Table)(({ theme }) => ({\n    '& .MuiTableCell-root': {\n        borderBottom: '1px solid rgba(255,255,255,0.05)'\n    },\n}));\n\nfunction TablePaginationActions(props) {\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onPageChange } = props;\n  \n    const handleFirstPageButtonClick = (event) => {\n        onPageChange(event, 0);\n    };\n\n    const handleBackButtonClick = (event) => {\n        onPageChange(event, page - 1);\n    };\n  \n    const handleNextButtonClick = (event) => {\n        onPageChange(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = (event) => {\n        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n    \n    return (\n        <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n                aria-label=\"previous page\"\n            >\n                {theme.direction === \"rtl\" ? (\n                    <KeyboardArrowRight />\n                ) : (\n                    <KeyboardArrowLeft />\n                )}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === \"rtl\" ? (\n                    <KeyboardArrowLeft />\n                ) : (\n                    <KeyboardArrowRight />\n                )}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </Box>\n    );\n  }\n  \n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n  };\n\nfunction trimAddress(addr) {\n    if (!addr) return addr;\n    let start = addr.substring(0, 8);\n    let end = addr.substring(addr.length - 4);\n    return `${start}...${end}`;\n}\n\nconst FarmStake = (props) => {\n    const{ stake } = props;\n    \n    let stakeList = '';\n\n    try{\n\n        return(\n            <Grid container direction=\"row\" alignItems=\"center\" sx={{ flexWrap:\"nowrap!important\" }}>\n                <Grid item>\n                    <AvatarGroup\n                        sx={{ mr:1 }}\n                    >\n                        {stake.map((farmStake, i) => \n                            <Avatar \n                                component={Paper} \n                                elevation={4}\n                                alt={farmStake.name} \n                                src={farmStake.logo}\n                                sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                            />\n                        )}\n                    </AvatarGroup>\n                </Grid>\n                <Grid item>\n                    {stake.map((farmStake, i) =>\n                        <>\n                            {i>0 && ('-')}\n                            {farmStake.name}\n                        </> \n                    )}\n                </Grid>\n            </Grid>\n        );\n    } catch(e){ \n        console.log(\"ERR: \"+e) \n    }\n    \n    return '<></>';\n}\n\nconst FarmIcon = (props) => {\n    const { farmLogoURI, farmName } = props;\n\n    return (\n       <Grid container direction=\"row\" alignItems=\"center\" sx={{ flexWrap:\"nowrap!important\" }}>\n           <Grid item>\n                <Avatar \n                    component={Paper} \n                    elevation={4}\n                    alt=\"Token\" \n                    src={farmLogoURI}\n                    sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                />\n           </Grid>\n           <Grid item sx={{ ml: 1 }}>\n                {farmName}\n           </Grid>\n       </Grid>\n   );\n};\n\nconst TokenIcon = (props) => {\n    const {tokenInfo, mint} = props;\n    const tokenLogo = tokenInfo && tokenInfo.logoURI;\n    const tokenName = tokenInfo && tokenInfo.name;\n\n    return (\n        <Grid container direction=\"row\" alignItems=\"center\">\n            <Grid item>\n                {tokenLogo ? \n                    <Avatar component={Paper} \n                        elevation={4}\n                        alt=\"Token\" \n                        src={tokenLogo}\n                        sx={{ width: 28, height: 28, bgcolor: \"#222\" }}\n                    /> : <HelpIcon />}\n            </Grid>\n            <Grid item sx={{ ml: 1 }}>\n                {tokenName || (mint && trimAddress(mint)) || ''}\n            </Grid>\n        </Grid>\n    );\n};\n\nconst TokenFixPrice = (props) => {\n    const { tokenFormatValue, defaultFixed } = props;\n    try{\n        switch (true){\n            case (+tokenFormatValue < 0.001):{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(6)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(6))\n            }case (+tokenFormatValue < 0.1):{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(4)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(4))\n            }default:{\n                return <PretifyCommaNumber number={tokenFormatValue.toFixed(defaultFixed)} />\n                //return numberWithCommasDecimal(tokenFormatValue.toFixed(defaultFixed))\n            }\n        }\n    } catch(e) {\n        return tokenFormatValue;\n    }\n}\n\nfunction PortfolioRow(props) {\n    const { token, index } = props;\n    const [open, setOpen] = React.useState(false);\n    \n    return (\n        <React.Fragment>\n            <TableRow key={index} sx={{ '& > *': { borderBottom: 'unset' }}}>\n                <TableCell align=\"middle\" sx={{borderBottom:\"none\"}}>\n                    <IconButton\n                        aria-label=\"expand row\"\n                        size=\"small\"\n                        onClick={() => setOpen(!open)}\n                    >\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell align=\"left\" sx={{borderBottom:\"none\"}}>\n                    <TokenIcon tokenInfo={token.tokenInfo} mint={token.mint} />\n                </TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}><TokenFixPrice tokenFormatValue={token.balance} defaultFixed={3} /></TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}>\n                    {token.usd_24h_change ?\n                        <>\n                        {token.usd_24h_change < 0 ?\n                            <>\n                                <Typography variant=\"caption\" sx={{color:\"#f00\"}}>{token.usd_24h_change.toFixed(2)}% <ArrowDownwardIcon fontSize=\"0.75rem\" /></Typography> <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.price} defaultFixed={2} />\n                            </>\n                        :\n                            <>\n                                <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>{token.usd_24h_change.toFixed(2)}% <ArrowUpwardIcon fontSize=\"0.75rem\" /></Typography> <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.price} defaultFixed={2} />\n                            </>\n                        }\n                        </>\n                    :\n                        <>\n                                <Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.price} defaultFixed={2} />\n                        </>\n                    }\n                </TableCell>\n                <TableCell align=\"right\" sx={{borderBottom:\"none\"}}><Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.value} defaultFixed={2} /></TableCell>\n                <TableCell>\n                    <SendToken mint={token.mint} name={token.tokenInfo.name} logoURI={token.tokenInfo.logoURI} balance={token.balance} conversionrate={token.value/token.balance} showTokenName={false} />\n                </TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={5} align=\"center\">\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box sx={{ margin: 1 }}>\n                            {/*\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                Address\n                            </Typography>\n                            */}\n                            <Grid container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TopHolders mint={token.mint} name={token.tokenInfo.name} logoURI={token.tokenInfo.logoURI} balance={token.balance}/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <MakeLinkableAddress addr={token.mint} trim={0} hasextlink={true} hascopy={true} fontsize={12} />\n                                </Grid>\n                            </Grid>\n\n                            \n\n                            {/*\n                            <Table size=\"small\" aria-label=\"purchases\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell><Typography fontSize=\"12px\">\n                                            <MakeLinkableAddress addr={token.mint} trim={0} hasextlink={true} hascopy={true} fontsize={12} />\n                                        </Typography></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                            </Table>\n                            */}\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\n\nexport const FarmsTableView = (props) => {\n    const balances = props.balances || [];\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - balances.length) : 0;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    let portfolioTableCols = 6;\n    props.isFarm ?\n        portfolioTableCols = 5//3\n    :\n        portfolioTableCols = 6;\n\n    // When we have rewards add\n    //\n    //<TableCell align=\"center\">LP</TableCell>\n    //<TableCell align=\"center\">Value</TableCell>\n    //<TableCell align=\"right\">Pending</TableCell>\n\n    //<TableCell align=\"right\">{token.lpprice && `$${token.lpprice.toFixed(4)}`}</TableCell>\n    //<TableCell align=\"right\">{token.value && `$${token.value.toFixed(6)}`}</TableCell>\n    //<TableCell align=\"right\">{token.pendingReward}</TableCell>\n\n    return (\n        <React.Fragment>\n            <div style={{width: 'auto', overflowX: 'scroll'}}>\n                <TableContainer>\n                    <StyledTable sx={{ minWidth: 500 }} size=\"small\" aria-label=\"Portfolio Table\">\n                        <TableHead>\n                            {props.isFarm ?\n                                <TableRow>\n                                    <TableCell><Typography variant=\"caption\">Platform</Typography></TableCell>\n                                    <TableCell><Typography variant=\"caption\">Asset</Typography></TableCell>\n                                    <TableCell align=\"right\"><Typography variant=\"caption\">Staked LP</Typography></TableCell>\n                                    <TableCell align=\"right\"><Typography variant=\"caption\">APR</Typography></TableCell>\n                                    <TableCell align=\"right\"><Typography variant=\"caption\">Value</Typography></TableCell>\n                                </TableRow>\n                            :\n                                <TableRow>\n                                    <TableCell sx={{width:\"1%\"}} />\n                                    <TableCell><Typography variant=\"caption\">Asset</Typography></TableCell>\n                                    <TableCell align=\"right\"><Typography variant=\"caption\">Balance</Typography></TableCell>\n                                    <TableCell align=\"right\"><Typography variant=\"caption\">Price</Typography></TableCell> \n                                    <TableCell align=\"right\"><Typography variant=\"caption\">Value</Typography></TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>\n                            }\n                        </TableHead>\n                        <TableBody>\n                            {(rowsPerPage > 0\n                                ? balances.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                : balances\n                            ).map((token, index) => {\n                                return props.isFarm ? \n                                    <React.Fragment>\n                                        <TableRow>\n                                            <TableCell style={{ verticalAlign: 'middle' }}>\n                                                <FarmIcon farmLogoURI={token.farmLogoURI} farmName={token.farmName} />\n                                            </TableCell>\n                                            <TableCell align=\"center\" style={{ verticalAlign: 'middle' }}>\n                                                <FarmStake stake={token.farmInfo} />\n                                            </TableCell>\n                                            <TableCell align=\"right\"><TokenFixPrice tokenFormatValue={token.balance} defaultFixed={6} /></TableCell>\n                                            <TableCell align=\"right\"><TokenFixPrice tokenFormatValue={token.apr} defaultFixed={2} />%</TableCell>\n                                            <TableCell align=\"right\"><Typography variant=\"caption\" sx={{color:\"#aaaaaa\"}}>$</Typography><TokenFixPrice tokenFormatValue={token.value} defaultFixed={2} /></TableCell>\n                                        </TableRow> \n                                    </React.Fragment>\n                                    : \n                                    <PortfolioRow token={token} index={index} />\n                            })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 53 * emptyRows }}>\n                                <TableCell colSpan={4} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                        <TableFooter>\n                        <TableRow>\n                            <TablePagination\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                            colSpan={portfolioTableCols}\n                            count={balances.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            SelectProps={{\n                                inputProps: {\n                                'aria-label': 'rows per page',\n                                },\n                                native: true,\n                            }}\n                            //onChangePage={handleChangePage}\n                            onPageChange={handleChangePage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                            ActionsComponent={TablePaginationActions}\n                            />\n                        </TableRow>\n                        </TableFooter>\n                    </StyledTable>\n                </TableContainer>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default FarmsTableView;","import { PublicKey } from '@solana/web3.js'\n\nexport const SYSTEM_PROGRAM_ID = new PublicKey('11111111111111111111111111111111')\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA')\nexport const MEMO_PROGRAM_ID = new PublicKey('Memo1UhkJRfHyvLMcVucJwxXeuD728EqVDDwQDxFMNo')\nexport const RENT_PROGRAM_ID = new PublicKey('SysvarRent111111111111111111111111111111111')\nexport const CLOCK_PROGRAM_ID = new PublicKey('SysvarC1ock11111111111111111111111111111111')\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL')\n\nexport const SERUM_PROGRAM_ID_V2 = 'EUqojwWA2rd19FZrzeBncJsm38Jm1hEhE3zsmX3bRc2o'\nexport const SERUM_PROGRAM_ID_V3 = '9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin'\n\nexport const LIQUIDITY_POOL_PROGRAM_ID_V2 = 'RVKd61ztZW9GUwhRbbLoYVRE5Xf1B2tVscKqwZqXgEr'\nexport const LIQUIDITY_POOL_PROGRAM_ID_V3 = '27haf8L6oxUeXrHrgEgsexjSY5hbVUWEmvv9Nyxg8vQv'\nexport const LIQUIDITY_POOL_PROGRAM_ID_V4 = '675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8'\n\nexport const STABLE_POOL_PROGRAM_ID = '5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h'\n\nexport const ROUTE_SWAP_PROGRAM_ID = '93BgeoLHo5AdNbpqy9bD12dtfxtA5M2fh3rj72bE35Y3'\n\nexport const STAKE_PROGRAM_ID = 'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q'\nexport const STAKE_PROGRAM_ID_V4 = 'CBuCnLe26faBpcBP2fktp4rp8abpcAnTWft6ZrP5Q4T'\nexport const STAKE_PROGRAM_ID_V5 = '9KEPoZmtHUrBbhWN1v1KWLMkkvwY6WLtAVUCPRtRjP4z'\n\nexport const IDO_PROGRAM_ID = '6FJon3QE27qgPVggARueB22hLvoh22VzJpXv4rBEoSLF'\nexport const IDO_PROGRAM_ID_V2 = 'CC12se5To1CdEuw7fDS27B7Geo5jJyL7t5UK2B44NgiH'\nexport const IDO_PROGRAM_ID_V3 = '9HzJyW1qZsEiSfMUf6L2jo3CcTKAyBmSyKdwQeYisHrC'\n\nexport const AUTHORITY_AMM = 'amm authority'\nexport const AMM_ASSOCIATED_SEED = 'amm_associated_seed'\nexport const TARGET_ASSOCIATED_SEED = 'target_associated_seed'\nexport const WITHDRAW_ASSOCIATED_SEED = 'withdraw_associated_seed'\nexport const OPEN_ORDER_ASSOCIATED_SEED = 'open_order_associated_seed'\nexport const COIN_VAULT_ASSOCIATED_SEED = 'coin_vault_associated_seed'\nexport const PC_VAULT_ASSOCIATED_SEED = 'pc_vault_associated_seed'\nexport const LP_MINT_ASSOCIATED_SEED = 'lp_mint_associated_seed'\nexport const TEMP_LP_TOKEN_ASSOCIATED_SEED = 'temp_lp_token_associated_seed'","// https://github.com/raydium-io/raydium-ui/blob/master/src/utils/tokens.ts\nimport { cloneDeep } from 'lodash-es'\n/*MAKE SURE TO RENAME FILE LOC FROM PROVIDER*/\nimport { TokenAmount } from './safe-math'\n\nexport interface TokenInfo {\n  symbol: string\n  name: string\n\n  mintAddress: string\n  decimals: number\n  totalSupply?: TokenAmount\n\n  referrer?: string\n\n  details?: string\n  docs?: object\n  socials?: object\n\n  tokenAccountAddress?: string\n  balance?: TokenAmount\n  tags: string[]\n}\n\n/**\n * Get token use symbol\n * @param {string} symbol\n * @returns {TokenInfo | null} tokenInfo\n */\n export function getTokenBySymbol(symbol: string): TokenInfo | null {\n  if (symbol === 'SOL') {\n    return cloneDeep(NATIVE_SOL)\n  }\n\n  let token = cloneDeep(TOKENS[symbol])\n\n  if (!token) {\n    token = null\n  }\n\n  return token\n}\n\n/**\n * Get token use mint addresses\n * @param {string} mintAddress\n * @returns {TokenInfo | null} tokenInfo\n */\nexport function getTokenByMintAddress(mintAddress: string): TokenInfo | null {\n  if (mintAddress === NATIVE_SOL.mintAddress) {\n    return cloneDeep(NATIVE_SOL)\n  }\n  const token = Object.values(TOKENS).find((item) => item.mintAddress === mintAddress)\n  return token ? cloneDeep(token) : null\n}\n\nexport function getTokenSymbolByMint(mint: string) {\n  if (mint === NATIVE_SOL.mintAddress) {\n    return NATIVE_SOL.symbol\n  }\n\n  const token = Object.values({ ...TOKENS, ...LP_TOKENS }).find((item) => item.mintAddress === mint)\n\n  if (token) {\n    return token.symbol\n  }\n  return 'UNKNOWN'\n}\n\nexport interface Tokens {\n  [key: string]: any\n  [index: number]: any\n}\n\nexport const TOKENS_TAGS: { [key: string]: { mustShow: boolean; show: boolean; outName: string } } = {\n  raydium: { mustShow: true, show: true, outName: 'Raydium Default List' },\n  userAdd: { mustShow: true, show: true, outName: 'User Added Tokens' },\n  solana: { mustShow: false, show: false, outName: 'Solana Token List' },\n  unofficial: { mustShow: false, show: true, outName: 'Permissionless Pool Tokens' }\n}\n\nexport const NATIVE_SOL: TokenInfo = {\n  symbol: 'SOL',\n  name: 'Native Solana',\n  mintAddress: '11111111111111111111111111111111',\n  decimals: 9,\n  tags: ['raydium']\n}\n\nexport const TOKENS: Tokens = {\n  WSOL: {\n    symbol: 'WSOL',\n    name: 'Wrapped Solana',\n    mintAddress: 'So11111111111111111111111111111111111111112',\n    decimals: 9,\n    referrer: 'HTcarLHe7WRxBQCWvhVB8AP56pnEtJUV2jDGvcpY3xo5',\n    tags: ['raydium']\n  },\n  BTC: {\n    symbol: 'BTC',\n    name: 'Wrapped Bitcoin',\n    mintAddress: '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E',\n    decimals: 6,\n    referrer: 'GZpS8cY8Nt8HuqxzJh6PXTdSxc38vFUjBmi7eEUkkQtG',\n    tags: ['raydium']\n  },\n  ETH: {\n    symbol: 'ETH',\n    name: 'Wrapped Ethereum',\n    mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',\n    decimals: 6,\n    referrer: 'CXPTcSxxh4AT38gtv3SPbLS7oZVgXzLbMb83o4ziXjjN',\n    tags: ['raydium']\n  },\n  USDT: {\n    symbol: 'USDT',\n    name: 'USDT',\n    mintAddress: 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n    decimals: 6,\n    referrer: '8DwwDNagph8SdwMUdcXS5L9YAyutTyDJmK6cTKrmNFk3',\n    tags: ['raydium']\n  },\n  WUSDT: {\n    symbol: 'WUSDT',\n    name: 'Wrapped USDT',\n    mintAddress: 'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',\n    decimals: 6,\n    referrer: 'CA98hYunCLKgBuD6N8MJSgq1GbW9CXdksLf5mw736tS3',\n    tags: ['raydium']\n  },\n  USDC: {\n    symbol: 'USDC',\n    name: 'USDC',\n    mintAddress: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n    decimals: 6,\n    referrer: '92vdtNjEg6Zth3UU1MgPgTVFjSEzTHx66aCdqWdcRkrg',\n    tags: ['raydium']\n  },\n  WUSDC: {\n    symbol: 'WUSDC',\n    name: 'Wrapped USDC',\n    mintAddress: 'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  YFI: {\n    symbol: 'YFI',\n    name: 'Wrapped YFI',\n    mintAddress: '3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB',\n    decimals: 6,\n    referrer: 'DZjgzKfYzZBBSTo5vytMYvGdNF933DvuX8TftDMrThrb',\n    tags: ['raydium']\n  },\n  LINK: {\n    symbol: 'LINK',\n    name: 'Wrapped Chainlink',\n    mintAddress: 'CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG',\n    decimals: 6,\n    referrer: 'DRSKKsYZaPEFkRgGywo7KWBGZikf71R9aDr8tjtpr41V',\n    tags: ['raydium']\n  },\n  XRP: {\n    symbol: 'XRP',\n    name: 'Wrapped XRP',\n    mintAddress: 'Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8',\n    decimals: 6,\n    referrer: '6NeHPXG142tAE2Ej3gHgT2N66i1KH6PFR6PBZw6RyrwH',\n    tags: ['raydium']\n  },\n  SUSHI: {\n    symbol: 'SUSHI',\n    name: 'Wrapped SUSHI',\n    mintAddress: 'AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy',\n    decimals: 6,\n    referrer: '59QxHeHgb28tDc3gStnrW8FNKC9qWuRmRZHBaAqCerJX',\n    tags: ['raydium']\n  },\n  ALEPH: {\n    symbol: 'ALEPH',\n    name: 'Wrapped ALEPH',\n    mintAddress: 'CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K',\n    decimals: 6,\n    referrer: '8FKAKrenJMDd7V6cxnM5BsymHTjqxgodtHbLwZReMnWW',\n    tags: ['raydium']\n  },\n  SXP: {\n    symbol: 'SXP',\n    name: 'Wrapped SXP',\n    mintAddress: 'SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX',\n    decimals: 6,\n    referrer: '97Vyotr284UM2Fyq9gbfQ3azMYtgf7cjnsf8pN1PFfY9',\n    tags: ['raydium']\n  },\n  HGET: {\n    symbol: 'HGET',\n    name: 'Wrapped HGET',\n    mintAddress: 'BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN',\n    decimals: 6,\n    referrer: 'AGY2wy1ANzLM2jJLSkVxPUYAY5iAYXYsLMQkoQsAhucj',\n    tags: ['raydium']\n  },\n  CREAM: {\n    symbol: 'CREAM',\n    name: 'Wrapped CREAM',\n    mintAddress: '5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv',\n    decimals: 6,\n    referrer: '7WPzEiozJ69MQe8bfbss1t2unR6bHR4S7FimiUVRgu7P',\n    tags: ['raydium']\n  },\n  UNI: {\n    symbol: 'UNI',\n    name: 'Wrapped UNI',\n    mintAddress: 'DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw',\n    decimals: 6,\n    referrer: '4ntxDv95ajBbXfZyGy3UhcQDx8xmH1yJ6eKvuNNH466x',\n    tags: ['raydium']\n  },\n  SRM: {\n    symbol: 'SRM',\n    name: 'Serum',\n    mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n    decimals: 6,\n    referrer: 'HYxa4Ea1dz7ya17Cx18rEGUA1WbCvKjXjFKrnu8CwugH',\n    tags: ['raydium']\n  },\n  FTT: {\n    symbol: 'FTT',\n    name: 'Wrapped FTT',\n    mintAddress: 'AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3',\n    decimals: 6,\n    referrer: 'CafpgSh8KGL2GPTjdXfctD3vXngNZDJ3Q92FTfV71Hmt',\n    tags: ['raydium']\n  },\n  MSRM: {\n    symbol: 'MSRM',\n    name: 'MegaSerum',\n    mintAddress: 'MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L',\n    decimals: 0,\n    referrer: 'Ge5q9x8gDUNYqqLA1MdnCzWNJGsbj3M15Yxse2cDbw9z',\n    tags: ['raydium']\n  },\n  TOMO: {\n    symbol: 'TOMO',\n    name: 'Wrapped TOMO',\n    mintAddress: 'GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd',\n    decimals: 6,\n    referrer: '9fexfN3eZomF5gfenG5L9ydbKRQkPhq6x74rb5iLrvXP',\n    tags: ['raydium']\n  },\n  KARMA: {\n    symbol: 'KARMA',\n    name: 'Wrapped KARMA',\n    mintAddress: 'EcqExpGNFBve2i1cMJUTR4bPXj4ZoqmDD2rTkeCcaTFX',\n    decimals: 4,\n    tags: ['raydium']\n  },\n  LUA: {\n    symbol: 'LUA',\n    name: 'Wrapped LUA',\n    mintAddress: 'EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX',\n    decimals: 6,\n    referrer: 'HuZwNApjVFuFSDgrwZA8GP2JD7WMby4qt6rkWDnaMo7j',\n    tags: ['raydium']\n  },\n  MATH: {\n    symbol: 'MATH',\n    name: 'Wrapped MATH',\n    mintAddress: 'GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza',\n    decimals: 6,\n    referrer: 'C9K1M8sJX8WMdsnFT7DuzdiHHunEj79EsLuz4DixQYGm',\n    tags: ['raydium']\n  },\n  KEEP: {\n    symbol: 'KEEP',\n    name: 'Wrapped KEEP',\n    mintAddress: 'GUohe4DJUA5FKPWo3joiPgsB7yzer7LpDmt1Vhzy3Zht',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SWAG: {\n    symbol: 'SWAG',\n    name: 'Wrapped SWAG',\n    mintAddress: '9F9fNTT6qwjsu4X4yWYKZpsbw5qT7o6yR2i57JF2jagy',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  FIDA: {\n    symbol: 'FIDA',\n    name: 'Bonfida',\n    mintAddress: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp',\n    decimals: 6,\n    referrer: 'AeAsG75UmyPDB271c6NHonHxXAPXfkvhcf2xjfJhReS8',\n    tags: ['raydium']\n  },\n  KIN: {\n    symbol: 'KIN',\n    name: 'KIN',\n    mintAddress: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',\n    decimals: 5,\n    referrer: 'AevFXmApVxN2yk1iemSxXc6Wy7Z1udUEfST11kuYKmr9',\n    tags: ['raydium']\n  },\n  MAPS: {\n    symbol: 'MAPS',\n    name: 'MAPS',\n    mintAddress: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  OXY: {\n    symbol: 'OXY',\n    name: 'OXY',\n    mintAddress: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  RAY: {\n    symbol: 'RAY',\n    name: 'Raydium',\n    mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n    decimals: 6,\n    referrer: '33XpMmMQRf6tSPpmYyzpwU4uXpZHkFwCZsusD9dMYkjy',\n    tags: ['raydium']\n  },\n  xCOPE: {\n    symbol: 'xCOPE',\n    name: 'xCOPE',\n    mintAddress: '3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE',\n    decimals: 0,\n    referrer: '8DTehuES4tfnd2SrqcjN52XofxWXGjiLZRgM12U9pB6f',\n    tags: ['raydium']\n  },\n  COPE: {\n    symbol: 'COPE',\n    name: 'COPE',\n    mintAddress: '8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh',\n    decimals: 6,\n    referrer: 'G7UYwWhkmgeL57SUKFF45K663V9TdXZw6Ho6ZLQ7p4p',\n    tags: ['raydium']\n  },\n  STEP: {\n    symbol: 'STEP',\n    name: 'STEP',\n    mintAddress: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT',\n    decimals: 9,\n    referrer: 'EFQVX1S6dFroDDhJDAnMTX4fCfjt4fJXHdk1eEtJ2uRY',\n    tags: ['raydium']\n  },\n  MEDIA: {\n    symbol: 'MEDIA',\n    name: 'MEDIA',\n    mintAddress: 'ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs',\n    decimals: 6,\n    referrer: 'AYnaG3AidNWFzjq9U3BJSsQ9DShE8g7FszriBDtRFvsx',\n\n    details:\n      'Media Network is a new protocol that bypasses traditional CDN providers’ centralized approach for a self-governed and open source solution where everyone can participate. Media Network creates a distributed bandwidth market that enables service providers such as media platforms to hire resources from the network and dynamically come and go as the demand for last-mile data delivery shifts. It allows anyone to organically serve content without introducing any trust assumptions or pre-authentication requirements. Participants earn MEDIA rewards for their bandwidth contributions, a fixed supply SPL token minted on Solana’s Blockchain.',\n    docs: {\n      website: 'https://media.network/',\n      whitepaper: 'https://media.network/whitepaper.pdf'\n    },\n    socials: {\n      Twitter: 'https://twitter.com/Media_FDN',\n      Telegram: 'https://t.me/Media_FDN',\n      Medium: 'https://mediafoundation.medium.com/'\n    },\n    tags: ['raydium']\n  },\n  ROPE: {\n    symbol: 'ROPE',\n    name: 'ROPE',\n    mintAddress: '8PMHT4swUMtBzgHnh5U564N5sjPSiUz2cjEQzFnnP1Fo',\n    decimals: 9,\n    referrer: '5sGVVniBSPLTwRHDETShovq7STRH2rJwbvdvvH3NcVTF',\n    tags: ['raydium']\n  },\n  MER: {\n    symbol: 'MER',\n    name: 'Mercurial',\n    mintAddress: 'MERt85fc5boKw3BW1eYdxonEuJNvXbiMbs6hvheau5K',\n    decimals: 6,\n    referrer: '36F4ryvqaNW2yKQsAry4ZHCZ3j7tz3gtEz7NEwv7pSRu',\n\n    details:\n      'Mercurial Finance\\nMercurial is building DeFi’s first dynamic vaults for stable assets on Solana, providing the technical tools for users to easily deposit, swap and mint stable assets.\\n\\nInnovations\\nMercurial will be introducing several key new technical innovations, including on-chain algorithms to regulate the flow of assets and dynamic fees that tap on the market and price data to assist LPs in optimizing performance. We will also be developing a unique pricing curve that will be the first to combine high efficiency, multi-token support, and generalizability for all types of token sets.\\n\\nMaximizing Capital Utlilization\\nMercurial vaults will dynamically utilize assets for a wide range of use cases, like low slippage swaps, lending, flash loans, and external third-party decentralized protocols. To increase pegged assets availability on Solana, we will allow the creation of synthetics, like mUSD or mBTC, which can be added to our vaults to improve liquidity for other stables and facilitate interaction with other third-party decentralized protocols.\\n\\nStarting with a vault for the most common stables, for example, USDC, USDT, wUSDC, and wDAI, we will be facilitating low slippage swaps with dynamic fees. Features will be added as key technical and ecosystem pieces become available on Solana, i.e. inter-program composability, price oracles, etc.\\n\\nMER\\nThe MER token will be used to accrue value for the holder via fees from swaps, commission from yield farms, and as collateral for synthetic stables like mUSD. MER will also be intrinsically linked to the governance and growth of Mercurial, playing a crucial role in regulating the system across governance, insurance, and bootstrapping.',\n    docs: {\n      website: 'https://www.mercurial.finance/',\n      whitepaper: 'https://www.mercurial.finance/Mercurial-Lite-Paper-v1.pdf'\n    },\n    socials: {\n      Twitter: 'https://twitter.com/MercurialFi',\n      Telegram: 'https://t.me/MercurialFi',\n      Medium: 'https://mercurialfi.medium.com/'\n    },\n    tags: ['raydium']\n  },\n  TULIP: {\n    symbol: 'TULIP',\n    name: 'TULIP',\n    mintAddress: 'TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs',\n    decimals: 6,\n    referrer: 'Bcw1TvX8jUj6CtY2a7GU2THeYVAudvmT8yzRypVMVsSH',\n    tags: ['raydium']\n  },\n  SNY: {\n    symbol: 'SNY',\n    name: 'SNY',\n    mintAddress: '4dmKkXNHdgYsXqBHCuMikNQWwVomZURhYvkkX5c4pQ7y',\n    decimals: 6,\n    referrer: 'G7gyaTNn2hgjF67SWs4Ee9PEaFU2xadhtXL8HmkJ2cNL',\n\n    detailLink: 'https://raydium.medium.com/synthetify-launching-on-acceleraytor-3755b4903f88',\n    details:\n      'Synthetify is a decentralized protocol that allows for the creation and exchange of synthetic assets that closely track the price of underlying assets. Synthetify’s synthetics adhere to the SPL token standard, allowing them to be easily integrated with DeFi applications across the Solana ecosystem.\\n\\nSynthetify leverages Solana to enable a fast, cheap and intuitive trading experience for users of the platform while staying fully decentralized thanks to an infrastructure that relies on smart contracts and blockchain oracles.\\n\\nThe Synthetify Token (SNY) gives the ability to participate in the protocol through staking. Stakers receive a pro rata share of fees generated by the exchange as well as additional rewards. SNY acts as a collateral token for all synthetic assets created on the platform and each token will have voting power on future governance proposals.',\n    docs: {\n      website: 'https://synthetify.io/',\n      whitepaper: 'https://resources.synthetify.io/synthetify-whitepaper.pdf'\n    },\n    socials: {\n      Twitter: 'https://twitter.com/synthetify',\n      Telegram: 'https://t.me/synthetify',\n      Medium: 'https://synthetify.medium.com/'\n    },\n    tags: ['raydium']\n  },\n  SLRS: {\n    symbol: 'SLRS',\n    name: 'SLRS',\n    mintAddress: 'SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr',\n    decimals: 6,\n    referrer: 'AmqeHgTdm6kBzy5ewZFKuMAfbynZmhve1GQxbJzQFLbP',\n\n    detailLink: 'https://raydium.medium.com/solrise-is-launching-on-acceleraytor-c2c980362037',\n    details:\n      'Solrise Finance is a fully decentralized and non-custodial protocol for investment funds on Solana. What this means in practice is that anyone can open a fund, and anyone can invest in it.\\n\\nSolrise’s platform allows fund managers from all across the globe — weWether they are well-established and looking for a new channel, or ambitious rookies with something to prove — to open a fund, with performance kept completely transparent.\\n\\nExisting decentralized fund management platforms on Ethereum are suffering from brutally high transaction fees. With Solrise, you can create, enter, and exit funds all for under $0.01.',\n    docs: {\n      website: 'https://solrise.finance/',\n      docs: 'https://docs.solrise.finance/'\n    },\n    socials: {\n      Twitter: 'https://twitter.com/SolriseFinance',\n      Telegram: 'https://t.me/solrisefinance',\n      Medium: 'https://blog.solrise.finance/'\n    },\n    tags: ['raydium']\n  },\n  WOO: {\n    symbol: 'WOO',\n    name: 'Wootrade Network',\n    mintAddress: 'E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy',\n    decimals: 6,\n    referrer: '7UbeAZxpza5zN3QawQ5KsUo88zXvohUncYB9Zk5QCiim',\n    tags: ['raydium']\n  },\n  BOP: {\n    symbol: 'BOP',\n    name: 'Boring Protocol',\n    mintAddress: 'BLwTnYKqf7u4qjgZrrsKeNs2EzWkMLqVCu6j8iHyrNA3',\n    decimals: 8,\n    referrer: 'FWxBZmNsvNckx8DnaL2NuyMtiQmT1x529WwV4e1UWiGk',\n    tags: ['raydium']\n  },\n  SAMO: {\n    symbol: 'SAMO',\n    name: 'Samoyed Coin',\n    mintAddress: '7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU',\n    decimals: 9,\n    referrer: 'FnMDNFL9t8EpbADSU3hLWBtx7SuwRBB6NM84U3PzSkUu',\n    tags: ['raydium']\n  },\n  renBTC: {\n    symbol: 'renBTC',\n    name: 'renBTC',\n    mintAddress: 'CDJWUqTcYTVAKXAVXoQZFes5JUFc7owSeq7eMQcDSbo5',\n    decimals: 8,\n    referrer: '7rr64uygy3o5RKVeNv12JGDUFMXVdr2YHvA3NTxzbZT6',\n    tags: ['raydium']\n  },\n  renDOGE: {\n    symbol: 'renDOGE',\n    name: 'renDOGE',\n    mintAddress: 'ArUkYE2XDKzqy77PRRGjo4wREWwqk6RXTfM9NeqzPvjU',\n    decimals: 8,\n    referrer: 'J5g7uvJRGnpRyLnRQjFs1MqMkiTVgjxVJCXocu4B4BcZ',\n    tags: ['raydium']\n  },\n  LIKE: {\n    symbol: 'LIKE',\n    name: 'LIKE',\n    mintAddress: '3bRTivrVsitbmCTGtqwp7hxXPsybkjn4XLNtPsHqa3zR',\n    decimals: 9,\n    referrer: '2rnVeVGfM88XqyNyBzGWEb7JViYKqncFzjWq5h1ujS9A',\n\n    detailLink: 'https://raydium.medium.com/only1-is-launching-on-acceleraytor-41ecb89dcc4e',\n    details:\n      'Only1 is the first NFT-powered social platform built on the Solana blockchain. Mixing social media, an NFT marketplace, a scalable blockchain, and the native token — $LIKE, Only1 offers fans a unique way of connecting with the creators they love.\\n\\nBy using the Only1 platform, fans will have the ability to invest, access, and earn from the limited edition contents created by the world’s largest influencers/celebrities, all powered by NFTs.',\n    docs: {\n      website: 'https://only1.io/',\n      whitepaper: 'https://only1.io/pitch-deck.pdf'\n    },\n    socials: {\n      Twitter: 'https://twitter.com/only1nft',\n      Telegram: 'https://t.me/only1nft',\n      Medium: 'https://medium.com/@only1nft',\n      Discord: 'https://discord.gg/sUu7KZwNCB'\n    },\n    tags: ['raydium']\n  },\n  DXL: {\n    symbol: 'DXL',\n    name: 'DXL',\n    mintAddress: 'GsNzxJfFn6zQdJGeYsupJWzUAm57Ba7335mfhWvFiE9Z',\n    decimals: 6,\n    referrer: 'HF7mhT9YgD5CULAFDYQmhnUMi1FnNbKeBFCy9SZDh2XE',\n    tags: ['raydium']\n  },\n  mSOL: {\n    symbol: 'mSOL',\n    name: 'Marinade staked SOL (mSOL)',\n    mintAddress: 'mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So',\n    decimals: 9,\n    referrer: '7h5bckf8P29RdviNoKjDyH3Ky3uwdrBiPgYuSCD4asV5',\n    tags: ['raydium']\n  },\n  PAI: {\n    symbol: 'PAI',\n    name: 'PAI (Parrot)',\n    mintAddress: 'Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS',\n    decimals: 6,\n    referrer: '54X98LAxRR2j1KMBBXkbYyUaAWi1iKW9G1Y4TnTJVY2e',\n    tags: ['raydium']\n  },\n  PORT: {\n    symbol: 'PORT',\n    name: 'PORT',\n    mintAddress: 'PoRTjZMPXb9T7dyU7tpLEZRQj7e6ssfAE62j2oQuc6y',\n    decimals: 6,\n    referrer: '5Ve8q9fb7R2DhdqGV4o1RVy7xxo4D6ifQfbxGiASdxEH',\n    tags: ['raydium']\n  },\n  MNGO: {\n    symbol: 'MNGO',\n    name: 'Mango',\n    mintAddress: 'MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac',\n    decimals: 6,\n    referrer: 'CijuvE6qDpxZ5WqdEQEe7mS11fXEKiiHc7RR8wRiGzjY',\n    tags: ['raydium']\n  },\n  CRP: {\n    symbol: 'CRP',\n    name: 'CRP',\n    mintAddress: 'DubwWZNWiNGMMeeQHPnMATNj77YZPZSAz2WVR5WjLJqz',\n    decimals: 9,\n    referrer: 'FKocyVJptELTbnkUkDRmT7y6hUem2JYrqHoph9uyvQXt',\n    tags: ['raydium']\n  },\n  ATLAS: {\n    symbol: 'ATLAS',\n    name: 'ATLAS',\n    mintAddress: 'ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx',\n    decimals: 8,\n    referrer: '9t9mzbkMtLdazj1D9JycS15Geb1KVtcDt4XyAkpM72Ee',\n\n    detailLink: 'https://raydium.medium.com/star-atlas-is-launching-on-acceleraytor-fa35cfe3291f',\n    details:\n      'POLIS is the primary governance token of Star Atlas.\\n\\nStar Atlas is a grand strategy game that combines space exploration, territorial conquest, and political domination. In the distant future, players can join one of three galactic factions to directly influence the course of the metaverse and earn real-world income for their contributions.\\n\\nThe Star Atlas offers a unique gaming experience by combining block chain mechanics with traditional game mechanics. All assets in the metaverse are directly owned by players, and can be traded on the marketplace or exchanged on other cryptocurrency networks.',\n    docs: {\n      website: 'https://staratlas.com/',\n      whitepaper: 'https://staratlas.com/files/star-atlas-white-paper.pdf'\n    },\n    socials: {\n      Twitter: 'https://twitter.com/staratlas',\n      Telegram: 'https://t.me/staratlasgame',\n      Medium: 'https://medium.com/star-atlas',\n      Discord: 'https://discord.gg/staratlas',\n      Twitch: 'https://www.twitch.tv/staratlasgame',\n      Youtube: 'https://www.youtube.com/channel/UCt-y8Npwje5KDG5MSZ0a9Jw/videos'\n    },\n    tags: ['raydium']\n  },\n  POLIS: {\n    symbol: 'POLIS',\n    name: 'POLIS',\n    mintAddress: 'poLisWXnNRwC6oBu1vHiuKQzFjGL4XDSu4g9qjz9qVk',\n    decimals: 8,\n    referrer: 'CQ7HWCeSSp3tAfWzqH7ZEzgnTBr5Tvz1No3Y1xbiWzBm',\n\n    detailLink: 'https://raydium.medium.com/star-atlas-is-launching-on-acceleraytor-fa35cfe3291f',\n    details:\n      'POLIS is the primary governance token of Star Atlas.\\n\\nStar Atlas is a grand strategy game that combines space exploration, territorial conquest, and political domination. In the distant future, players can join one of three galactic factions to directly influence the course of the metaverse and earn real-world income for their contributions.\\n\\nThe Star Atlas offers a unique gaming experience by combining block chain mechanics with traditional game mechanics. All assets in the metaverse are directly owned by players, and can be traded on the marketplace or exchanged on other cryptocurrency networks.',\n    docs: {\n      website: 'https://staratlas.com/',\n      whitepaper: 'https://staratlas.com/files/star-atlas-white-paper.pdf'\n    },\n    socials: {\n      Twitter: 'https://twitter.com/staratlas',\n      Telegram: 'https://t.me/staratlasgame',\n      Medium: 'https://medium.com/star-atlas',\n      Discord: 'https://discord.gg/staratlas',\n      Twitch: 'https://www.twitch.tv/staratlasgame',\n      Youtube: 'https://www.youtube.com/channel/UCt-y8Npwje5KDG5MSZ0a9Jw/videos'\n    },\n    tags: ['raydium']\n  },\n  GRAPE: {\n    symbol: 'GRAPE',\n    name: 'GRAPE',\n    mintAddress: '8upjSpvjcdpuzhfR1zriwg5NXkwDruejqNE9WNbPRtyA',\n    decimals: 6,\n    referrer: 'M4nDMB9krXbaNFPVu1DjrBTfqPUHbKEQLZSSDNH2JrL',\n\n    detailLink: 'https://raydium.medium.com/grape-protocol-launching-on-acceleraytor-547f58c12937',\n    details:\n      'The GRAPE “Great Ape” community is a token-based membership community focused on accelerating the growth and adoption of Solana. GRAPE token holders at different tiers are rewarded with exclusive benefits and monthly emissions of GRAPE. You can find more details on the GRAPE membership tiers and benefits here.\\n\\nThe GRAPE toolset creates a framework for decentralized and tokenized communities to better organize and coordinate their activities, unlocking a whole new world of possibility for these dynamic groups. The GRAPE roadmap includes modules for DAO Management, non-custodial tipping, escrow, and event planning to be deployed in the next 6 months.\\n\\nGRAPE protocol’s first tool, Grape Access, creates a Dynamic Balance-Based Membership solution by connecting members’ social accounts to cryptographic keys. All Solana tokens are supported by Multi-Coin configurations, which grants users permission and access rights based on SPL tokens, token pairs, and LP tokens in their wallet.',\n    docs: {\n      website: 'https://grapes.network/'\n      // whitepaper: '' // TODO\n    },\n    socials: {\n      Discord: 'https://discord.com/invite/greatape',\n      Medium: 'https://medium.com/great-ape',\n      Twitter: 'https://twitter.com/grapeprotocol',\n      Twitch: 'https://www.twitch.tv/whalesfriend'\n    },\n    tags: ['raydium']\n  },\n  GENE: {\n    symbol: 'GENE',\n    name: 'Genopets',\n    mintAddress: 'GENEtH5amGSi8kHAtQoezp1XEXwZJ8vcuePYnXdKrMYz',\n    decimals: 9,\n\n    detailLink: 'https://raydium.medium.com/genopets-is-launching-on-acceleraytor-a4cba0b9f78b',\n    details:\n      'Genopets is the world’s first Free-to-Play, Move-to-Earn NFT game that makes it fun and rewarding to live an active lifestyle. Build on Solana, Genopets integrates your daily activity in real life with blockchain Play-to-Earn economics so you can turn your real-life actions into expansive gameplay and earn crypto while doing it.',\n    docs: {\n      website: 'https://www.genopets.me/'\n      // whitepaper: ''\n    },\n    socials: {\n      Discord: 'https://discord.gg/genopets',\n      Medium: 'https://medium.com/@genopets',\n      Twitter: 'https://twitter.com/genopets'\n    },\n    tags: ['raydium']\n  },\n  DFL: {\n    symbol: 'DFL',\n    name: 'DeFi Land',\n    mintAddress: 'DFL1zNkaGPWm1BqAVqRjCZvHmwTFrEaJtbzJWgseoNJh',\n    decimals: 9,\n\n    detailLink: 'https://raydium.medium.com/defi-land-is-launching-on-acceleraytor-8aa06caecc3c',\n    details:\n      'DeFi Land is a multi-chain agriculture simulation web game created to gamify decentralized finance. The game will have all the features that traditional platforms have, but it will be gathered all in one place. DeFi Land gamifies decentralized finance by turning investment activities into games.',\n    docs: {\n      website: 'https://defiland.app/'\n      // whitepaper: ''\n    },\n    socials: {\n      Discord: 'https://discord.gg/defiland',\n      Medium: 'https://defiland.medium.com/',\n      Twitter: 'https://twitter.com/DeFi_Land',\n      Telegram: 'https://t.me/defiland_official'\n    },\n    tags: ['raydium']\n  },\n  CHEEMS: {\n    symbol: 'CHEEMS',\n    name: 'CHEEMS',\n    mintAddress: '3FoUAsGDbvTD6YZ4wVKJgTB76onJUKz7GPEBNiR5b8wc',\n    decimals: 4,\n    referrer: '',\n    tags: ['raydium']\n  },\n  stSOL: {\n    symbol: 'stSOL',\n    name: 'stSOL',\n    mintAddress: '7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj',\n    decimals: 9,\n    referrer: '8Mq4Tugv1fcT4gb1wf5ChdEFmdqNGKxFVCnM9TVe44vD',\n    tags: ['raydium']\n  },\n  LARIX: {\n    symbol: 'LARIX',\n    name: 'LARIX',\n    mintAddress: 'Lrxqnh6ZHKbGy3dcrCED43nsoLkM1LTzU2jRfWe8qUC',\n    decimals: 6,\n    referrer: 'DReKowvoxxEDdi5jnxBWJLTV73D9oHSt9uNMuSCk9cLk',\n    tags: ['raydium']\n  },\n  RIN: {\n    symbol: 'RIN',\n    name: 'RIN',\n    mintAddress: 'E5ndSkaB17Dm7CsD22dvcjfrYSDLCxFcMd6z8ddCk5wp',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  APEX: {\n    symbol: 'APEX',\n    name: 'APEX',\n    mintAddress: '51tMb3zBKDiQhNwGqpgwbavaGH54mk8fXFzxTc1xnasg',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  MNDE: {\n    symbol: 'MNDE',\n    name: 'MNDE',\n    mintAddress: 'MNDEFzGvMt87ueuHvVU9VcTqsAP5b3fTGPsHuuPA5ey',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  LIQ: {\n    symbol: 'LIQ',\n    name: 'LIQ',\n    mintAddress: '4wjPQJ6PrkC4dHhYghwJzGBVP78DkBzA2U3kHoFNBuhj',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  WAG: {\n    symbol: 'WAG',\n    name: 'WAG',\n    mintAddress: '5tN42n9vMi6ubp67Uy4NnmM5DMZYN8aS8GeB3bEDHr6E',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  wLDO: {\n    symbol: 'wLDO',\n    name: 'wLDO',\n    mintAddress: 'HZRCwxP2Vq9PCpPXooayhJ2bxTpo5xfpQrwB1svh332p',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  SLIM: {\n    symbol: 'SLIM',\n    name: 'SLIM',\n    mintAddress: 'xxxxa1sKNGwFtw2kFn8XauW9xq8hBZ5kVtcSesTT9fW',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  PRT: {\n    symbol: 'PRT',\n    name: 'PRT',\n    mintAddress: 'PRT88RkA4Kg5z7pKnezeNH4mafTvtQdfFgpQTGRjz44',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SBR: {\n    symbol: 'SBR',\n    name: 'SBR',\n    mintAddress: 'Saber2gLauYim4Mvftnrasomsv6NvAuncvMEZwcLpD1',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  FAB: {\n    symbol: 'FAB',\n    name: 'FAB',\n    mintAddress: 'EdAhkbj5nF9sRM7XN7ewuW8C9XEUMs8P7cnoQ57SYE96',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  ABR: {\n    symbol: 'ABR',\n    name: 'ABR',\n    mintAddress: 'a11bdAAuV8iB2fu7X6AxAvDTo1QZ8FXB3kk5eecdasp',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  IVN: {\n    symbol: 'IVN',\n    name: 'IVN',\n    mintAddress: 'iVNcrNE9BRZBC9Aqf753iZiZfbszeAVUoikgT9yvr2a',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  CYS: {\n    symbol: 'CYS',\n    name: 'CYS',\n    mintAddress: 'BRLsMczKuaR5w9vSubF4j8HwEGGprVAyyVgS4EX7DKEg',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  FRKT: {\n    symbol: 'FRKT',\n    name: 'FRKT',\n    mintAddress: 'ErGB9xa24Szxbk1M28u2Tx8rKPqzL6BroNkkzk5rG4zj',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  AURY: {\n    symbol: 'AURY',\n    name: 'AURY',\n    mintAddress: 'AURYydfxJib1ZkTir1Jn1J9ECYUtjb6rKQVmtYaixWPP',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  SYP: {\n    symbol: 'SYP',\n    name: 'SYP',\n    mintAddress: 'FnKE9n6aGjQoNWRBZXy4RW6LZVao7qwBonUbiD7edUmZ',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  WOOF: {\n    symbol: 'WOOF',\n    name: 'WOOF',\n    mintAddress: '9nEqaUcb16sQ3Tn1psbkWqyhPdLmfHWjKGymREjsAgTE',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  ORCA: {\n    symbol: 'ORCA',\n    name: 'ORCA',\n    mintAddress: 'orcaEKTdK7LKz57vaAYr9QeNsVEPfiu6QeMU1kektZE',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SLND: {\n    symbol: 'SLND',\n    name: 'SLND',\n    mintAddress: 'SLNDpmoWTVADgEdndyvWzroNL7zSi1dF9PC3xHGtPwp',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  weWETH: {\n    symbol: 'weWETH',\n    name: 'weWETH',\n    mintAddress: '7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  weUNI: {\n    symbol: 'weUNI',\n    name: 'weUNI',\n    mintAddress: '8FU95xFJhUUkyyCLU13HSzDLs7oC4QZdXQHL6SCeab36',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  weSUSHI: {\n    symbol: 'weSUSHI',\n    name: 'weSUSHI',\n    mintAddress: 'ChVzxWRmrTeSgwd3Ui3UumcN8KX7VK3WaD4KGeSKpypj',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  GOFX: {\n    symbol: 'GOFX',\n    name: 'GOFX',\n    mintAddress: 'GFX1ZjR2P15tmrSwow6FjyDYcEkoFb4p4gJCpLBjaxHD',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  IN: {\n    symbol: 'IN',\n    name: 'IN',\n    mintAddress: 'inL8PMVd6iiW3RCBJnr5AsrRN6nqr4BTrcNuQWQSkvY',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  weDYDX: {\n    symbol: 'weDYDX',\n    name: 'weDYDX',\n    mintAddress: '4Hx6Bj56eGyw8EJrrheM6LBQAvVYRikYCWsALeTrwyRU',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  STARS: {\n    symbol: 'STARS',\n    name: 'STARS',\n    mintAddress: 'HCgybxq5Upy8Mccihrp7EsmwwFqYZtrHrsmsKwtGXLgW',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  weAXS: {\n    symbol: 'weAXS',\n    name: 'weAXS',\n    mintAddress: 'HysWcbHiYY9888pHbaqhwLYZQeZrcQMXKQWRqS7zcPK5',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  weSHIB: {\n    symbol: 'weSHIB',\n    name: 'weSHIB',\n    mintAddress: 'CiKu4eHsVrc1eueVQeHn7qhXTcVu95gSQmBpX4utjL9z',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  OXS: {\n    symbol: 'OXS',\n    name: 'OXS',\n    mintAddress: '4TGxgCSJQx2GQk9oHZ8dC5m3JNXTYZHjXumKAW3vLnNx',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  CWAR: {\n    symbol: 'CWAR',\n    name: 'CWAR',\n    mintAddress: 'HfYFjMKNZygfMC8LsQ8LtpPsPxEJoXJx4M6tqi75Hajo',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  UPS: {\n    symbol: 'UPS',\n    name: 'UPS',\n    mintAddress: 'EwJN2GqUGXXzYmoAciwuABtorHczTA5LqbukKXV1viH7',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  weSAND: {\n    symbol: 'weSAND',\n    name: 'weSAND',\n    mintAddress: '49c7WuCZkQgc3M4qH8WuEUNXfgwupZf1xqWkDQ7gjRGt',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  weMANA: {\n    symbol: 'weMANA',\n    name: 'weMANA',\n    mintAddress: '7dgHoN8wBZCc5wbnQ2C47TDnBMAxG4Q5L3KjP67z8kNi',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  CAVE: {\n    symbol: 'CAVE',\n    name: 'CAVE',\n    mintAddress: '4SZjjNABoqhbd4hnapbvoEPEqT8mnNkfbEoAwALf1V8t',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  JSOL: {\n    symbol: 'JSOL',\n    name: 'JSOL',\n    mintAddress: '7Q2afV64in6N6SeZsAAB81TJzwDoD6zpqmHkzi9Dcavn',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  APT: {\n    symbol: 'APT',\n    name: 'APT',\n    mintAddress: 'APTtJyaRX5yGTsJU522N4VYWg3vCvSb65eam5GrPT5Rt',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SONAR: {\n    symbol: 'SONAR',\n    name: 'SONAR',\n    mintAddress: 'sonarX4VtVkQemriJeLm6CKeW3GDMyiBnnAEMw1MRAE',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  SHILL: {\n    symbol: 'SHILL',\n    name: 'SHILL',\n    mintAddress: '6cVgJUqo4nmvQpbgrDZwyfd6RwWw5bfnCamS3M9N1fd',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  TTT: {\n    symbol: 'TTT',\n    name: 'TabTrader',\n    mintAddress: 'FNFKRV3V8DtA3gVJN6UshMiLGYA8izxFwkNWmJbFjmRj',\n    decimals: 6,\n\n    detailLink: 'https://raydium.medium.com/tabtrader-is-launching-on-acceleraytor-bc570b6a9628',\n    details:\n      'TabTrader is a trading terminal that supports 34 exchanges with over 12,000 instruments, a variety of analytical tools, and a convenient interface. It’s a quick-access application allowing you to track your exchange accounts, trade, analyze charts, and get instantly notified on price changes, all within one unified interface. The app has a rating of 4.7 on the Apple App Store (with over 52,000 ratings) and a rating of 4.5 on the Google Play Store (with over 55,000 ratings).',\n    docs: {\n      website: 'https://tab-trader.com/'\n      // whitepaper: ''\n    },\n    socials: {\n      Twitter: 'https://twitter.com/tabtraderpro',\n      Telegram: 'https://t.me/tabtrader_en'\n    },\n    tags: ['raydium']\n  },\n  BOKU: {\n    symbol: 'BOKU',\n    name: 'BOKU',\n    mintAddress: 'CN7qFa5iYkHz99PTctvT4xXUHnxwjQ5MHxCuTJtPN5uS',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  MIMO: {\n    symbol: 'MIMO',\n    name: 'MIMO',\n    mintAddress: '9TE7ebz1dsFo1uQ2T4oYAKSm39Y6fWuHrd6Uk6XaiD16',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  wbWBNB: {\n    symbol: 'wbWBNB',\n    name: 'wbWBNB',\n    mintAddress: '9gP2kCy3wA1ctvYWQk75guqXuHfrEomqydHLtcTCqiLa',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  wePEOPLE: {\n    symbol: 'wePEOPLE',\n    name: 'wePEOPLE',\n    mintAddress: 'CobcsUrt3p91FwvULYKorQejgsm5HoQdv5T8RUZ6PnLA',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  XTAG: {\n    symbol: 'XTAG',\n    name: 'XTAG',\n    mintAddress: '5gs8nf4wojB5EXgDUWNLwXpknzgV2YWDhveAeBZpVLbp',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  KKO: {\n    symbol: 'KKO',\n    name: 'KKO',\n    mintAddress: 'kiNeKo77w1WBEzFFCXrTDRWGRWGP8yHvKC9rX6dqjQh',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  VI: {\n    symbol: 'VI',\n    name: 'VI',\n    mintAddress: '7zBWymxbZt7PVHQzfi3i85frc1YRiQc23K7bh3gos8ZC',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  SOLC: {\n    symbol: 'SOLC',\n    name: 'SOLC',\n    mintAddress: 'Bx1fDtvTN6NvE4kjdPHQXtmGSg582bZx9fGy4DQNMmAT',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  STR: {\n    symbol: 'STR',\n    name: 'STR',\n    mintAddress: '9zoqdwEBKWEi9G5Ze8BSkdmppxGgVv1Kw4LuigDiNr9m',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  SPWN: {\n    symbol: 'SPWN',\n    name: 'SPWN',\n    mintAddress: '5U9QqCPhqXAJcEv9uyzFJd5zhN93vuPk1aNNkXnUfPnt',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  ISOLA: {\n    symbol: 'ISOLA',\n    name: 'ISOLA',\n    mintAddress: '333iHoRM2Awhf9uVZtSyTfU8AekdGrgQePZsKMFPgKmS',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  RUN: {\n    symbol: 'RUN',\n    name: 'RUN',\n    mintAddress: '6F9XriABHfWhit6zmMUYAQBSy6XK5VF1cHXuW5LDpRtC',\n    decimals: 9,\n\n    detailLink: 'https://raydium.medium.com/runnode-is-launching-on-acceleraytor-3ff7326864b0',\n    details:\n      'RunNode is a bridge from web 2.0 to 3.0 and powers the infrastructure of Solana through its RPC protocol. With a quick onboarding application to get an RPC endpoint in under 30 seconds, any project can launch, build and scale its Solana dApp — now.',\n    docs: {\n      website: 'https://runnode.com/'\n      // whitepaper: ''\n    },\n    socials: {\n      Twitter: 'https://twitter.com/RunNode',\n      Telegram: 'https://t.me/runnode',\n      Discord: 'https://discord.gg/V2f74X8Zrt'\n    },\n\n    tags: ['raydium']\n  },\n  REAL: {\n    symbol: 'REAL',\n    name: 'REAL',\n    mintAddress: 'AD27ov5fVU2XzwsbvnFvb1JpCBaCB5dRXrczV9CqSVGb',\n    decimals: 9,\n\n    detailLink: 'https://raydium.medium.com/realy-is-launching-on-acceleraytor-b6d6a63d69d8',\n    details:\n      'Realy Metaverse will be the 1st Live-to-Earn metaverse on Solana. Developed via Unreal Engine, Realy is a virtual city with AAA graphics that seamlessly integrates virtual and reality.',\n    docs: {\n      website: 'https://realy.pro/'\n      // whitepaper: ''\n    },\n    socials: {\n      Twitter: 'https://twitter.com/RealyOfficial',\n      Telegram: 'https://t.me/realyofficial',\n      Discord: 'https://discord.gg/realy'\n    },\n\n    tags: ['raydium']\n  },\n  CRWNY: {\n    symbol: 'CRWNY',\n    name: 'CRWNY',\n    mintAddress: 'CRWNYkqdgvhGGae9CKfNka58j6QQkaD5bLhKXvUYqnc1',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  BLOCK: {\n    symbol: 'BLOCK',\n    name: 'BLOCK',\n    mintAddress: 'NFTUkR4u7wKxy9QLaX2TGvd9oZSWoMo4jqSJqdMb7Nk',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SOLAR: {\n    symbol: 'SOLAR',\n    name: 'SOLAR',\n    mintAddress: '2wmKXX1xsxLfrvjEPrt2UHiqj8Gbzwxvffr9qmNjsw8g',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  BASIS: {\n    symbol: 'BASIS',\n    name: 'BASIS',\n    mintAddress: 'Basis9oJw9j8cw53oMV7iqsgo6ihi9ALw4QR31rcjUJa',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SOLX: {\n    symbol: 'SOLX',\n    name: 'SOLX',\n    mintAddress: 'CH74tuRLTYcxG7qNJCsV9rghfLXJCQJbsu7i52a8F1Gn',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  CHICKS: {\n    symbol: 'CHICKS',\n    name: 'CHICKS',\n    mintAddress: 'cxxShYRVcepDudXhe7U62QHvw8uBJoKFifmzggGKVC2',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  GST: {\n    symbol: 'GST',\n    name: 'GST',\n    mintAddress: 'AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  MBS: {\n    symbol: 'MBS',\n    name: 'MBS',\n    mintAddress: 'Fm9rHUTF5v3hwMLbStjZXqNBBoZyGriQaFM6sTFz3K8A',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  PRISM: {\n    symbol: 'PRISM',\n    name: 'PRISM',\n    mintAddress: 'PRSMNsEPqhGVCH1TtWiJqPjJyh2cKrLostPZTNy1o5x',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  MEAN: {\n    symbol: 'MEAN',\n    name: 'MEAN',\n    mintAddress: 'MEANeD3XDdUmNMsRGjASkSWdC8prLYsoRJ61pPeHctD',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  TINY: {\n    symbol: 'TINY',\n    name: 'TINY',\n    mintAddress: 'HKfs24UEDQpHS5hUyKYkHd9q7GY5UQ679q2bokeL2whu',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SHDW: {\n    symbol: 'SHDW',\n    name: 'SHDW',\n    mintAddress: 'SHDWyBxihqiCj6YekG2GUr7wqKLeLAMK1gHZck9pL6y',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  SCY: {\n    symbol: 'SCY',\n    name: 'SCY',\n    mintAddress: 'SCYfrGCw8aDiqdgcpdGjV6jp4UVVQLuphxTDLNWu36f',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  SLC: {\n    symbol: 'SLC',\n    name: 'SLC',\n    mintAddress: 'METAmTMXwdb8gYzyCPfXXFmZZw4rUsXX58PNsDg7zjL',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  $WOOD: {\n    symbol: '$WOOD',\n    name: '$WOOD',\n    mintAddress: '674PmuiDtgKx3uKuJ1B16f9m5L84eFvNwj3xDMvHcbo7',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  AART: {\n    symbol: 'AART',\n    name: 'AART',\n    mintAddress: 'F3nefJBcejYbtdREjui1T9DPh5dBgpkKq7u2GAAMXs5B',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SVT: {\n    symbol: 'SVT',\n    name: 'SVT',\n    mintAddress: 'svtMpL5eQzdmB3uqK9NXaQkq8prGZoKQFNVJghdWCkV',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  BOT: {\n    symbol: 'BOT',\n    name: 'BOT',\n    mintAddress: 'AkhdZGVbJXPuQZ53u2LrimCjkRP6ZyxG1SoM85T98eE1',\n    decimals: 8,\n    tags: ['raydium']\n  },\n  FANT: {\n    symbol: 'FANT',\n    name: 'FANT',\n    mintAddress: 'FANTafPFBAt93BNJVpdu25pGPmca3RfwdsDsRrT3LX1r',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  NOS: {\n    symbol: 'NOS',\n    name: 'NOS',\n    mintAddress: 'nosXBVoaCTtYdLvKY6Csb4AC8JCdQKKAaWYtx2ZMoo7',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SB: {\n    symbol: 'SB',\n    name: 'SB',\n    mintAddress: 'SuperbZyz7TsSdSoFAZ6RYHfAWe9NmjXBLVQpS8hqdx',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  PRMS: {\n    symbol: 'PRMS',\n    name: 'PRMS',\n    mintAddress: 'A98UDy7z8MfmWnTQt6cKjje7UfqV3pTLf4yEbuwL2HrH',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  FCON: {\n    symbol: 'FCON',\n    name: 'FCON',\n    mintAddress: 'HovGjrBGTfna4dvg6exkMxXuexB3tUfEZKcut8AWowXj',\n    decimals: 4,\n\n    detailLink: 'https://raydium.medium.com/space-falcon-is-launching-on-acceleraytor-e32dedd8378b',\n    details:\n      'Space Falcon is the world’s first next-gen intergalactic P2E metaverse, featuring a classic space shooter game with premium sci-fi NFTs throughout the universe. Space Falcon’s virtual gaming metaverse emerges from the confluence of state-of-the-art blockchain technology, real-time graphics, classic immersive multiplayer video games, and decentralized financial technologies.',\n    docs: {\n      website: 'https://spacefalcon.io/'\n      // whitepaper: ''\n    },\n    socials: {\n      Twitter: 'https://twitter.com/SpaceFalconIO',\n      Telegram: 'https://t.me/spacefalconIO',\n      Discord: 'https://discord.gg/q5pupzKTaX'\n    },\n\n    tags: ['raydium']\n  },\n  CMFI: {\n    symbol: 'CMFI',\n    name: 'CMFI',\n    mintAddress: '5Wsd311hY8NXQhkt9cWHwTnqafk7BGEbLu8Py3DSnPAr',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  ATS: {\n    symbol: 'ATS',\n    name: 'ATS',\n    mintAddress: 'HJbNXx2YMRxgfUJ6K4qeWtjatMK5KYQT1QnsCdDWywNv',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  PSY: {\n    symbol: 'PSY',\n    name: 'PSY',\n    mintAddress: 'PsyFiqqjiv41G7o5SMRzDJCu4psptThNR2GtfeGHfSq',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  GARI: {\n    symbol: 'GARI',\n    name: 'GARI',\n    mintAddress: 'CKaKtYvz6dKPyMvYq9Rh3UBrnNqYZAyd7iF4hJtjUvks',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  FLWR: {\n    symbol: 'FLWR',\n    name: 'FLWR',\n    mintAddress: 'FLWRna1gxehQ9pSyZMzxfp4UhewvLPwuKfdUTgdZuMBY',\n    decimals: 2,\n    tags: ['raydium']\n  },\n  ROLL: {\n    symbol: 'ROLL',\n    name: 'ROLL',\n    mintAddress: '76aYNHbDfHemxSS7vmh6eJGfjodK8m7srCxiYCrKxzY1',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  OOGI: {\n    symbol: 'OOGI',\n    name: 'OOGI',\n    mintAddress: 'H7Qc9APCWWGDVxGD5fJHmLTmdEgT9GFatAKFNg6sHh8A',\n    decimals: 9,\n    tags: ['raydium']\n  },\n  DOGO: {\n    symbol: 'DOGO',\n    name: 'DOGO',\n    mintAddress: '5LSFpvLDkcdV2a3Kiyzmg5YmJsj2XDLySaXvnfP1cgLT',\n    decimals: 6,\n    tags: ['raydium']\n  },\n  SEEDED: {\n    symbol: 'SEEDED',\n    name: 'SEEDED',\n    mintAddress: 'seedEDBqu63tJ7PFqvcbwvThrYUkQeqT6NLf81kLibs',\n    decimals: 9,\n    tags: ['raydium']\n  }\n}\n\nexport const LP_TOKENS: Tokens = {\n  'RAY-WUSDT': {\n    symbol: 'RAY-WUSDT',\n    name: 'RAY-WUSDT V2 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.WUSDT },\n\n    mintAddress: 'CzPDyvotTcxNqtPne32yUiEVQ6jk42HZi1Y3hUu7qf7f',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-SOL': {\n    symbol: 'RAY-SOL',\n    name: 'RAY-SOL LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '134Cct3CSdRCbYgq5SkwmHgfwjJ7EM5cG9PzqffWqECx',\n    decimals: TOKENS.RAY.decimals\n  },\n  'LINK-WUSDT': {\n    symbol: 'LINK-WUSDT',\n    name: 'LINK-WUSDT LP',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.WUSDT },\n\n    mintAddress: 'EVDmwajM5U73PD34bYPugwiA4Eqqbrej4mLXXv15Z5qR',\n    decimals: TOKENS.LINK.decimals\n  },\n  'ETH-WUSDT': {\n    symbol: 'ETH-WUSDT',\n    name: 'ETH-WUSDT LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.WUSDT },\n\n    mintAddress: 'KY4XvwHy7JPzbWYAbk23jQvEb4qWJ8aCqYWREmk1Q7K',\n    decimals: TOKENS.ETH.decimals\n  },\n  'RAY-USDC': {\n    symbol: 'RAY-USDC',\n    name: 'RAY-USDC V2 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FgmBnsF5Qrnv8X9bomQfEtQTQjNNiBCWRKGpzPnE5BDg',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-SRM': {\n    symbol: 'RAY-SRM',\n    name: 'RAY-SRM V2 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: '5QXBMXuCL7zfAk39jEVVEvcrz1AvBGgT9wAhLLHLyyUJ',\n    decimals: TOKENS.RAY.decimals\n  },\n  // v3\n  'RAY-WUSDT-V3': {\n    symbol: 'RAY-WUSDT',\n    name: 'RAY-WUSDT V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.WUSDT },\n\n    mintAddress: 'FdhKXYjCou2jQfgKWcNY7jb8F2DPLU1teTTTRfLBD2v1',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-USDC-V3': {\n    symbol: 'RAY-USDC',\n    name: 'RAY-USDC V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BZFGfXMrjG2sS7QT2eiCDEevPFnkYYF7kzJpWfYxPbcx',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-SRM-V3': {\n    symbol: 'RAY-SRM',\n    name: 'RAY-SRM V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'DSX5E21RE9FB9hM8Nh8xcXQfPK6SzRaJiywemHBSsfup',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-SOL-V3': {\n    symbol: 'RAY-SOL',\n    name: 'RAY-SOL V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'F5PPQHGcznZ2FxD9JaxJMXaf7XkaFFJ6zzTBcW8osQjw',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-ETH-V3': {\n    symbol: 'RAY-ETH',\n    name: 'RAY-ETH V3 LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.ETH },\n\n    mintAddress: '8Q6MKy5Yxb9vG1mWzppMtMb2nrhNuCRNUkJTeiE3fuwD',\n    decimals: TOKENS.RAY.decimals\n  },\n  // v4\n  'FIDA-RAY-V4': {\n    symbol: 'FIDA-RAY',\n    name: 'FIDA-RAY LP',\n    coin: { ...TOKENS.FIDA },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'DsBuznXRTmzvEdb36Dx3aVLVo1XmH7r1PRZUFugLPTFv',\n    decimals: TOKENS.FIDA.decimals\n  },\n  'OXY-RAY-V4': {\n    symbol: 'OXY-RAY',\n    name: 'OXY-RAY LP',\n    coin: { ...TOKENS.OXY },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'FwaX9W7iThTZH5MFeasxdLpxTVxRcM7ZHieTCnYog8Yb',\n    decimals: TOKENS.OXY.decimals\n  },\n  'MAPS-RAY-V4': {\n    symbol: 'MAPS-RAY',\n    name: 'MAPS-RAY LP',\n    coin: { ...TOKENS.MAPS },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'CcKK8srfVdTSsFGV3VLBb2YDbzF4T4NM2C3UEjC39RLP',\n    decimals: TOKENS.MAPS.decimals\n  },\n  'KIN-RAY-V4': {\n    symbol: 'KIN-RAY',\n    name: 'KIN-RAY LP',\n    coin: { ...TOKENS.KIN },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'CHT8sft3h3gpLYbCcZ9o27mT5s3Z6VifBVbUiDvprHPW',\n    decimals: 6\n  },\n  'RAY-USDT-V4': {\n    symbol: 'RAY-USDT',\n    name: 'RAY-USDT LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'C3sT1R3nsw4AVdepvLTLKr5Gvszr7jufyBWUCvy4TUvT',\n    decimals: TOKENS.RAY.decimals\n  },\n  'SOL-USDC-V4': {\n    symbol: 'SOL-USDC',\n    name: 'SOL-USDC LP',\n    coin: { ...NATIVE_SOL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8HoQnePLqPj4M7PUDzfw8e3Ymdwgc7NLGnaTUapubyvu',\n    decimals: NATIVE_SOL.decimals\n  },\n  'YFI-USDC-V4': {\n    symbol: 'YFI-USDC',\n    name: 'YFI-USDC LP',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '865j7iMmRRycSYUXzJ33ZcvLiX9JHvaLidasCyUyKaRE',\n    decimals: TOKENS.YFI.decimals\n  },\n  'SRM-USDC-V4': {\n    symbol: 'SRM-USDC',\n    name: 'SRM-USDC LP',\n    coin: { ...TOKENS.SRM },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9XnZd82j34KxNLgQfz29jGbYdxsYznTWRpvZE3SRE7JG',\n    decimals: TOKENS.SRM.decimals\n  },\n  'FTT-USDC-V4': {\n    symbol: 'FTT-USDC',\n    name: 'FTT-USDC LP',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '75dCoKfUHLUuZ4qEh46ovsxfgWhB4icc3SintzWRedT9',\n    decimals: TOKENS.FTT.decimals\n  },\n  'BTC-USDC-V4': {\n    symbol: 'BTC-USDC',\n    name: 'BTC-USDC LP',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2hMdRdVWZqetQsaHG8kQjdZinEMBz75vsoWTCob1ijXu',\n    decimals: TOKENS.BTC.decimals\n  },\n  'SUSHI-USDC-V4': {\n    symbol: 'SUSHI-USDC',\n    name: 'SUSHI-USDC LP',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2QVjeR9d2PbSf8em8NE8zWd8RYHjFtucDUdDgdbDD2h2',\n    decimals: TOKENS.SUSHI.decimals\n  },\n  'TOMO-USDC-V4': {\n    symbol: 'TOMO-USDC',\n    name: 'TOMO-USDC LP',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CHyUpQFeW456zcr5XEh4RZiibH8Dzocs6Wbgz9aWpXnQ',\n    decimals: TOKENS.TOMO.decimals\n  },\n  'LINK-USDC-V4': {\n    symbol: 'LINK-USDC',\n    name: 'LINK-USDC LP',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BqjoYjqKrXtfBKXeaWeAT5sYCy7wsAYf3XjgDWsHSBRs',\n    decimals: TOKENS.LINK.decimals\n  },\n  'ETH-USDC-V4': {\n    symbol: 'ETH-USDC',\n    name: 'ETH-USDC LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '13PoKid6cZop4sj2GfoBeujnGfthUbTERdE5tpLCDLEY',\n    decimals: TOKENS.ETH.decimals\n  },\n  'xCOPE-USDC-V4': {\n    symbol: 'xCOPE-USDC',\n    name: 'xCOPE-USDC LP',\n    coin: { ...TOKENS.xCOPE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2Vyyeuyd15Gp8aH6uKE72c4hxc8TVSLibxDP9vzspQWG',\n    decimals: TOKENS.xCOPE.decimals\n  },\n  'SOL-USDT-V4': {\n    symbol: 'SOL-USDT',\n    name: 'SOL-USDT LP',\n    coin: { ...NATIVE_SOL },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'Epm4KfTj4DMrvqn6Bwg2Tr2N8vhQuNbuK8bESFp4k33K',\n    decimals: NATIVE_SOL.decimals\n  },\n  'YFI-USDT-V4': {\n    symbol: 'YFI-USDT',\n    name: 'YFI-USDT LP',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'FA1i7fej1pAbQbnY8NbyYUsTrWcasTyipKreDgy1Mgku',\n    decimals: TOKENS.YFI.decimals\n  },\n  'SRM-USDT-V4': {\n    symbol: 'SRM-USDT',\n    name: 'SRM-USDT LP',\n    coin: { ...TOKENS.SRM },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'HYSAu42BFejBS77jZAZdNAWa3iVcbSRJSzp3wtqCbWwv',\n    decimals: TOKENS.SRM.decimals\n  },\n  'FTT-USDT-V4': {\n    symbol: 'FTT-USDT',\n    name: 'FTT-USDT LP',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: '2cTCiUnect5Lap2sk19xLby7aajNDYseFhC9Pigou11z',\n    decimals: TOKENS.FTT.decimals\n  },\n  'BTC-USDT-V4': {\n    symbol: 'BTC-USDT',\n    name: 'BTC-USDT LP',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'DgGuvR9GSHimopo3Gc7gfkbKamLKrdyzWkq5yqA6LqYS',\n    decimals: TOKENS.BTC.decimals\n  },\n  'SUSHI-USDT-V4': {\n    symbol: 'SUSHI-USDT',\n    name: 'SUSHI-USDT LP',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'Ba26poEYDy6P2o95AJUsewXgZ8DM9BCsmnU9hmC9i4Ki',\n    decimals: TOKENS.SUSHI.decimals\n  },\n  'TOMO-USDT-V4': {\n    symbol: 'TOMO-USDT',\n    name: 'TOMO-USDT LP',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'D3iGro1vn6PWJXo9QAPj3dfta6dKkHHnmiiym2EfsAmi',\n    decimals: TOKENS.TOMO.decimals\n  },\n  'LINK-USDT-V4': {\n    symbol: 'LINK-USDT',\n    name: 'LINK-USDT LP',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'Dr12Sgt9gkY8WU5tRkgZf1TkVWJbvjYuPAhR3aDCwiiX',\n    decimals: TOKENS.LINK.decimals\n  },\n  'ETH-USDT-V4': {\n    symbol: 'ETH-USDT',\n    name: 'ETH-USDT LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'nPrB78ETY8661fUgohpuVusNCZnedYCgghzRJzxWnVb',\n    decimals: TOKENS.ETH.decimals\n  },\n  'YFI-SRM-V4': {\n    symbol: 'YFI-SRM',\n    name: 'YFI-SRM LP',\n    coin: { ...TOKENS.YFI },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'EGJht91R7dKpCj8wzALkjmNdUUUcQgodqWCYweyKcRcV',\n    decimals: TOKENS.YFI.decimals\n  },\n  'FTT-SRM-V4': {\n    symbol: 'FTT-SRM',\n    name: 'FTT-SRM LP',\n    coin: { ...TOKENS.FTT },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'AsDuPg9MgPtt3jfoyctUCUgsvwqAN6RZPftqoeiPDefM',\n    decimals: TOKENS.FTT.decimals\n  },\n  'BTC-SRM-V4': {\n    symbol: 'BTC-SRM',\n    name: 'BTC-SRM LP',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'AGHQxXb3GSzeiLTcLtXMS2D5GGDZxsB2fZYZxSB5weqB',\n    decimals: TOKENS.BTC.decimals\n  },\n  'SUSHI-SRM-V4': {\n    symbol: 'SUSHI-SRM',\n    name: 'SUSHI-SRM LP',\n    coin: { ...TOKENS.SUSHI },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: '3HYhUnUdV67j1vn8fu7ExuVGy5dJozHEyWvqEstDbWwE',\n    decimals: TOKENS.SUSHI.decimals\n  },\n  'TOMO-SRM-V4': {\n    symbol: 'TOMO-SRM',\n    name: 'TOMO-SRM LP',\n    coin: { ...TOKENS.TOMO },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'GgH9RnKrQpaMQeqmdbMvs5oo1A24hERQ9wuY2pSkeG7x',\n    decimals: TOKENS.TOMO.decimals\n  },\n  'LINK-SRM-V4': {\n    symbol: 'LINK-SRM',\n    name: 'LINK-SRM LP',\n    coin: { ...TOKENS.LINK },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: 'GXN6yJv12o18skTmJXaeFXZVY1iqR18CHsmCT8VVCmDD',\n    decimals: TOKENS.LINK.decimals\n  },\n  'ETH-SRM-V4': {\n    symbol: 'ETH-SRM',\n    name: 'ETH-SRM LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: '9VoY3VERETuc2FoadMSYYizF26mJinY514ZpEzkHMtwG',\n    decimals: TOKENS.ETH.decimals\n  },\n  'SRM-SOL-V4': {\n    symbol: 'SRM-SOL',\n    name: 'SRM-SOL LP',\n    coin: { ...TOKENS.SRM },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'AKJHspCwDhABucCxNLXUSfEzb7Ny62RqFtC9uNjJi4fq',\n    decimals: TOKENS.SRM.decimals\n  },\n  'STEP-USDC-V4': {\n    symbol: 'STEP-USDC',\n    name: 'STEP-USDC LP',\n    coin: { ...TOKENS.STEP },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3k8BDobgihmk72jVmXYLE168bxxQUhqqyESW4dQVktqC',\n    decimals: TOKENS.STEP.decimals\n  },\n  'MEDIA-USDC-V4': {\n    symbol: 'MEDIA-USDC',\n    name: 'MEDIA-USDC LP',\n    coin: { ...TOKENS.MEDIA },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'A5zanvgtioZGiJMdEyaKN4XQmJsp1p7uVxaq2696REvQ',\n    decimals: TOKENS.MEDIA.decimals\n  },\n  'ROPE-USDC-V4': {\n    symbol: 'ROPE-USDC',\n    name: 'ROPE-USDC LP',\n    coin: { ...TOKENS.ROPE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Cq4HyW5xia37tKejPF2XfZeXQoPYW6KfbPvxvw5eRoUE',\n    decimals: TOKENS.ROPE.decimals\n  },\n  'MER-USDC-V4': {\n    symbol: 'MER-USDC',\n    name: 'MER-USDC LP',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3H9NxvaZoxMZZDZcbBDdWMKbrfNj7PCF5sbRwDr7SdDW',\n    decimals: TOKENS.MER.decimals\n  },\n  'COPE-USDC-V4': {\n    symbol: 'COPE-USDC',\n    name: 'COPE-USDC LP',\n    coin: { ...TOKENS.COPE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Cz1kUvHw98imKkrqqu95GQB9h1frY8RikxPojMwWKGXf',\n    decimals: TOKENS.COPE.decimals\n  },\n  'ALEPH-USDC-V4': {\n    symbol: 'ALEPH-USDC',\n    name: 'ALEPH-USDC LP',\n    coin: { ...TOKENS.ALEPH },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'iUDasAP2nXm5wvTukAHEKSdSXn8vQkRtaiShs9ceGB7',\n    decimals: TOKENS.ALEPH.decimals\n  },\n  'TULIP-USDC-V4': {\n    symbol: 'TULIP-USDC',\n    name: 'TULIP-USDC LP',\n    coin: { ...TOKENS.TULIP },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2doeZGLJyACtaG9DCUyqMLtswesfje1hjNA11hMdj6YU',\n    decimals: TOKENS.TULIP.decimals\n  },\n  'WOO-USDC-V4': {\n    symbol: 'WOO-USDC',\n    name: 'WOO-USDC LP',\n    coin: { ...TOKENS.WOO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7cu42ao8Jgrd5A3y3bNQsCxq5poyGZNmTydkGfJYQfzh',\n    decimals: TOKENS.WOO.decimals\n  },\n  'SNY-USDC-V4': {\n    symbol: 'SNY-USDC',\n    name: 'SNY-USDC LP',\n    coin: { ...TOKENS.SNY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'G8qcfeFqxwbCqpxv5LpLWxUCd1PyMB5nWb5e5YyxLMKg',\n    decimals: TOKENS.SNY.decimals\n  },\n  'BOP-RAY-V4': {\n    symbol: 'BOP-RAY',\n    name: 'BOP-RAY LP',\n    coin: { ...TOKENS.BOP },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '9nQPYJvysyfnXhQ6nkK5V7sZG26hmDgusfdNQijRk5LD',\n    decimals: TOKENS.BOP.decimals\n  },\n  'SLRS-USDC-V4': {\n    symbol: 'SLRS-USDC',\n    name: 'SLRS-USDC LP',\n    coin: { ...TOKENS.SLRS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2Xxbm1hdv5wPeen5ponDSMT3VqhGMTQ7mH9stNXm9shU',\n    decimals: TOKENS.SLRS.decimals\n  },\n  'SAMO-RAY-V4': {\n    symbol: 'SAMO-RAY',\n    name: 'SAMO-RAY LP',\n    coin: { ...TOKENS.SAMO },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'HwzkXyX8B45LsaHXwY8su92NoRBS5GQC32HzjQRDqPnr',\n    decimals: TOKENS.SAMO.decimals\n  },\n  'renBTC-USDC-V4': {\n    symbol: 'renBTC-USDC',\n    name: 'renBTC-USDC LP',\n    coin: { ...TOKENS.renBTC },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CTEpsih91ZLo5gunvryLpJ3pzMjmt5jbS6AnSQrzYw7V',\n    decimals: TOKENS.renBTC.decimals\n  },\n  'renDOGE-USDC-V4': {\n    symbol: 'renDOGE-USDC',\n    name: 'renDOGE-USDC LP',\n    coin: { ...TOKENS.renDOGE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Hb8KnZNKvRxu7pgMRWJgoMSMcepfvNiBFFDDrdf9o3wA',\n    decimals: TOKENS.renDOGE.decimals\n  },\n  'RAY-USDC-V4': {\n    symbol: 'RAY-USDC',\n    name: 'RAY-USDC LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FbC6K13MzHvN42bXrtGaWsvZY9fxrackRSZcBGfjPc7m',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-SRM-V4': {\n    symbol: 'RAY-SRM',\n    name: 'RAY-SRM LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.SRM },\n\n    mintAddress: '7P5Thr9Egi2rvMmEuQkLn8x8e8Qro7u2U7yLD2tU2Hbe',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-ETH-V4': {\n    symbol: 'RAY-ETH',\n    name: 'RAY-ETH LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...TOKENS.ETH },\n\n    mintAddress: 'mjQH33MqZv5aKAbKHi8dG3g3qXeRQqq1GFcXceZkNSr',\n    decimals: TOKENS.RAY.decimals\n  },\n  'RAY-SOL-V4': {\n    symbol: 'RAY-SOL',\n    name: 'RAY-SOL LP',\n    coin: { ...TOKENS.RAY },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '89ZKE4aoyfLBe2RuV6jM3JGNhaV18Nxh8eNtjRcndBip',\n    decimals: TOKENS.RAY.decimals\n  },\n  'DXL-USDC-V4': {\n    symbol: 'DXL-USDC',\n    name: 'DXL-USDC LP',\n    coin: { ...TOKENS.DXL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4HFaSvfgskipvrzT1exoVKsUZ174JyExEsA8bDfsAdY5',\n    decimals: TOKENS.DXL.decimals\n  },\n  'LIKE-USDC-V4': {\n    symbol: 'LIKE-USDC',\n    name: 'LIKE-USDC LP',\n    coin: { ...TOKENS.LIKE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'cjZmbt8sJgaoyWYUttomAu5LJYU44ZrcKTbzTSEPDVw',\n    decimals: TOKENS.LIKE.decimals\n  },\n  'mSOL-USDC-V4': {\n    symbol: 'mSOL-USDC',\n    name: 'mSOL-USDC LP',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4xTpJ4p76bAeggXoYywpCCNKfJspbuRzZ79R7pRhbqSf',\n    decimals: TOKENS.mSOL.decimals\n  },\n  'mSOL-SOL-V4': {\n    symbol: 'mSOL-SOL',\n    name: 'mSOL-SOL LP',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '5ijRoAHVgd5T5CNtK5KDRUBZ7Bffb69nktMj5n6ks6m4',\n    decimals: TOKENS.mSOL.decimals\n  },\n  'MER-PAI-V4': {\n    symbol: 'MER-PAI',\n    name: 'MER-PAI LP',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.PAI },\n\n    mintAddress: 'DU5RT2D9EviaSmX6Ta8MZwMm85HwSEqGMRdqUiuCGfmD',\n    decimals: TOKENS.MER.decimals\n  },\n  'PORT-USDC-V4': {\n    symbol: 'PORT-USDC',\n    name: 'PORT-USDC LP',\n    coin: { ...TOKENS.PORT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9tmNtbUCrLS15qC4tEfr5NNeqcqpZ4uiGgi2vS5CLQBS',\n    decimals: TOKENS.PORT.decimals\n  },\n  'MNGO-USDC-V4': {\n    symbol: 'MNGO-USDC',\n    name: 'MNGO-USDC LP',\n    coin: { ...TOKENS.MNGO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'DkiqCQ792n743xjWQVCbBUaVtkdiuvQeYndM53ReWnCC',\n    decimals: TOKENS.MNGO.decimals\n  },\n  'ATLAS-USDC-V4': {\n    symbol: 'ATLAS-USDC',\n    name: 'ATLAS-USDC LP',\n    coin: { ...TOKENS.ATLAS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9shGU9f1EsxAbiR567MYZ78WUiS6ZNCYbHe53WUULQ7n',\n    decimals: TOKENS.ATLAS.decimals\n  },\n  'POLIS-USDC-V4': {\n    symbol: 'POLIS-USDC',\n    name: 'POLIS-USDC LP',\n    coin: { ...TOKENS.POLIS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8MbKSBpyXs8fVneKgt71jfHrn5SWtX8n4wMLpiVfF9So',\n    decimals: TOKENS.POLIS.decimals\n  },\n  'ATLAS-RAY-V4': {\n    symbol: 'ATLAS-RAY',\n    name: 'ATLAS-RAY LP',\n    coin: { ...TOKENS.ATLAS },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '418MFhkaYQtbn529wmjLLqL6uKxDz7j4eZBaV1cobkyd',\n    decimals: TOKENS.ATLAS.decimals\n  },\n  'POLIS-RAY-V4': {\n    symbol: 'POLIS-RAY',\n    name: 'POLIS-RAY LP',\n    coin: { ...TOKENS.POLIS },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '9ysGKUH6WqzjQEUT4dxqYCUaFNVK9QFEa24pGzjFq8xg',\n    decimals: TOKENS.POLIS.decimals\n  },\n  'ALEPH-RAY-V4': {\n    symbol: 'ALEPH-RAY',\n    name: 'ALEPH-RAY LP',\n    coin: { ...TOKENS.ALEPH },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'n76skjqv4LirhdLok2zJELXNLdRpYDgVJQuQFbamscy',\n    decimals: TOKENS.ALEPH.decimals\n  },\n  'TULIP-RAY-V4': {\n    symbol: 'TULIP-RAY',\n    name: 'TULIP-RAY LP',\n    coin: { ...TOKENS.TULIP },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '3AZTviji5qduMG2s4FfWGR3SSQmNUCyx8ao6UKCPg3oJ',\n    decimals: TOKENS.TULIP.decimals\n  },\n  'SLRS-RAY-V4': {\n    symbol: 'SLRS-RAY',\n    name: 'SLRS-RAY LP',\n    coin: { ...TOKENS.SLRS },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '2pk78vsKT3jfJAcN2zbpMUnrR57SZrxHqaZYyFgp92mM',\n    decimals: TOKENS.SLRS.decimals\n  },\n  'MER-RAY-V4': {\n    symbol: 'MER-RAY',\n    name: 'MER-RAY LP',\n    coin: { ...TOKENS.MER },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '214hxy3AbKoaEKgqcg2aC1cP5R67cGGAyDEg5GDwC7Ub',\n    decimals: TOKENS.MER.decimals\n  },\n  'MEDIA-RAY-V4': {\n    symbol: 'MEDIA-RAY',\n    name: 'MEDIA-RAY LP',\n    coin: { ...TOKENS.MEDIA },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '9Aseg5A1JD1yCiFFdDaNNxCiJ7XzrpZFmcEmLjXFdPaH',\n    decimals: TOKENS.MEDIA.decimals\n  },\n  'SNY-RAY-V4': {\n    symbol: 'SNY-RAY',\n    name: 'SNY-RAY LP',\n    coin: { ...TOKENS.SNY },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '2k4quTuuLUxrSEhFH99qcoZzvgvVEc3b5sz3xz3qstfS',\n    decimals: TOKENS.SNY.decimals\n  },\n  'LIKE-RAY-V4': {\n    symbol: 'LIKE-RAY',\n    name: 'LIKE-RAY LP',\n    coin: { ...TOKENS.LIKE },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '7xqDycbFSCpUpzkYapFeyPJWPwEpV7zdWbYf2MVHTNjv',\n    decimals: TOKENS.LIKE.decimals\n  },\n  'COPE-RAY-V4': {\n    symbol: 'COPE-RAY',\n    name: 'COPE-RAY LP',\n    coin: { ...TOKENS.COPE },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'A7GCVHA8NSsbdFscHdoNU41tL1TRKNmCH4K94CgcLK9F',\n    decimals: TOKENS.COPE.decimals\n  },\n  'ETH-SOL-V4': {\n    symbol: 'ETH-SOL',\n    name: 'ETH-SOL LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'GKfgC86iJoMjwAtcyiLu6nWnjggqUXsDQihXkP14fDez',\n    decimals: TOKENS.ETH.decimals\n  },\n  'stSOL-USDC-V4': {\n    symbol: 'stSOL-USDC',\n    name: 'stSOL-USDC LP',\n    coin: { ...TOKENS.stSOL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'HDUJMwYZkjUZre63xUeDhdCi8c6LgUDiBqxmP3QC3VPX',\n    decimals: TOKENS.stSOL.decimals\n  },\n  'GRAPE-USDC-V4': {\n    symbol: 'GRAPE-USDC',\n    name: 'GRAPE-USDC LP',\n    coin: { ...TOKENS.GRAPE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'A8ZYmnZ1vwxUa4wpJVUaJgegsuTEz5TKy5CiJXffvmpt',\n    decimals: TOKENS.GRAPE.decimals\n  },\n  'LARIX-USDC-V4': {\n    symbol: 'LARIX-USDC',\n    name: 'LARIX-USDC LP',\n    coin: { ...TOKENS.LARIX },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7yieit4YsNsZ9CAK8H5ZEMvvk35kPEHHeXwp6naoWU9V',\n    decimals: TOKENS.LARIX.decimals\n  },\n  'RIN-USDC-V4': {\n    symbol: 'RIN-USDC',\n    name: 'RIN-USDC LP',\n    coin: { ...TOKENS.RIN },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GfCWfrZez7BDmCSEeMERVDVUaaM2TEreyYUgb2cpuS3w',\n    decimals: TOKENS.RIN.decimals\n  },\n  'APEX-USDC-V4': {\n    symbol: 'APEX-USDC',\n    name: 'APEX-USDC LP',\n    coin: { ...TOKENS.APEX },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '444cVqYyDxJNo6FqiMb9qQWFUd7tYzFRdDuJRFrSAGnU',\n    decimals: TOKENS.APEX.decimals\n  },\n  'mSOL-RAY-V4': {\n    symbol: 'mSOL-RAY',\n    name: 'mSOL-RAY LP',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'De2EHBAdkgfc72DpShqDGG42cV3iDWh8wvvZdPsiEcqP',\n    decimals: TOKENS.mSOL.decimals\n  },\n  'MNDE-mSOL-V4': {\n    symbol: 'MNDE-mSOL',\n    name: 'MNDE-mSOL LP',\n    coin: { ...TOKENS.MNDE },\n    pc: { ...TOKENS.mSOL },\n\n    mintAddress: '4bh8XCzTHSbqbWN8o1Jn4ueBdz1LvJFoEasN6K6CQ8Ny',\n    decimals: TOKENS.MNDE.decimals\n  },\n  'LARIX-RAY-V4': {\n    symbol: 'LARIX-RAY',\n    name: 'LARIX-RAY LP',\n    coin: { ...TOKENS.LARIX },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'ZRDfSLgWGeaYSmhdPvFNKQQhDcYdZQaue2N8YDmHX4q',\n    decimals: TOKENS.LARIX.decimals\n  },\n  'LIQ-USDC-V4': {\n    symbol: 'LIQ-USDC',\n    name: 'LIQ-USDC LP',\n    coin: { ...TOKENS.LIQ },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GWpD3eTfhJB5KDCcnE85dBQrjAk2CsrgDF9b52R9CrjV',\n    decimals: TOKENS.LIQ.decimals\n  },\n  'WAG-USDC-V4': {\n    symbol: 'WAG-USDC',\n    name: 'WAG-USDC LP',\n    coin: { ...TOKENS.WAG },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4yykyPugitUVRewNPXXCviRvxGfsfsRMoP32z3b6FmUC',\n    decimals: TOKENS.WAG.decimals\n  },\n  'ETH-mSOL-V4': {\n    symbol: 'ETH-mSOL',\n    name: 'ETH-mSOL LP',\n    coin: { ...TOKENS.ETH },\n    pc: { ...TOKENS.mSOL },\n\n    mintAddress: 'HYv3grQfi8QbV7nG7EFgNK1aJSrsJ7HynXJKJVPLL2Uh',\n    decimals: TOKENS.ETH.decimals\n  },\n  'mSOL-USDT-V4': {\n    symbol: 'mSOL-USDT',\n    name: 'mSOL-USDT LP',\n    coin: { ...TOKENS.mSOL },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: '69NCmEW9mGpiWLjAcAWHq51k4ionJZmzgRfRT3wQaCCf',\n    decimals: TOKENS.mSOL.decimals\n  },\n  'BTC-mSOL-V4': {\n    symbol: 'BTC-mSOL',\n    name: 'BTC-mSOL LP',\n    coin: { ...TOKENS.BTC },\n    pc: { ...TOKENS.mSOL },\n\n    mintAddress: '92bcERNtUmuaJ6mwLSxYHZYSph37jdKxRdoYNxpcYNPp',\n    decimals: TOKENS.BTC.decimals\n  },\n  'SLIM-SOL-V4': {\n    symbol: 'SLIM-SOL',\n    name: 'SLIM-SOL LP',\n    coin: { ...TOKENS.SLIM },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '9X4EK8E59VAVi6ChnNvvd39m6Yg9RtkBbAPq1mDVJT57',\n    decimals: TOKENS.SLIM.decimals\n  },\n  'AURY-USDC-V4': {\n    symbol: 'AURY-USDC',\n    name: 'AURY-USDC LP',\n    coin: { ...TOKENS.AURY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Gub5dvTy4nzP82qpmpNkBxmRqjtqRddBTBqHSdNcf2oS',\n    decimals: TOKENS.AURY.decimals\n  },\n  'PRT-SOL-V4': {\n    symbol: 'PRT-SOL',\n    name: 'PRT-SOL LP',\n    coin: { ...TOKENS.PRT },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'EcJ8Wgwt1AzSPiDpVr6aaSur8TKAsNTPmmzRACeqT68Z',\n    decimals: TOKENS.PRT.decimals\n  },\n  'LIQ-RAY-V4': {\n    symbol: 'LIQ-RAY',\n    name: 'LIQ-RAY LP',\n    coin: { ...TOKENS.LIQ },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '49YUsDrThJosHSagCn1F59Uc9NRxbr9thVrZikUnQDXy',\n    decimals: TOKENS.LIQ.decimals\n  },\n  'SYP-SOL-V4': {\n    symbol: 'SYP-SOL',\n    name: 'SYP-SOL LP',\n    coin: { ...TOKENS.SYP },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'KHV6dfj2bDntzJ9z1S26cDfqWfUZdJRFmteLR6LxHwW',\n    decimals: TOKENS.SYP.decimals\n  },\n  'SYP-RAY-V4': {\n    symbol: 'SYP-RAY',\n    name: 'SYP-RAY LP',\n    coin: { ...TOKENS.SYP },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'FT2KZqxxM8F2h9pZtTF4PyjK88bM4YbuBzd7ZPwQ5wMB',\n    decimals: TOKENS.SYP.decimals\n  },\n  'SYP-USDC-V4': {\n    symbol: 'SYP-USDC',\n    name: 'SYP-USDC LP',\n    coin: { ...TOKENS.SYP },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2xJGuLAivAR1WkARRA6zP1v4jaA9jV2Qis8JfMNvrVyZ',\n    decimals: TOKENS.SYP.decimals\n  },\n  'FAB-USDC-V4': {\n    symbol: 'FAB-USDC',\n    name: 'FAB-USDC LP',\n    coin: { ...TOKENS.FAB },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '5rTCvZq6BcApsC3VV1EEUuTJfaVd8uYhcGjwTy1By6P8',\n    decimals: TOKENS.FAB.decimals\n  },\n  'WOOF-RAY-V4': {\n    symbol: 'WOOF-RAY',\n    name: 'WOOF-RAY LP',\n    coin: { ...TOKENS.WOOF },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'H2FAnazDaGFutcmnrwDxhmdncR1Bd7GG4mhPCSUiamDX',\n    decimals: TOKENS.WOOF.decimals\n  },\n  'WOOF-USDC-V4': {\n    symbol: 'WOOF-USDC',\n    name: 'WOOF-USDC LP',\n    coin: { ...TOKENS.WOOF },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EFSu5TMc1ijRevaYCxUkS7uGvbhsymDHEaTK3UVdNE3q',\n    decimals: TOKENS.WOOF.decimals\n  },\n  'SLND-USDC-V4': {\n    symbol: 'SLND-USDC',\n    name: 'SLND-USDC LP',\n    coin: { ...TOKENS.SLND },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EunE9uDh2cGsyJcsGuGKc6wte7kBn8iye2gzC4w2ePHn',\n    decimals: TOKENS.SLND.decimals\n  },\n  'FRKT-SOL-V4': {\n    symbol: 'FRKT-SOL',\n    name: 'FRKT-SOL LP',\n    coin: { ...TOKENS.FRKT },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'HYUKXgpjaxMXHttyrFYtv3z2rdhZ1U9QDH8zEc8BooQC',\n    decimals: TOKENS.FRKT.decimals\n  },\n  'weWETH-SOL-V4': {\n    symbol: 'weWETH-SOL',\n    name: 'weWETH-SOL LP',\n    coin: { ...TOKENS.weWETH },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '3hbozt2Por7bcrGod8N7kEeJNMocFFjCJrQR16TQGBrE',\n    decimals: TOKENS.weWETH.decimals\n  },\n  'weWETH-USDC-V4': {\n    symbol: 'weWETH-USDC',\n    name: 'weWETH-USDC LP',\n    coin: { ...TOKENS.weWETH },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3529SBnMCDW3S3xQ52aABbRHo7PcHvpQA4no8J12L5eK',\n    decimals: TOKENS.weWETH.decimals\n  },\n  'weUNI-USDC-V4': {\n    symbol: 'weUNI-USDC',\n    name: 'weUNI-USDC LP',\n    coin: { ...TOKENS.weUNI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EEC4QnT41py39QaYnzQnoYQEtDUDNa6Se8SBDgfPSN2a',\n    decimals: TOKENS.weUNI.decimals\n  },\n  'weSUSHI-USDC-V4': {\n    symbol: 'weSUSHI-USDC',\n    name: 'weSUSHI-USDC LP',\n    coin: { ...TOKENS.weSUSHI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3wVrtQZsiDNp5yTPyfEzQHPU6iuJoMmpnWg6CTt4V8sR',\n    decimals: TOKENS.weSUSHI.decimals\n  },\n  'CYS-USDC-V4': {\n    symbol: 'CYS-USDC',\n    name: 'CYS-USDC LP',\n    coin: { ...TOKENS.CYS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GfV3QDzzdVUwCNSdfn6PjhmyJvjw18tn51RingWZYwk3',\n    decimals: TOKENS.CYS.decimals\n  },\n  'SAMO-USDC-V4': {\n    symbol: 'SAMO-USDC',\n    name: 'SAMO-USDC LP',\n    coin: { ...TOKENS.SAMO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'B2PjGEP3vPf1999fUD14pYdxvSDRVBk43hxB2rgthwEY',\n    decimals: TOKENS.SAMO.decimals\n  },\n  'ABR-USDC-V4': {\n    symbol: 'ABR-USDC',\n    name: 'ABR-USDC LP',\n    coin: { ...TOKENS.ABR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'ECHfxkf5zjjZFTX95QfFahNyzG7feyEKcfTdjsdrMSGU',\n    decimals: TOKENS.ABR.decimals\n  },\n  'IN-USDC-V4': {\n    symbol: 'IN-USDC',\n    name: 'IN-USDC LP',\n    coin: { ...TOKENS.IN },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GbmJtVgg9fRmmmjKUYGMZeSt8wZ47cDDXasg5Y3iF4kz',\n    decimals: TOKENS.IN.decimals\n  },\n  'weDYDX-USDC-V4': {\n    symbol: 'weDYDX-USDC',\n    name: 'weDYDX-USDC LP',\n    coin: { ...TOKENS.weDYDX },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BjkkMZnnzmgLqzGErzDbkk15ozv48iVKQuunpeM2Hqnk',\n    decimals: TOKENS.weDYDX.decimals\n  },\n  'STARS-USDC-V4': {\n    symbol: 'STARS-USDC',\n    name: 'STARS-USDC LP',\n    coin: { ...TOKENS.STARS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FJ68q7NChhETcGVdinMbM2FF1Cy79dpmUi6HC83K55Hv',\n    decimals: TOKENS.STARS.decimals\n  },\n  'weAXS-USDC-V4': {\n    symbol: 'weAXS-USDC',\n    name: 'weAXS-USDC LP',\n    coin: { ...TOKENS.weAXS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '6PSoJQ7myQ1BJtbQC6oiWR8HSecQGyoWsPYTZRJo2ci3',\n    decimals: TOKENS.weAXS.decimals\n  },\n  'weSHIB-USDC-V4': {\n    symbol: 'weSHIB-USDC',\n    name: 'weSHIB-USDC LP',\n    coin: { ...TOKENS.weSHIB },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'AcjX5pmTMGSgxkdxc3r82r6WMKBvS6eQXXFz5ck5KKUa',\n    decimals: TOKENS.weSHIB.decimals\n  },\n  'SBR-USDC-V4': {\n    symbol: 'SBR-USDC',\n    name: 'SBR-USDC LP',\n    coin: { ...TOKENS.SBR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9FC8xTFRbgTpuZZYAYnZLxgnQ8r7FwfSBM1SWvGwgF7s',\n    decimals: TOKENS.SBR.decimals\n  },\n  'OXS-USDC-V4': {\n    symbol: 'OXS-USDC',\n    name: 'OXS-USDC LP',\n    coin: { ...TOKENS.OXS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'et9pdjWm97rbmsJoN183GkFV5qzTGru79GE1Zhe7NTU',\n    decimals: TOKENS.OXS.decimals\n  },\n  'CWAR-USDC-V4': {\n    symbol: 'CWAR-USDC',\n    name: 'CWAR-USDC LP',\n    coin: { ...TOKENS.CWAR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'HjR23bxn2gtRDB2P1Tm3DLepAPPZgazsWJpLG9wqjnYR',\n    decimals: TOKENS.CWAR.decimals\n  },\n  'UPS-USDC-V4': {\n    symbol: 'UPS-USDC',\n    name: 'UPS-USDC LP',\n    coin: { ...TOKENS.UPS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '9hSUZdREEsbaYaKY4FouvXr7xyAqtpdHRDoYCb6Mb28a',\n    decimals: TOKENS.UPS.decimals\n  },\n  'weSAND-USDC-V4': {\n    symbol: 'weSAND-USDC',\n    name: 'weSAND-USDC LP',\n    coin: { ...TOKENS.weSAND },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3dADrQa7utyiCsaFeVk9r7oebW1WheowhKo5soBYKBVT',\n    decimals: TOKENS.weSAND.decimals\n  },\n  'weMANA-USDC-V4': {\n    symbol: 'weMANA-USDC',\n    name: 'weMANA-USDC LP',\n    coin: { ...TOKENS.weMANA },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'HpUkVAPRJ5zNRuJ1ZwMXEhbMHL3gSuPb2QuSER9YUd3a',\n    decimals: TOKENS.weMANA.decimals\n  },\n  'CAVE-USDC-V4': {\n    symbol: 'CAVE-USDC',\n    name: 'CAVE-USDC LP',\n    coin: { ...TOKENS.CAVE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '5Gba1k3fU7Vh7UtAiBmie9vhQNNq1JfEwgn1DPGZ7NKQ',\n    decimals: TOKENS.CAVE.decimals\n  },\n  'GENE-USDC-V4': {\n    symbol: 'GENE-USDC',\n    name: 'GENE-USDC LP',\n    coin: { ...TOKENS.GENE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7GKvfHEXenNiWYbJBKae89mdaMPr5gGMYwZmyC8gBNVG',\n    decimals: TOKENS.GENE.decimals\n  },\n  'GENE-RAY-V4': {\n    symbol: 'GENE-RAY',\n    name: 'GENE-RAY LP',\n    coin: { ...TOKENS.GENE },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '3HzXnc1qZ8mGqun18Ck3KA616XnZNqF1RWbgYE2nGRMA',\n    decimals: TOKENS.GENE.decimals\n  },\n  'APT-USDC-V4': {\n    symbol: 'APT-USDC',\n    name: 'APT-USDC LP',\n    coin: { ...TOKENS.APT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Hk8mDAJFq4E9kF3DtNgPFwzbo5kbeiusNFJgWmo3LoQ5',\n    decimals: TOKENS.APT.decimals\n  },\n  'GOFX-USDC-V4': {\n    symbol: 'GOFX-USDC',\n    name: 'GOFX-USDC LP',\n    coin: { ...TOKENS.GOFX },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4svqAwrLPGRDCQuuieYTmtLXF75wiahjeK2rEN9tY1YL',\n    decimals: TOKENS.GOFX.decimals\n  },\n  'SONAR-USDC-V4': {\n    symbol: 'SONAR-USDC',\n    name: 'SONAR-USDC LP',\n    coin: { ...TOKENS.SONAR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2tAcfqJ1YYjpGLqwh76kyNt9VaNFDd4fJySfH6SmWfKt',\n    decimals: TOKENS.SONAR.decimals\n  },\n  'JSOL-SOL-V4': {\n    symbol: 'JSOL-SOL',\n    name: 'JSOL-SOL LP',\n    coin: { ...TOKENS.JSOL },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '61z37rpHsU6d3Fq5sUjJ85K6tXGzkoYKDAG3kPJQNDRo',\n    decimals: TOKENS.JSOL.decimals\n  },\n  'JSOL-USDC-V4': {\n    symbol: 'JSOL-USDC',\n    name: 'JSOL-USDC LP',\n    coin: { ...TOKENS.JSOL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3JZqf2VPNxj1kDZQsfzC7myM6spsGQbGuFv1gVfdYosN',\n    decimals: TOKENS.JSOL.decimals\n  },\n  'SHILL-USDC-V4': {\n    symbol: 'SHILL-USDC',\n    name: 'SHILL-USDC LP',\n    coin: { ...TOKENS.SHILL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CnUhYBtQEbSBZ76bgxAouVCTCb8rofZzwerVF5z5LREJ',\n    decimals: TOKENS.SHILL.decimals\n  },\n  'DFL-USDC-V4': {\n    symbol: 'DFL-USDC',\n    name: 'DFL-USDC LP',\n    coin: { ...TOKENS.DFL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Fffijd6UVJdQeLVXhenS8YcsnMUdWJqpbBeH42LFkXgS',\n    decimals: TOKENS.DFL.decimals\n  },\n  'BOKU-USDC-V4': {\n    symbol: 'BOKU-USDC',\n    name: 'BOKU-USDC LP',\n    coin: { ...TOKENS.BOKU },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8jjQn5Yagb6Nm2WGAxPW1bcGqrTWpg5adf6QukXEarcP',\n    decimals: TOKENS.BOKU.decimals\n  },\n  'MIMO-SOL-V4': {\n    symbol: 'MIMO-SOL',\n    name: 'MIMO-SOL LP',\n    coin: { ...TOKENS.MIMO },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: 'HUJ1opSk8AiPfDT47r7n4hTiK2EXgrR3Msy7T8q1BywS',\n    decimals: TOKENS.MIMO.decimals\n  },\n  'wbWBNB-USDC-V4': {\n    symbol: 'wbWBNB-USDC',\n    name: 'wbWBNB-USDC LP',\n    coin: { ...TOKENS.wbWBNB },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FEsEfEJJSfiMQcshUgZ5UigfytfGRQ3z5puyF6DXDp9C',\n    decimals: TOKENS.wbWBNB.decimals\n  },\n  'wePEOPLE-USDC-V4': {\n    symbol: 'wePEOPLE-USDC',\n    name: 'wePEOPLE-USDC LP',\n    coin: { ...TOKENS.wePEOPLE },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3e5ZCKi4etorpV4pv1fSckP5iJD67xcUkx3RtFCZhbzD',\n    decimals: TOKENS.wePEOPLE.decimals\n  },\n  'ISOLA-USDT-V4': {\n    symbol: 'ISOLA-USDT',\n    name: 'ISOLA-USDT LP',\n    coin: { ...TOKENS.ISOLA },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: 'H8s1wQsZpRK61pyLF3XwyQc6E8vNUnwRDhy3TBDCDENQ',\n    decimals: TOKENS.ISOLA.decimals\n  },\n  'SPWN-USDC-V4': {\n    symbol: 'SPWN-USDC',\n    name: 'SPWN-USDC LP',\n    coin: { ...TOKENS.SPWN },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'B5uyCAQcX6nAjZypLgiivbEKabSptgUb8JK9tkaSnqdW',\n    decimals: TOKENS.SPWN.decimals\n  },\n  'STR-USDC-V4': {\n    symbol: 'STR-USDC',\n    name: 'STR-USDC LP',\n    coin: { ...TOKENS.STR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8uDVKmVwNmbXHDB7rNKqtpcT9VAsFHTJ5pPYxjyoBbNg',\n    decimals: TOKENS.STR.decimals\n  },\n  'SOLC-USDT-V4': {\n    symbol: 'SOLC-USDT',\n    name: 'SOLC-USDT LP',\n    coin: { ...TOKENS.SOLC },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: '2g9JzTWycLzK4KEBBHsponAtZRee2ii63bRrJ8tefEyt',\n    decimals: TOKENS.SOLC.decimals\n  },\n  'VI-USDC-V4': {\n    symbol: 'VI-USDC',\n    name: 'VI-USDC LP',\n    coin: { ...TOKENS.VI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3MwHyHCRfVqtH3ABFtdKXdY9dwemr9GGxQFaBkeq6NjY',\n    decimals: TOKENS.VI.decimals\n  },\n  'KKO-USDC-V4': {\n    symbol: 'KKO-USDC',\n    name: 'KKO-USDC LP',\n    coin: { ...TOKENS.KKO },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7xr1Doc1NiMWbUg99YVFqQSLfYXNzo6YvacXUsSgBMNW',\n    decimals: TOKENS.KKO.decimals\n  },\n  'XTAG-USDC-V4': {\n    symbol: 'XTAG-USDC',\n    name: 'XTAG-USDC LP',\n    coin: { ...TOKENS.XTAG },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GCEQbLg4ik5YJ4CMcbtuVqEc4sjLdSGy34rFk1CtGjdg',\n    decimals: TOKENS.XTAG.decimals\n  },\n  'TTT-USDC-V4': {\n    symbol: 'TTT-USDC',\n    name: 'TTT-USDC LP',\n    coin: { ...TOKENS.TTT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '84fmrerHGohoRf4iLPDQ1KG4CjSjCRksYWGzjWfCRM8a',\n    decimals: TOKENS.TTT.decimals\n  },\n  'RUN-USDC-V4': {\n    symbol: 'RUN-USDC',\n    name: 'RUN-USDC LP',\n    coin: { ...TOKENS.RUN },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CjTLvvKSQdEujcSzeZRYgk4w1DpuXBbMppLHaxZyz11Y',\n    decimals: TOKENS.RUN.decimals\n  },\n  'CRWNY-USDC-V4': {\n    symbol: 'CRWNY-USDC',\n    name: 'CRWNY-USDC LP',\n    coin: { ...TOKENS.CRWNY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'H3D9Gyi4frRLW6bS9vBthDVDJyzyRJ6XhhpP6PJGWaDC',\n    decimals: TOKENS.CRWNY.decimals\n  },\n  'CRWNY-RAY-V4': {\n    symbol: 'CRWNY-RAY',\n    name: 'CRWNY-RAY LP',\n    coin: { ...TOKENS.CRWNY },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: '5Cz9wGStNjiUg81q8t6sJJeckuT2C14CYSfyQbtYirSX',\n    decimals: TOKENS.CRWNY.decimals\n  },\n  'BLOCK-USDC-V4': {\n    symbol: 'BLOCK-USDC',\n    name: 'BLOCK-USDC LP',\n    coin: { ...TOKENS.BLOCK },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '8i44Y23GkkwDYZ5iSkVEqmrXUfwNmwo9grguTDWKM8wg',\n    decimals: TOKENS.BLOCK.decimals\n  },\n  'REAL-USDC-V4': {\n    symbol: 'REAL-USDC',\n    name: 'REAL-USDC LP',\n    coin: { ...TOKENS.REAL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EN43tp8xdkcM8RYSJ4msFHMPTJRXKhUteVYBDJLwTvr3',\n    decimals: TOKENS.REAL.decimals\n  },\n  'FRKT-USDC-V4': {\n    symbol: 'FRKT-USDC',\n    name: 'FRKT-USDC LP',\n    coin: { ...TOKENS.FRKT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7MgzqVTGeA4wENme81QPTrPy45NJMKVL9XGwxmNT87cG',\n    decimals: TOKENS.FRKT.decimals\n  },\n  'MBS-USDC-V4': {\n    symbol: 'MBS-USDC',\n    name: 'MBS-USDC LP',\n    coin: { ...TOKENS.MBS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BAgSWaPZpsQKyZJdvB5KyvmCNj6hzczzentt5FhDCVHb',\n    decimals: TOKENS.MBS.decimals\n  },\n  'PRISM-USDC-V4': {\n    symbol: 'PRISM-USDC',\n    name: 'PRISM-USDC LP',\n    coin: { ...TOKENS.PRISM },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '3baYkTcudvSFMe25UpZcBfdp4FA5kL2E4pfaeJ8AiYJB',\n    decimals: TOKENS.PRISM.decimals\n  },\n  'CHICKS-USDC-V4': {\n    symbol: 'CHICKS-USDC',\n    name: 'CHICKS-USDC LP',\n    coin: { ...TOKENS.CHICKS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'CPzmcw81a6PDasSXhVLfDRKuTJXZPUqocS9VFf5zCFhs',\n    decimals: TOKENS.CHICKS.decimals\n  },\n  'MEAN-RAY-V4': {\n    symbol: 'MEAN-RAY',\n    name: 'MEAN-RAY LP',\n    coin: { ...TOKENS.MEAN },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'H9wUyrxpAErmdNVPitpHSXgwoomoh91ggJKPWtQQoCn1',\n    decimals: TOKENS.MEAN.decimals\n  },\n  'TINY-USDC-V4': {\n    symbol: 'TINY-USDC',\n    name: 'TINY-USDC LP',\n    coin: { ...TOKENS.TINY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Hho6ZzRDj49L4z6zog8nQZFaxMSz6FX6wNzVpMeAMen',\n    decimals: TOKENS.TINY.decimals\n  },\n  'SCY-USDC-V4': {\n    symbol: 'SCY-USDC',\n    name: 'SCY-USDC LP',\n    coin: { ...TOKENS.SCY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'EcYk7t6Vw59HDnY2u6H1KDPkk8juMeA1NpGpHiGk1LDf',\n    decimals: TOKENS.SCY.decimals\n  },\n  'SLC-USDC-V4': {\n    symbol: 'SLC-USDC',\n    name: 'SLC-USDC LP',\n    coin: { ...TOKENS.SLC },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '4A3kqZBJu581eFePXL1dTLfxEkjZPWJFgj4tJmP6mQQp',\n    decimals: TOKENS.SLC.decimals\n  },\n  'SVT-USDC-V4': {\n    symbol: 'SVT-USDC',\n    name: 'SVT-USDC LP',\n    coin: { ...TOKENS.SVT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'HXLkojxGWSUwjagzRXMFRgmnNxkcKrFHvq4ZCZeNvBJL',\n    decimals: TOKENS.SVT.decimals\n  },\n  'BOT-USDC-V4': {\n    symbol: 'BOT-USDC',\n    name: 'BOT-USDC LP',\n    coin: { ...TOKENS.BOT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '6o4gmzih4Xr36UAd1NdJg8BunYGY4Dde32eJ1TMh74N4',\n    decimals: TOKENS.BOT.decimals\n  },\n  'AART-USDC-V4': {\n    symbol: 'AART-USDC',\n    name: 'AART-USDC LP',\n    coin: { ...TOKENS.AART },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'BYkCfYGDqmmeD9nRGY2QuHpVLpEfH4JaQEFA77C13rGY',\n    decimals: TOKENS.AART.decimals\n  },\n  'FANT-USDC-V4': {\n    symbol: 'FANT-USDC',\n    name: 'FANT-USDC LP',\n    coin: { ...TOKENS.FANT },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GdAhnP6fwhQUmQC1Pw1NvvWFwNqz8Pt4TWeH7DwkGzpB',\n    decimals: TOKENS.FANT.decimals\n  },\n  'AART-RAY-V4': {\n    symbol: 'AART-RAY',\n    name: 'AART-RAY LP',\n    coin: { ...TOKENS.AART },\n    pc: { ...TOKENS.RAY },\n\n    mintAddress: 'CuRZaiwYqFqQRehoiUK1KEeThXEGo5UysD2kzNhc7H2H',\n    decimals: TOKENS.AART.decimals\n  },\n  'stSOL-USDT-V4': {\n    symbol: 'stSOL-USDT',\n    name: 'stSOL-USDT LP',\n    coin: { ...TOKENS.stSOL },\n    pc: { ...TOKENS.USDT },\n\n    mintAddress: '2pdg9vAH8GsTTWSSP3Za6j5ts4Nzs6tEbNterVe9H62H',\n    decimals: TOKENS.stSOL.decimals\n  },\n  'wLDO-stSOL-V4': {\n    symbol: 'wLDO-stSOL',\n    name: 'wLDO-stSOL LP',\n    coin: { ...TOKENS.wLDO },\n    pc: { ...TOKENS.stSOL },\n\n    mintAddress: '7vff6hQtbAC8v2i7mAGqK1HLQs9DWJ6A7GHsbovzxCNr',\n    decimals: TOKENS.wLDO.decimals\n  },\n  'NOS-USDC-V4': {\n    symbol: 'NOS-USDC',\n    name: 'NOS-USDC LP',\n    coin: { ...TOKENS.NOS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7HwjdFEyGu7tQia33GFB4iFEa5dA7k4gr6BWUGS7tyyq',\n    decimals: TOKENS.NOS.decimals\n  },\n  'PRMS-USDC-V4': {\n    symbol: 'PRMS-USDC',\n    name: 'PRMS-USDC LP',\n    coin: { ...TOKENS.PRMS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '6K3EbDKd9VCR7YdFHZSdd5MfzjWZY79EqprVphrN75gf',\n    decimals: TOKENS.PRMS.decimals\n  },\n  '$WOOD-USDC-V4': {\n    symbol: '$WOOD-USDC',\n    name: '$WOOD-USDC LP',\n    coin: { ...TOKENS.$WOOD },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '2e9vCgqAhxAJ8zLtmaitu8Go3hT5vozMtAtCwgAN83Yu',\n    decimals: TOKENS.$WOOD.decimals\n  },\n  'CMFI-USDC-V4': {\n    symbol: 'CMFI-USDC',\n    name: 'CMFI-USDC LP',\n    coin: { ...TOKENS.CMFI },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '7HnBaMZwUA8FKhsiHu1xsxvwpxcGMoDj7XFqgmFnw6ft',\n    decimals: TOKENS.CMFI.decimals\n  },\n  'FCON-USDC-V4': {\n    symbol: 'FCON-USDC',\n    name: 'FCON-USDC LP',\n    coin: { ...TOKENS.FCON },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'ExkuW75SbEGPm6i4uFv7Rnncd3hY5whirtRPTujC1Yoe',\n    decimals: TOKENS.FCON.decimals\n  },\n  'PSY-USDC-V4': {\n    symbol: 'PSY-USDC',\n    name: 'PSY-USDC LP',\n    coin: { ...TOKENS.PSY },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'Hrip9d8f6iQ4JxfB85JyGGq3u2WgpmqRSXJZursm26hd',\n    decimals: TOKENS.PSY.decimals\n  },\n  'ATS-USDC-V4': {\n    symbol: 'ATS-USDC',\n    name: 'ATS-USDC LP',\n    coin: { ...TOKENS.ATS },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'GTy3TKmh3Ejrdh7iTALUG3PYv4VC7wgwM9vGgdLj6Rus',\n    decimals: TOKENS.ATS.decimals\n  },\n  'FLWR-USDC-V4': {\n    symbol: 'FLWR-USDC',\n    name: 'FLWR-USDC LP',\n    coin: { ...TOKENS.FLWR },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '21rqpdZbZTMyzsfrvNNLzhQSz3oEC714EyiRfzNBXyUz',\n    decimals: TOKENS.FLWR.decimals\n  },\n  'ROLL-SOL-V4': {\n    symbol: 'ROLL-SOL',\n    name: 'ROLL-SOL LP',\n    coin: { ...TOKENS.ROLL },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '8YXJzgWrbnJDQytphH5BgDbz7ygoxQdD9aBRFZzVwJEJ',\n    decimals: TOKENS.ROLL.decimals\n  },\n  'ROLL-USDC-V4': {\n    symbol: 'ROLL-USDC',\n    name: 'ROLL-USDC LP',\n    coin: { ...TOKENS.ROLL },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: 'FTXsrept22Ub4MjDSPgXaAboRi13GmKJhuaauoAXWeZJ',\n    decimals: TOKENS.ROLL.decimals\n  },\n  'DOGO-SOL-V4': {\n    symbol: 'DOGO-SOL',\n    name: 'DOGO-SOL LP',\n    coin: { ...TOKENS.DOGO },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '23Ki3fss6htv8ZVGjobe4cYJffJP1UjwK1PyVmtxE1eh',\n    decimals: TOKENS.DOGO.decimals\n  },\n  'STR-SOL-V4': {\n    symbol: 'STR-SOL',\n    name: 'STR-SOL LP',\n    coin: { ...TOKENS.STR },\n    pc: { ...NATIVE_SOL },\n\n    mintAddress: '8uDVKmVwNmbXHDB7rNKqtpcT9VAsFHTJ5pPYxjyoBbNg',\n    decimals: TOKENS.STR.decimals\n  },\n  'SEEDED-USDC-V4': {\n    symbol: 'SEEDED-USDC',\n    name: 'SEEDED-USDC LP',\n    coin: { ...TOKENS.SEEDED },\n    pc: { ...TOKENS.USDC },\n\n    mintAddress: '5XwLgkEZYuMai7D5tRv4kseYjvisqztdotuWGvyo3aBn',\n    decimals: TOKENS.SEEDED.decimals\n  }\n}\n\nfunction addUserLocalCoinMint() {\n  const localMintStr = window.localStorage.user_add_coin_mint\n  const localMintList = (localMintStr ?? '').split('---')\n  if (localMintList.length % 3 !== 0) {\n    window.localStorage.removeItem('user_add_coin_mint')\n  } else {\n    for (let index = 0; index < Math.floor(localMintList.length / 3); index += 1) {\n      const name = localMintList[index * 3 + 0]\n      const mintAddress = localMintList[index * 3 + 1]\n      const decimals = localMintList[index * 3 + 2]\n      if (!Object.values(TOKENS).find((item) => item.mintAddress === mintAddress)) {\n        TOKENS[name + mintAddress + 'unofficialUserAdd'] = {\n          name,\n          symbol: name,\n          decimals: parseInt(decimals),\n          mintAddress,\n          tags: ['userAdd']\n        }\n      } else if (\n        !Object.values(TOKENS)\n          .find((item) => item.mintAddress === mintAddress)\n          .tags.includes('userAdd')\n      ) {\n        Object.values(TOKENS)\n          .find((item) => item.mintAddress === mintAddress)\n          .tags.push('userAdd')\n      }\n    }\n  }\n}\n\n// fake\nconst BLACK_LIST = [\n  '3pX59cis3ZXnX6ZExPoUQjpvJVspmj4YavtUmpTpkB33',\n  'EUjf7vzZsWjR3eGo5jEASxYyqt7ALqdmE87bDbURUWWV',\n  '2bXBmaYJwJfj5Cu8TDqLLrW1b9L7dK6sLgKoBBYRBzTH'\n]\n\nfunction blockBlackList(tokens: { address: string }[]) {\n  return tokens.filter((item) => !BLACK_LIST.includes(item.address))\n}\n\nfunction addTokensSolana() {\n  fetch('https://api.raydium.io/cache/solana-token-list')\n    .then(async (response) => {\n      addTokensSolanaFunc(blockBlackList((await response.json()).tokens))\n    })\n    .catch(() => {\n      fetch('https://raw.githubusercontent.com/solana-labs/token-list/main/src/tokens/solana.tokenlist.json')\n        .then(function (response) {\n          return response.json()\n        })\n        .then(function (myJson) {\n          addTokensSolanaFunc(blockBlackList(myJson.tokens))\n        })\n    })\n\n  fetch('https://sdk.raydium.io/token/raydium.mainnet.json').then(async (response) => {\n    flushTokenIcon(Object.values((await response.json()).spl))\n  })\n}\n\nconst notUseSolanaPicMint: string[] = [TOKENS.TTT.mintAddress]\n\nfunction flushTokenIcon(tokens: any[]) {\n  tokens.forEach((itemToken: any) => {\n    const token = Object.values(TOKENS).find((item) => item.mintAddress === itemToken.mint)\n    if (token) {\n      token.picUrl = `https://sdk.raydium.io/icons/${token.mintAddress}.png`\n    }\n  })\n}\n\nfunction addTokensSolanaFunc(tokens: any[]) {\n  tokens.forEach((itemToken: any) => {\n    if (itemToken.tags && itemToken.tags.includes('lp-token')) {\n      return\n    }\n    if (!Object.values(TOKENS).find((item) => item.mintAddress === itemToken.address)) {\n      TOKENS[itemToken.symbol + itemToken.address + 'solana'] = {\n        symbol: itemToken.symbol,\n        name: itemToken.name,\n        mintAddress: itemToken.address,\n        decimals: itemToken.decimals,\n        picUrl: itemToken.logoURI,\n        tags: ['solana']\n      }\n    } else {\n      const token = Object.values(TOKENS).find((item) => item.mintAddress === itemToken.address)\n      if (token.symbol !== itemToken.symbol && !token.tags.includes('raydium')) {\n        token.symbol = itemToken.symbol\n        token.name = itemToken.name\n        token.decimals = itemToken.decimals\n        token.tags.push('solana')\n      }\n      const picToken = Object.values(TOKENS).find((item) => item.mintAddress === itemToken.address)\n      if (picToken && !notUseSolanaPicMint.includes(itemToken.address)) {\n        picToken.picUrl = itemToken.logoURI\n      }\n    }\n  })\n\n  if (window.localStorage.addSolanaCoin) {\n    window.localStorage.addSolanaCoin.split('---').forEach((itemMint: string) => {\n      if (itemMint === NATIVE_SOL.mintAddress) NATIVE_SOL.tags.push('userAdd')\n      else\n        Object.keys(TOKENS).forEach((item) => {\n          if (TOKENS[item].mintAddress === itemMint) {\n            TOKENS[item].tags.push('userAdd')\n          }\n        })\n    })\n  }\n}\n\nfunction updateTokenTagsChange() {\n  const userSelectSource = window.localStorage.userSelectSource ?? ''\n  const userSelectSourceList: string[] = userSelectSource.split('---')\n  for (const itemSource of userSelectSourceList) {\n    if (TOKENS_TAGS[itemSource] && !TOKENS_TAGS[itemSource].mustShow) {\n      TOKENS_TAGS[itemSource].show = true\n    }\n  }\n}\n\naddUserLocalCoinMint()\naddTokensSolana()\nupdateTokenTagsChange()","// https://github.com/raydium-io/raydium-ui/blob/master/src/utils/farms.ts\nimport { cloneDeep } from 'lodash-es'\n/*MAKE SURE TO RENAME FILE LOC FROM PROVIDER*/\nimport { STAKE_PROGRAM_ID, STAKE_PROGRAM_ID_V4, STAKE_PROGRAM_ID_V5 } from './ids'\nimport { LP_TOKENS, TokenInfo, TOKENS } from './tokens'\n\nexport interface FarmInfo {\n  name: string\n  lp: TokenInfo\n  reward: TokenInfo\n  rewardB?: TokenInfo\n  isStake: boolean\n\n  fusion: boolean\n  legacy: boolean\n  dual: boolean\n  version: number\n  programId: string\n\n  poolId: string\n  poolAuthority: string\n\n  poolLpTokenAccount: string\n  poolRewardTokenAccount: string\n  poolRewardTokenAccountB?: string\n\n  user?: object\n}\n\nexport function getFarmByLpMintAddress(lpMintAddress: string): FarmInfo | undefined {\n  const farm = FARMS.find((farm) => farm.lp.mintAddress === lpMintAddress)\n\n  if (farm) {\n    return cloneDeep(farm)\n  }\n\n  return farm\n}\n\nexport function getFarmByRewardMintAddress(lpMintAddress: string): FarmInfo | undefined {\n  const farm = FARMS.find((farm) => farm.reward.mintAddress === lpMintAddress)\n\n  if (farm) {\n    return cloneDeep(farm)\n  }\n\n  return farm\n}\n\nexport function getFarmByPoolId(poolId: string): FarmInfo | undefined {\n  const farm = FARMS.find((farm) => farm.poolId === poolId)\n\n  if (farm) {\n    return cloneDeep(farm)\n  }\n\n  return farm\n}\n\nexport function getAddressForWhat(address: string) {\n  // dont use forEach\n  for (const farm of FARMS) {\n    for (const [key, value] of Object.entries(farm)) {\n      // if (key === 'lp') {\n      //   if (value.mintAddress === address) {\n      //     return { key: 'poolId', poolId: farm.poolId }\n      //   }\n      // } else if (key === 'reward') {\n      //   if (value.mintAddress === address) {\n      //     return { key: 'rewardMintAddress', poolId: farm.poolId }\n      //   }\n      // } else\n\n      if (value === address) {\n        return { key, poolId: farm.poolId }\n      }\n    }\n  }\n\n  return {}\n}\n\nexport const FARMS: FarmInfo[] = [\n  // v3 farm\n  {\n    name: 'RAY-USDC',\n    lp: { ...LP_TOKENS['RAY-USDC-V3'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: true,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: '8nEWqxeDNZ2yo1izbPzY4nwR55isBZRaQk7CM8ntwUwR',\n    poolAuthority: '6vQGZLsHgpJdqh1ER7q2q6mjZ43QwzhtTofTzb2sUhNh',\n    poolLpTokenAccount: '77ujS15hjUfFZkM8QAw4HMLvMGZg95Gcm6ixjA1bnk3M', // lp vault\n    poolRewardTokenAccount: '3ejmkn5HpXR9KdVWkai1Ngo87sQSUyKXrx8wSakipkno' // reward vault\n  },\n  {\n    name: 'RAY-SRM',\n    lp: { ...LP_TOKENS['RAY-SRM-V3'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: true,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: 'HwEgvS79S53yzYUTRHShU6EuNmhR3WTX5tTZPUzBmwky',\n    poolAuthority: '9B3XWm89zX7NwaBB8VmT5mrWvxVpd9eyfQMeqkuLkcCF',\n    poolLpTokenAccount: 'F4zXXzqkyT1GP5CVdEgC7qTcDfR8ox5Akm6RCbBdBsRp', // lp vault\n    poolRewardTokenAccount: 'FW7omPaCCvgBgUFKwvwU2jf1w1wJGjDrJqurr3SeXn14' // reward vault\n  },\n  {\n    name: 'RAY-SOL',\n    lp: { ...LP_TOKENS['RAY-SOL-V3'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: true,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: 'ECqG3sxwJiq9TTYsRBd7fPGsBKYF4fyogo6Df7c13qdJ',\n    poolAuthority: '4Wf4om12g9xzEeeD139ffCuXn4W2huMcXziiSAzf7Nig',\n    poolLpTokenAccount: '9kWnkQtMAW2bzKeLQsTdan1rEoypDHaAVnZRcoBPDBfQ', // lp vault\n    poolRewardTokenAccount: '8z4kQbgQFe4zXE4NSozWJTJV14gD4evNq4CKn5ryB6S3' // reward vault\n  },\n  {\n    name: 'RAY-ETH',\n    lp: { ...LP_TOKENS['RAY-ETH-V3'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: true,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: 'CYKDTwojSLVFEShB3tcTTfMjtBxUNtYfCTM4PiMFGkio',\n    poolAuthority: 'Azmucec2jdgWagFkbnqmwYcsrtKPf1v1kcM95v6s1zxu',\n    poolLpTokenAccount: 'EncPBQhpc5KLmcgRD2PutQz7wBBNQkVN2s8jjFWEw9no', // lp vault\n    poolRewardTokenAccount: '8q8BHw7fP7mitLrb2jzw78qcSEgCvM7GTB5PzbSQobUt' // reward vault\n  },\n  // v3\n  {\n    name: 'RAY-WUSDT',\n    lp: { ...LP_TOKENS['RAY-WUSDT-V3'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: true,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: '6d3vDYvk6VFVacEAGA1NDyxkQPRiNxXQRkeKpTPMJwe4',\n    poolAuthority: 'EcPc2KUDFMyPNAVPE6PsMkzneBFKNqRjUhfhyM2da9go',\n    poolLpTokenAccount: 'Gx4kLpTirc3Lr3GEYojYt1zUmsCcWajjBZTFVA3tzyDg', // lp vault\n    poolRewardTokenAccount: 'J144vsbPdLa9V6JpvGFH63bQw8QhQckUNe48YjPKwcZo' // reward vault\n  },\n  {\n    name: 'RAY-USDT',\n    lp: { ...LP_TOKENS['RAY-USDT-V4'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: false,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: 'AvbVWpBi2e4C9HPmZgShGdPoNydG4Yw8GJvG9HUcLgce',\n    poolAuthority: '8JYVFy3pYsPSpPRsqf43KSJFnJzn83nnRLQgG88XKB8q',\n    poolLpTokenAccount: '4u4AnMBHXehdpP5tbD6qzB5Q4iZmvKKR5aUr2gavG7aw', // lp vault\n    poolRewardTokenAccount: 'HCHNuGzkqSnw9TbwpPv1gTnoqnqYepcojHw9DAToBrUj' // reward vault\n  },\n  // v2\n  {\n    name: 'RAY-WUSDT',\n    lp: { ...LP_TOKENS['RAY-WUSDT'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: true,\n    dual: false,\n    version: 2,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: '5w3itB5PVAPAiPFpBcMyGZJWukmcuRtwFRkQJF3WzHdj',\n    poolAuthority: '4qgEHMtCAA4Z3rY4C1ihz9JHETHFhQVqj81Q1qyB83WP',\n    poolLpTokenAccount: 'n1gotGPqeUxJnA4yE7QCCsNG8AVqQ1HuATkAhAfVMVV', // lp vault\n    poolRewardTokenAccount: 'h8uQ293dPdJd7qFRFE1pvMbpFmxrtD64QaxUWwis4Wv' // reward vault\n  },\n  {\n    name: 'RAY-USDC',\n    lp: { ...LP_TOKENS['RAY-USDC'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: true,\n    dual: false,\n    version: 2,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: '3j7qWosyu3cVNgbwdWRxEf4SxJKNWoWqgpAEn4RLpMrR',\n    poolAuthority: 'BZhcMxjRy9oXSgghLN52uhsML5ooXS377yTJhkw96bYX',\n    poolLpTokenAccount: '6qsk4PmATtiu132YJuUgVt4zekbTYV3xRZWxoc1rAg9U', // lp vault\n    poolRewardTokenAccount: 'Aucgi2G2ufXTGGYf2ng3ZyQXLu6RH6ioL1R7mGfhUcbQ' // reward vault\n  },\n  {\n    name: 'RAY-SRM',\n    lp: { ...LP_TOKENS['RAY-SRM'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: true,\n    dual: false,\n    version: 2,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: 'GLQwyMF1txnAdEnoYuPTPsWdXqUuxgTMsWEV38njk48C',\n    poolAuthority: '5ddsMftKDoaT5qHnHKnfkGCexJhiaNz1E4mMagy6qMku',\n    poolLpTokenAccount: 'HFYPGyBW5hsQnrtQntg4d6Gzyg6iaehVTAVNqQ6f5f28', // lp vault\n    poolRewardTokenAccount: 'ETwFtP1dYCbvbARNPfKuJFxoGFDTTsqB6j3pRquPE7Fq' // reward vault\n  },\n  // stake\n  {\n    name: 'RAY',\n    lp: { ...TOKENS.RAY },\n    reward: { ...TOKENS.RAY },\n    isStake: true,\n\n    fusion: false,\n    legacy: false,\n    dual: false,\n    version: 2,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: '4EwbZo8BZXP5313z5A2H11MRBP15M5n6YxfmkjXESKAW',\n    poolAuthority: '4qD717qKoj3Sm8YfHMSR7tSKjWn5An817nArA6nGdcUR',\n    poolLpTokenAccount: '8tnpAECxAT9nHBqR1Ba494Ar5dQMPGhL31MmPJz1zZvY', // lp vault\n    poolRewardTokenAccount: 'BihEG2r7hYax6EherbRmuLLrySBuSXx4PYGd9gAsktKY' // reward vault\n  },\n  // Reward double\n  {\n    name: 'FIDA-RAY',\n    lp: { ...LP_TOKENS['FIDA-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.FIDA },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 4,\n    programId: STAKE_PROGRAM_ID_V4,\n\n    poolId: '8rAdapvcC5vYNLXzChMgt56s6HCQGE6Lbo469g3WRTUh',\n    poolAuthority: 'EcCKf3mgPtL6dNNAVG4gQQtLkAoTAUdf5vzFukkrviWq',\n    poolLpTokenAccount: 'H6kzwNNg9zbgC1YBjvCN4BdebtA4NusvgUhUSDZoz8rP', // lp vault\n    poolRewardTokenAccount: '7vnPTB2HAXFUAV5iiVZTNHgAnVYjgXcdumbbqfeK6ugp', // reward vault A\n    poolRewardTokenAccountB: 'EGHdQm9KGLz6nw7W4rK13DyAMMJcGP9RpzCJaXiq75kQ' // reward vault B\n  },\n  {\n    name: 'OXY-RAY',\n    lp: { ...LP_TOKENS['OXY-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.OXY },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 4,\n    programId: STAKE_PROGRAM_ID_V4,\n\n    poolId: '7Hug9fKfTrasG3hHonXTfSnvv37mDeyoBHbVwyDjw693',\n    poolAuthority: 'CcD7KXVhjoeFpbkXeBgPpZChafEfTZ4zJL47LqmKdqwz',\n    poolLpTokenAccount: 'GtXoFnVRATaasBP6sroNaC54uLQfVAwGXsfKzgFqNiUc', // lp vault\n    poolRewardTokenAccount: 'GKC7BcGs1515CQx6hiK562u29dFQxBw8HWwJUxqi7xf1', // reward vault A\n    poolRewardTokenAccountB: 'DXDjRiC7EUUh9cj93tgBtX2jRkmnwtCMEAQD9GrYK2f6' // reward vault B\n  },\n  {\n    name: 'MAPS-RAY',\n    lp: { ...LP_TOKENS['MAPS-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MAPS },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 4,\n    programId: STAKE_PROGRAM_ID_V4,\n\n    poolId: 'Chb6atEWGmH2NitCqrCEMHB8uKWYQiiVaBnmJQDudm87',\n    poolAuthority: 'BcmgQZXCDPCduv3reT8LDQNqvGeGMZtFhBxyLYdrnCjE',\n    poolLpTokenAccount: '5uaBAwu1Sff58KNKGTwfacsjsrMU3wg6jtGtMWwiZd5B', // lp vault\n    poolRewardTokenAccount: '4LVikvk3gZEHaTUNh7L8bsx5By6NNnkqpKfcdJTWTD7Z', // reward vault A\n    poolRewardTokenAccountB: '3UWGpEe2NLD9oWPW1zdXGZRCvJxkNSC2puUWooNEugdS' // reward vault B\n  },\n  {\n    name: 'xCOPE-USDC',\n    lp: { ...LP_TOKENS['xCOPE-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.xCOPE },\n    isStake: false,\n\n    fusion: true,\n    legacy: true,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'XnRBbNMf6YcWvC1u2vBXXuMcagmRBRLu1y84mpqnKwW',\n    poolAuthority: 'AnYvA5H7oBeA1otnWHSu8ud3waFsEmfUbdAoM1VzdVvt',\n    poolLpTokenAccount: '6tXWzm8nLVtNtvqDH8bZNfUwpSjEcKZoJFpcV4hC5rLD', // lp vault\n    poolRewardTokenAccount: '8GoDpozsDk3U3J36vvPiq3YpnA6MeJb1QPVJFiupe2wR', // reward vault A\n    poolRewardTokenAccountB: '7niS4ngxgZ3oynHwH82PnwJXicTnY3fo9Vubi1PnjzJq' // reward vault B\n  },\n  {\n    name: 'STEP-USDC',\n    lp: { ...LP_TOKENS['STEP-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.STEP },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '8xhjCzfzVcP79jE7jXR2xtNaSL6aJYoDRLVT9FMjpRTC',\n    poolAuthority: '6wRMPrHKFzj3qB4j5yj4y9mDF89fZ6w7gD1cEzCJwT9B',\n    poolLpTokenAccount: 'CP3wdgdSygYGLJMjKfbJMiANnYuAxXHPiLTtB124tzVX', // lp vault\n    poolRewardTokenAccount: '3zSiR4XrrRPhsom2hh9iigYZZ7uCpMucfJnZRgREgH8j', // reward vault A\n    poolRewardTokenAccountB: '4n3vRUk3wdtbGWgMFSaxUcnGLKwa2wiWVhqw7kv9JDVS' // reward vault B\n  },\n  {\n    name: 'MEDIA-USDC',\n    lp: { ...LP_TOKENS['MEDIA-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MEDIA },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'Ef1gD9JMzWF6PNw2uc4744zouh57GyWAeVTjHHbQ2nsu',\n    poolAuthority: '3dhU2g3MSHK3LwjuE1VsEJCsNeWKyBJUMHt4EUXepTjs',\n    poolLpTokenAccount: 'DGjRtqsjeubLCLPD3yH8fj1d7TnrD3jKBpwa1UbVk7E6', // lp vault\n    poolRewardTokenAccount: 'Uen8f9Rn42i8sDTK5vEttrnX9AUwXV3yf6DFU63mKDb', // reward vault A\n    poolRewardTokenAccountB: 'Ek6n7Myojb6pSpQuqk5AyS7KXQdXkJyZT7ki9baYCxds' // reward vault B\n  },\n  {\n    name: 'COPE-USDC',\n    lp: { ...LP_TOKENS['COPE-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.COPE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'AxVvbT9fDFEkmdLwKUJRY5HsG2RXAZbe1dRAgJ2bDDwg',\n    poolAuthority: '3n1Vdmqu1MBUpBYMpYbpJAVFv4MeNMEa82waruLy7BDu',\n    poolLpTokenAccount: 'BHLzrd5MgQy4NgmUsn542yXRZWkz1iV5bfWg8s8D4tVL', // lp vault\n    poolRewardTokenAccount: '7nGY6xHCUR2MxJnHT1qvArRUEnpo2DsGGf6Pdu3tt9gv', // reward vault A\n    poolRewardTokenAccountB: '6ezx1EivkxsJcZLYhSJFLc3nUs25iyubf8PPyRNEX3pL' // reward vault B\n  },\n  {\n    name: 'MER-USDC',\n    lp: { ...LP_TOKENS['MER-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MER },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'D4pYuD4tbir9KBsb7Kr63v9e86JY2UoUZeFK9eHKQFZM',\n    poolAuthority: '2T46saTyTYeEFWyesRzLWj6y1ha9ngwcyWyGNn9q4zu4',\n    poolLpTokenAccount: 'EV3wsqiMiNcBmo2mFkUuCtib36NpBCsC2vfkW3By1sSu', // lp vault\n    poolRewardTokenAccount: '5gEH5Uq2QrqiEhdZ8YFAMY1HoYnKMiuu71f6BC25UXee', // reward vault A\n    poolRewardTokenAccountB: 'FTP4hnN5GPtPYvkrscTkKWYVVQ56hV3f4wGgpEXgrDUD' // reward vault B\n  },\n  {\n    name: 'ROPE-USDC',\n    lp: { ...LP_TOKENS['ROPE-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.ROPE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'BLy8KuRck5bcJkQdMDLSZnL1Ka4heAZSGiwTJfEfY727',\n    poolAuthority: '8xPzoFPHKWZHWmwKaxFUyVBf2V13HMbCrMDgaCZCLjgx',\n    poolLpTokenAccount: 'DiebAVak6cub1Mn3yhhvgSvGhkAP1JTtyRGoAei4wrWE', // lp vault\n    poolRewardTokenAccount: '4F9FaFewwsSF8Bsxukyj9NiEdPFQQ38dNKEDpZugYfdi', // reward vault A\n    poolRewardTokenAccountB: '4tvLbnZEPZLuDf636DHEzrUxW8bDoZ5XyfVwk7ppDhbC' // reward vault B\n  },\n  {\n    name: 'ALEPH-USDC',\n    lp: { ...LP_TOKENS['ALEPH-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.ALEPH },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'JAP8SFagJBm6vt2LoFGNeSJ1hKDZ2p3yXb3CvBx11How',\n    poolAuthority: 'DVtR63sAnJPM9wdt1hYBqA5GTyFzjfcfdLTfsSzV85Ss',\n    poolLpTokenAccount: 'feCzxSvVX4EboJV4cubjqoPTK41noaHUanz8ZNJmiBp', // lp vault\n    poolRewardTokenAccount: '4mAhgUY8XGMY4743wuzVbLw7d5bqqTaxME8jmbC2YfH4', // reward vault A\n    poolRewardTokenAccountB: '3sGDa8ir8GrkKbnBH6HP63JaYSs7nskmmVHpF2vuzaZr' // reward vault B\n  },\n  {\n    name: 'TULIP-USDC',\n    lp: { ...LP_TOKENS['TULIP-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.TULIP },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '7U8Z6TWQMtsMcHV2htALnF9VQonnD1MrVm17YtmGEGEw',\n    poolAuthority: '9ZVNLEiBZ2u23P7rEJf5sXY7TZK723cmVs46pBRSbRnU',\n    poolLpTokenAccount: 'B6xn6doS3Qfy1LJLbdcJa5MpJ4po2bgut1rKFvmmq6Ut', // lp vault\n    poolRewardTokenAccount: 'GtPTgCr6nXiogRCWqGvLa8P6dJgZpHfAX3KxGMpxnGMJ', // reward vault A\n    poolRewardTokenAccountB: '8qgijAifBGx2EAJ7zKAzk6z7dVpcDV9eHvTBwofmdTP5' // reward vault B\n  },\n  {\n    name: 'SNY-USDC',\n    lp: { ...LP_TOKENS['SNY-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SNY },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '31QSh1TwgoA9GbvkgfEEwKEm11t8CR4KiQr6WCyJr7EN',\n    poolAuthority: 'BbebocNt4ySwkufrY1X3wRG8PVefCRLFR2E2TGzZPkne',\n    poolLpTokenAccount: '2t1qozn7xtWjuCqnnTx4PaKikajN2AQK3CVH6A5JqagY', // lp vault\n    poolRewardTokenAccount: 'GXZq2zNPZ9odPWAPinxXK8B7cMaAN9CpbcaLicksJsbt', // reward vault A\n    poolRewardTokenAccountB: 'DdSL2stD9UXfY2nj9MKrNPx8QTro1GGAY6rsBd9kJXMX' // reward vault B\n  },\n  {\n    name: 'BOP-RAY',\n    lp: { ...LP_TOKENS['BOP-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.BOP },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'EEe8b72w5q6T86nYRNJdFcY25tznPzrd1jGjuxZ7f9mX',\n    poolAuthority: '7d99wJT2nRjWe2eKF7FpzMFb7934KoRhLP7pp2bjRm9m',\n    poolLpTokenAccount: 'FWMHgA5iUxz3zMYf7jRJk8Z9ebWNWpvd7358rGCPFr7M', // lp vault\n    poolRewardTokenAccount: 'DhvRSrQUio8LpCJH4uFCvvK4MEYVrBA6xaj1hu9jVxZn', // reward vault A\n    poolRewardTokenAccountB: '3c6552swYV5nBTKTCWfKURjN1uGjtceanfb3vRbHNXpN' // reward vault B\n  },\n  {\n    name: 'SLRS-USDC',\n    lp: { ...LP_TOKENS['SLRS-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SLRS },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '5PVVwSqwzkCvuiKEZwWkM35ApBnoWqF8XopsVZjPwA8z',\n    poolAuthority: '7jNUxDiLLyke8ECShavvPPQz4D1abj4aCZwQfZ3TCTAX',\n    poolLpTokenAccount: 'HTr2pYDBQZP13YTzLdsPzmh6e4hsNeqoGy3B777ejqTT', // lp vault\n    poolRewardTokenAccount: 'Ef1tQ2E2Fe92xPVpQGzZFHmT7g7dh2hzVfWYVJJQPdbu', // reward vault A\n    poolRewardTokenAccountB: 'Ffmv9Ximzk8D9oKwHkkgdq9cVxv5P5Y9LxEJdu1N1jSJ' // reward vault B\n  },\n  {\n    name: 'SAMO-RAY',\n    lp: { ...LP_TOKENS['SAMO-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SAMO },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'Bw932pURVJRYjEJwRZGWjfUNpeyz18kjMNdb833eMxoj',\n    poolAuthority: 'FzTbGLdzgWCRkq8hbS8tLf5HjfU7JzUbtRmTkjGQB9Vz',\n    poolLpTokenAccount: 'GUVKfYMiGEyp41CUw2j2NsoQJ5zDQ3Q6uSdApM8W46Ba', // lp vault\n    poolRewardTokenAccount: 'J99YW5wnfgBJcG17BgSbp1S8RNJ39JAb7kg9RGHyb3Hq', // reward vault A\n    poolRewardTokenAccountB: 'GhctEMRSwvdZF7aFeCLdK9X1sAAeGVPjr12iVLjQNvhy' // reward vault B\n  },\n  {\n    name: 'LIKE-USDC',\n    lp: { ...LP_TOKENS['LIKE-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.LIKE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'BRM5bdX2mjmFGg2RAent1Whd61o9asQD16BXsC6QvEni',\n    poolAuthority: '9rThpjxEgNR5xi2z2QgXenS2RwRrrN1GqrudegT32Ygy',\n    poolLpTokenAccount: 'FzVu8n4UCf3o1KH4X8khM9KgKA96dJQdQMPtLvmbHyNi', // lp vault\n    poolRewardTokenAccount: '3G1cbktUU79CT3zskP16VYmEhwVQq2RYxVWV7fcjmkTX', // reward vault A\n    poolRewardTokenAccountB: '2Ks41qfN2GZffbd1cqrNGuXJYJbShHhz6aHQvq8SaYYr' // reward vault B\n  },\n  {\n    name: 'RAY-SOL',\n    lp: { ...LP_TOKENS['RAY-SOL-V4'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: false,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: 'HUDr9BDaAGqi37xbQHzxCyXvfMCKPTPNF8g9c9bPu1Fu',\n    poolAuthority: '9VbmvaaPeNAke2MAL3h2Fw82VubH1tBCzwBzaWybGKiG',\n    poolLpTokenAccount: 'A4xQv2BQPB1WxsjiCC7tcMH7zUq255uCBkevFj8qSCyJ', // lp vault\n    poolRewardTokenAccount: '6zA5RAQYgazm4dniS8AigjGFtRi4xneqjL7ehrSqCmhr' // reward vault A\n  },\n  {\n    name: 'RAY-USDC',\n    lp: { ...LP_TOKENS['RAY-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: false,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: 'CHYrUBX2RKX8iBg7gYTkccoGNBzP44LdaazMHCLcdEgS',\n    poolAuthority: '5KQFnDd33J5NaMC9hQ64P5XzaaSz8Pt7NBCkZFYn1po',\n    poolLpTokenAccount: 'BNnXLFGva3K8ACruAc1gaP49NCbLkyE6xWhGV4G2HLrs', // lp vault\n    poolRewardTokenAccount: 'DpRueBHHhrQNvrjZX7CwGitJDJ8eZc3AHcyFMG4LqCQR' // reward vault A\n  },\n  {\n    name: 'RAY-ETH',\n    lp: { ...LP_TOKENS['RAY-ETH-V4'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: false,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: 'B6fbnZZ7sbKHR18ffEDD5Nncgp54iKN1GbCgjTRdqhS1',\n    poolAuthority: '6amoZ7YBbsz3uUUbkeEH4vDTNwjvgjxTiu6nGi9z1JGe',\n    poolLpTokenAccount: 'BjAfXpHTHz2kipraNddS6WwQvGGtbvyobn7MxLEEYfrH', // lp vault\n    poolRewardTokenAccount: '7YfTgYQFGEJ4kb8jCF8cBrrUwEFskLin3EbvE1crqiQh' // reward vault A\n  },\n  {\n    name: 'RAY-SRM',\n    lp: { ...LP_TOKENS['RAY-SRM-V4'] },\n    reward: { ...TOKENS.RAY },\n    isStake: false,\n\n    fusion: false,\n    legacy: false,\n    dual: false,\n    version: 3,\n    programId: STAKE_PROGRAM_ID,\n\n    poolId: '5DFbcYNLLy5SJiBpCCDzNSs7cWCsUbYnCkLXzcPQiKnR',\n    poolAuthority: 'DdFXxCbn5vpxPRaGmurmefCTTSUa5XZ9Kh6Noc4bvrU9',\n    poolLpTokenAccount: '792c58UHPPuLJcYZ6nawcD5F5NQXGbBos9ZGczTrLSdb', // lp vault\n    poolRewardTokenAccount: '5ihtMmeTAx3kdf459Yt3bqos5zDe4WBBcSZSB6ooNxLt' // reward vault A\n  },\n  {\n    name: 'MNGO-USDC',\n    lp: { ...LP_TOKENS['MNGO-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MNGO },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'GzEDEkHSFFfxKMu3Toww1nrEjtbQGJKRPNRK1Pfd59Zn',\n    poolAuthority: '9AMvw1TUJ9gX1kUAvcmHt2ZjokBLepXQbN8EJxBVZu2s',\n    poolLpTokenAccount: 'gjrMLKsNwXYzJnX9DT8Lc7HeC1AT52jQKtDkPiRRuEP', // lp vault\n    poolRewardTokenAccount: '4czqUC2ebdvqxPXfRniknLk7Cr2TosTabQSRnUeFia9v', // reward vault A\n    poolRewardTokenAccountB: '6K1AE1wnTNaMgcAgQPvrTbnWEHB7nW6uTtv7ZbXWgMtn' // reward vault B\n  },\n  {\n    name: 'COPE-RAY',\n    lp: { ...LP_TOKENS['COPE-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.COPE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'CM9XTJfXEHceGPXhmXxheR87Ng9CZ4jiBoTVQHhs9DVN',\n    poolAuthority: 'AWYeNgCErUafmBU2TtZgzNwixpKd3BxRTmvYDw7U1jgN',\n    poolLpTokenAccount: 'FLqRe3W9Lp59uNgzkACsXpEZkWUxBBstMtUyGSzqFhXD', // lp vault\n    poolRewardTokenAccount: 'Ex23TUPEarZepXdHgjm7LVy35HDWY2VgeKao5kjYRZGE', // reward vault A\n    poolRewardTokenAccountB: 'JDjSMCSK9s9dDsiiXeT3HVaX48k7WewyKBoMPax3TZxL' // reward vault B\n  },\n  {\n    name: 'LIKE-RAY',\n    lp: { ...LP_TOKENS['LIKE-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.LIKE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'AMcVWK66iexwwCHn8drxywdNr2UgH3vmRzLXQFdErGmL',\n    poolAuthority: '32yVBkvq29AmXKu1A3xUtgHrMGFnLvxF18fhd4JLKfJs',\n    poolLpTokenAccount: '6f72fpk4WDeqpTJZ4dLSvAacfwmCAfEk7RtuPQ5oyNd7', // lp vault\n    poolRewardTokenAccount: '4oPdHXXdRmjtKMLCcK8rtp3vMmq9y9LJ6W83mqrqMjCt', // reward vault A\n    poolRewardTokenAccountB: 'E49fLhK6Wv43FySZB1xybPghzK2cjr9hgfpcmcVSLeYm' // reward vault B\n  },\n  {\n    name: 'MEDIA-RAY',\n    lp: { ...LP_TOKENS['MEDIA-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MEDIA },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'DJfvL6srBht8XFMWYuuKHYGainqvwXyA5icVsDne3pwN',\n    poolAuthority: '69PxTdPaRSofBJkwT9mYW14cPUEe7fU2AYEDvt3q5Fkt',\n    poolLpTokenAccount: '3Kaibb6xYpKjFejtkgH8tBrMWShWzwBd7WfcGygZ4Vcw', // lp vault\n    poolRewardTokenAccount: '28kE8Erc2uFThiUr8RifoUEc9Kv8V54To6DJLgCuJEPp', // reward vault A\n    poolRewardTokenAccountB: '3kofbYH2hPefwHSgMburaGN5XmJx7sD94jo5CsMCXzLE' // reward vault B\n  },\n  {\n    name: 'MER-RAY',\n    lp: { ...LP_TOKENS['MER-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MER },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '21xhrT4j8QnaBvj3QjhP5kZu8sXJMCE7hzHKGtWEkdKr',\n    poolAuthority: '6GrjogDgJ56mPcNu1nFw7MVLMALoNzd6RsZiXrQAuTvh',\n    poolLpTokenAccount: 'Ee4zr6okPiyG6ia8kZfPwoNRDtNsrn4YfPc7MMmTqufR', // lp vault\n    poolRewardTokenAccount: 'FnSG5cBXyEqo3DxKrcjhj7wo8un3HrxABQrxfA5uKWsg', // reward vault A\n    poolRewardTokenAccountB: '8yL9QK96Ag3NnvqZmcaupb7c4NeP5hJXraGS3jCzMzT' // reward vault B\n  },\n  {\n    name: 'SLRS-RAY',\n    lp: { ...LP_TOKENS['SLRS-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SLRS },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'J61AnYYSwjtJ4wDqEqqWSBuZbiR2SDDrtF7FFobutM6a',\n    poolAuthority: 'BHGHqkJomVD5tKNMZFajA1PZEJaZW5Yywyp6UAcvf1Wq',\n    poolLpTokenAccount: 'H8NEHvqm43DxWbMfvLMvUqoKrjG4B4EJXEYBz2DYhRHd', // lp vault\n    poolRewardTokenAccount: '5g1ox4cwcfNFsqPiGH2zhsHYpaBf6rkigL6YR5ZBQA5k', // reward vault A\n    poolRewardTokenAccountB: '95b2zMqRGsovcR69XXfRPcvLdyvLCH5M5nd4z27yC8Q1' // reward vault B\n  },\n  {\n    name: 'SNY-RAY',\n    lp: { ...LP_TOKENS['SNY-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SNY },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'JEC3P83x2GEijYDwXiksuh5H6YrQt5xW6MC2GDKkMoe',\n    poolAuthority: '9qwnkx2gRMLVoYkJVkyH2Yza5e5E7LoZEpx9jZ9r3CBY',\n    poolLpTokenAccount: '7JrCLqrhH9kb78St4dAncBYE9VhZdB4P1tFAdxwzDrH5', // lp vault\n    poolRewardTokenAccount: 'HmovkXKsso8xHwPYmMYF5bmP5CCwCtReQVb8ETTSSoyN', // reward vault A\n    poolRewardTokenAccountB: 'GXJSX1JNjjAK6jEEjujvzhCjMeVnZmpJ5fng3daynCnY' // reward vault B\n  },\n  {\n    name: 'TULIP-RAY',\n    lp: { ...LP_TOKENS['TULIP-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.TULIP },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'BmbG9hv5PazcW3rYWvatA6HpNPkozEdkWBiU64pZxuwr',\n    poolAuthority: '956MvcyRBPMZ6waK3bdD4dn3XfaganoKed1NUQ9NaFAg',\n    poolLpTokenAccount: 'HMgHKCLetHYDUJZEXKRJCiSeQs4Udwy6MNXHoLruMctH', // lp vault\n    poolRewardTokenAccount: '5ih22SsrffDjygZHF8ADyJa4TNKQZqANg7dXyBJN9V8P', // reward vault A\n    poolRewardTokenAccountB: '3zK56FmEqeH93BuH5K7JY9ZaEfFMdo3YjAasFikCmDB1' // reward vault B\n  },\n  {\n    name: 'ALEPH-RAY',\n    lp: { ...LP_TOKENS['ALEPH-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.ALEPH },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '4wvZ9SwWaHKTpshQbCSKQoPosZp9KGwUzuQdESi39qPn',\n    poolAuthority: 'G3tniqor4UrtE29UQLGcBBuk4ScvonDpXiPSDTK3RioJ',\n    poolLpTokenAccount: 'Fx32reDAB5MyJJwr8CjCM1fNgFsmnjhaxjC9pJswpUok', // lp vault\n    poolRewardTokenAccount: '34gWdzwgj1zWQG4iwSbTeUDbQkoR8DXzLFQJsSpPDXLa', // reward vault A\n    poolRewardTokenAccountB: 'Gm4v69FCZ33HZsHAgtdezAUJK6n5fQ3zHpTZxAAzeyoJ' // reward vault B\n  },\n  {\n    name: 'RAY-SRM',\n    lp: { ...LP_TOKENS['RAY-SRM-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'BnYoq5y2MoH4TsBHeEZrEPowhwebHxQq7nJW1vTjPTWu',\n    poolAuthority: '8JMnGryLkzSYdnTUPGRgxHoAmP5soH8L8TRre91Gjgni',\n    poolLpTokenAccount: '6tuhozgcTA25fq5Lp11QX9HsG8MVspUjtcn7EgYP1cs5', // lp vault\n    poolRewardTokenAccount: 'ED6Ak5wnnegeVz6jWMzGEEnFQ7HY55uPdxR8Ha6hk7gz', // reward vault A\n    poolRewardTokenAccountB: 'G4zqVtnHSK9Sp3SVdiQ5K56m46BdAoE2uQqpgVsmRG9d' // reward vault B\n  },\n  {\n    name: 'ATLAS-USDC',\n    lp: { ...LP_TOKENS['ATLAS-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.ATLAS },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '93wRz2LeQ3TJoair827VTng62MjCzYDgJjG9Q5GmQ3Pd',\n    poolAuthority: '4yrRmmckKKGsPbCSFFupGqZrJhAFxQ4hN2DMC9Bh2pHo',\n    poolLpTokenAccount: 'HmE21hdD32ZjDnR5DvuNz7uS5q4bWbqf8jV2shx8kXmA', // lp vault\n    poolRewardTokenAccount: '9iQsupP7JagNLkp1bvdWWGVkzsLFfHUwDbh9KZPoXbw5', // reward vault A\n    poolRewardTokenAccountB: '5oQU1hU6qggyT4CU2AMPcWTcZdSRZeQBy7How5WuEp7A' // reward vault B\n  },\n  {\n    name: 'POLIS-USDC',\n    lp: { ...LP_TOKENS['POLIS-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.POLIS },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '7qcihXTsRW5wS5BgK7iuD84W43ECByoJP45R3hu2r6mF',\n    poolAuthority: '3MAzzKcBPJ2ykDHX1CBHzUJafy41FaTaLymg8z6SgX2Q',\n    poolLpTokenAccount: 'FwLD6rHMwm5H6edDPuGjxdBMk3u38frsnytTkPmVZVP3', // lp vault\n    poolRewardTokenAccount: 'AWQr1eX2RZiMadfeEpgPEQJBJq88f7dPLK3nqriKCPJp', // reward vault A\n    poolRewardTokenAccountB: 'DfofnRgWFPHVaxaLGSdXvFGhr4TRwjdwQQvgkjNNkJfZ' // reward vault B\n  },\n  {\n    name: 'ATLAS-RAY',\n    lp: { ...LP_TOKENS['ATLAS-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.ATLAS },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'BHHhNLdJn69K1XPJcpcw4MBY3TPetpLxhj8s4K4ydsDV',\n    poolAuthority: 'DjYd34HtSwwAGfTfK13onUyq975akjzfW2abaK5YTRaS',\n    poolLpTokenAccount: '5RPJHt2V4baK7gY1E99xCRBtEzScuNEVPr9vA9PapLhs', // lp vault\n    poolRewardTokenAccount: 'AQwjpEoLwnHYnsdSnzwRpSkTSeLDNYZ6tv6odVGzXJvZ', // reward vault A\n    poolRewardTokenAccountB: 'DBXQnchh5zQuiEfaE8JBPTre8G1mksVTsHXoSqRPfA3r' // reward vault B\n  },\n  {\n    name: 'POLIS-RAY',\n    lp: { ...LP_TOKENS['POLIS-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.POLIS },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'HHm8Pgnzc56fTUYkicPv4DqGYp5fcPZFV1V1uhixSrMk',\n    poolAuthority: 'GHPg6z7HYx1bsdK4W9WpdmV8BcjpPBBsRGMmj9dAD3yq',\n    poolLpTokenAccount: '4wGbaNEGeGjqqgW5S9AAWvQL3LwWZioH1JWMZFBdPFge', // lp vault\n    poolRewardTokenAccount: '4xrr44aG4kkgqQPZhBre93vg5fFY2htkkEEmTQjx5hiG', // reward vault A\n    poolRewardTokenAccountB: 'EanBQNubTJs2fNgeosUcESCfBnvk6bci391U5SH4Kzoo' // reward vault B\n  },\n  {\n    name: 'GRAPE-USDC',\n    lp: { ...LP_TOKENS['GRAPE-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.GRAPE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '8GBa1cK1NxevoxiRNK6YW9tWuo2xftcA3as9Cu4nhFL7',\n    poolAuthority: 'Gab4kPHmj5Hqn1KWEDsKt6Ta8jPtpc53oCPULszMNtyj',\n    poolLpTokenAccount: 'eoVzVdFEkKPKY3djJ47RZjvNr5oujYY25uxXwNvrsfg', // lp vault\n    poolRewardTokenAccount: 'AYoDAc5ndfts4Aw6vzH7XUB2GsXamj72aunzBcBCnz2f', // reward vault A\n    poolRewardTokenAccountB: '5i2qZN5UH4UyF3t6HNeC1bXeXhWBZy1pwpCjLDG7AdJJ' // reward vault B\n  },\n  {\n    name: 'LARIX-USDC',\n    lp: { ...LP_TOKENS['LARIX-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.LARIX },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'HzxveT6pUMwYByqnScvTbpUv4avzkUDrDpS9D7DToEry',\n    poolAuthority: 'sCDx3LzV8jPFX1VuRQDAGNKVfiCvhvrv3tJijaXzhXw',\n    poolLpTokenAccount: '6PpGF8xRLwpDdVMQHQoBhrrXuUh5Gs4dCMs1DPanpjHM', // lp vault\n    poolRewardTokenAccount: '7tPiMrZB6kct1xNWLtG1jJqJYUJaG8548bEaJsb5HdXq', // reward vault A\n    poolRewardTokenAccountB: 'DXo3ffHBd69c9tV4wWBtFhc95UZMfYJehGnk3ViifSQ3' // reward vault B\n  },\n  {\n    name: 'LARIX-RAY',\n    lp: { ...LP_TOKENS['LARIX-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.LARIX },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'Fbwy4XWMjXuP1nXg4xph4RJ9E9twVXeknXokF38PVgG1',\n    poolAuthority: 'CcRZ2sBjxFtPM2GFJ4HeRu4eeBTsx9Ng5Mug6uxUjZxo',\n    poolLpTokenAccount: 'DuYWhnzzb8yrqxnF2vd2TqP2WcWjAx9VneLhiMEwusPk', // lp vault\n    poolRewardTokenAccount: 'xZHuntrMkq7EA9tahmuzC8Z4WoL7DhxoWDmGCkyaLf2', // reward vault A\n    poolRewardTokenAccountB: '9AEGPpd5E6PbHkCxeFBB52xrK8fMrKdNKMaQDp95arX9' // reward vault B\n  },\n  {\n    name: 'stSOL-USDC',\n    lp: { ...LP_TOKENS['stSOL-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.wLDO },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '5gzQgxaKAU13SZeffmjjE2y9HwMJ42FxQkqJhJ5nqHeh',\n    poolAuthority: 'DKSSeokFtU7cHKMdgNcZ72JETgf9Q3PqcGsk6hnzKxT4',\n    poolLpTokenAccount: 'CoUQ1tcRkEyxbCHfLkjxgUtYVhrRbsdeMKT7zB2iCZg5', // lp vault\n    poolRewardTokenAccount: '5fnav2gjLUjPCwHEnm2vMVmsDV3V8sfjj7MwfeUdgdtM', // reward vault A\n    poolRewardTokenAccountB: '8geEcDpFkXqR2UEE2LVcYCzsD9cyGwJSu8Q56uqr1xs6' // reward vault B\n  },\n  {\n    name: 'BTC-mSOL',\n    lp: { ...LP_TOKENS['BTC-mSOL-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MNDE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '914jyHBQFiroKFVCpKkzjGSaZyr4gMwgxE7snbNfGjnL',\n    poolAuthority: 'Gb17eJ4TK95SXPduUuh5YFJH4iz73qNFHmrqFBn1Tv9R',\n    poolLpTokenAccount: 'GYNDinXxGR5zsNn6bDWAidWFKT1JMQbyneuzPGosUDR7', // lp vault\n    poolRewardTokenAccount: 'HVAxutFAei62E2Wn1eueYCrCPCCMrkho3xq6NyzW9hQA', // reward vault A\n    poolRewardTokenAccountB: '7GbsEKskWjK9S4B3CayAGj2uL8v48u5RXZN7eSGWHABZ' // reward vault B\n  },\n  {\n    name: 'ETH-mSOL',\n    lp: { ...LP_TOKENS['ETH-mSOL-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MNDE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '54vUWjEmg9wfCsZF7wwq2HJu5BU3cfDFAQQQgXPECcwE',\n    poolAuthority: 'E4VNit9T28vRtiLv8e5o7HgVNs7frULkViYBpUjj6pTS',\n    poolLpTokenAccount: '3vgFo13L14woTPNC249BFgwHMAAajfhjUbvDLSKDnBtP', // lp vault\n    poolRewardTokenAccount: 'YVQYnEoLYv7d7JEGPLSSkmxpwVCdWjzA4kdeoag78kd', // reward vault A\n    poolRewardTokenAccountB: '6pMVuiTtFSmzEPWzoUdQiQxcdEED5Z1jTakvQBHiGCcU' // reward vault B\n  },\n  {\n    name: 'mSOL-USDT',\n    lp: { ...LP_TOKENS['mSOL-USDT-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MNDE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'HxhxYASqdLcR6yehT9hB9HUpgcF1R2t9HtkHdngGZ2Dh',\n    poolAuthority: 'FGJKdv7Wm1j75cBsj7FsZU256fhDSYVTwYkzFQ3sVQqg',\n    poolLpTokenAccount: 'CxY6pDZxPr8VAArC427NQficTpKEm3VxTVZEZQdQFexZ', // lp vault\n    poolRewardTokenAccount: '94zGzNAzv2xU8YW3uHYkiysjG9Qw2gCv7wx9tye1uYbE', // reward vault A\n    poolRewardTokenAccountB: '8mJzCGURgpUDLnB3qaSQt3xyM7MEKpPcvzXxWTGCQbTb' // reward vault B\n  },\n  {\n    name: 'MNDE-mSOL',\n    lp: { ...LP_TOKENS['MNDE-mSOL-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MNDE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '97N6tPMVCrAunC9embwTcffye9xC95fA5y3LauhNZ444',\n    poolAuthority: 'hK1KZ5gEkGfrtQGF6qAP3tVjhYirRTt7TY3nFfwq8UV',\n    poolLpTokenAccount: '4w3kTW8LYPMqCZAkWyHZ7wxgBrjpF72x6ca3d1Aigwki', // lp vault\n    poolRewardTokenAccount: 'EhJLBNXDDZxXNDtYVineXadSe3T7zsHN8KsgwSAskQ4R', // reward vault A\n    poolRewardTokenAccountB: 'GTzobZsm4F4RTXDLnEJoWtXF7hxu9RDLpfvgcxDRfRUk' // reward vault B\n  },\n  {\n    name: 'mSOL-USDC',\n    lp: { ...LP_TOKENS['mSOL-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MNDE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'DjtZxyFBgifzpaZEzfsWXogNX5zUCnTRXJqarGe9CiSv',\n    poolAuthority: 'AcTRjdD3x4ZHzKGaApVo2RdJ7Rm7f2kaheCiDEjSr1xe',\n    poolLpTokenAccount: 'HUM5nLWT94iRQRQ7GSsjJ1DDWqWKhKfdGQCJCf7SypeD', // lp vault\n    poolRewardTokenAccount: 'A5W9spnyknywKui1vudnxUomdnebrZVUnjKW6BHgUdyz', // reward vault A\n    poolRewardTokenAccountB: 'JE9PvgvXMnVfBkCdwJU4id1w2BaxTuxheKKFdBfRiJZi' // reward vault B\n  },\n  {\n    name: 'mSOL-RAY',\n    lp: { ...LP_TOKENS['mSOL-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.MNDE },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '7wNhbTS6XQczXs52wcVmfiodRMPfycB3YaG52dWWY6SD',\n    poolAuthority: '2MbHFiv8H2jjJboqWCaEY1iQh7WFQEwbqNQMYqXUre1p',\n    poolLpTokenAccount: '4vyJYQyWusNxCCyFDvWwzjVZFJByAVudWvuTzgHYzwTY', // lp vault\n    poolRewardTokenAccount: 'Erz6ai92ieTAqWKHP1tkpGgBKrUJsKe7dhCUyhqtjKRv', // reward vault A\n    poolRewardTokenAccountB: 'Ejed9odWtRtNrSndDnrWvu9LaiqCANbkeKHTS3g3H1Xj' // reward vault B\n  },\n  {\n    name: 'LIQ-USDC',\n    lp: { ...LP_TOKENS['LIQ-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.LIQ },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'CzKUrVbP7hH8EjcHNc55ZFW33rJyLQ2r52bxCzaGTpz',\n    poolAuthority: '9vLMWjM1u1gAyAt3tYtRLyf1vHPZfgtBECEgGtW6wbSM',\n    poolLpTokenAccount: 'BmD9dfArwe8X2NxVUyNif2Cm47qxpyUwKGS34B9Wmt9x', // lp vault\n    poolRewardTokenAccount: '6oLDL6RMTYaE4zBWid6RANqDz4YUbEjHvsWxD2QXpmLM', // reward vault A\n    poolRewardTokenAccountB: 'GwkLHtcPgWbDsdoweuDaAvVQgwCbQ8FWVEDref7xmpZu' // reward vault B\n  },\n  {\n    name: 'LIQ-RAY',\n    lp: { ...LP_TOKENS['LIQ-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.LIQ },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '5XdeFdcJoCAPMfgYndMPcsijFBKFp2cPSCjrCZzmpTE5',\n    poolAuthority: 'D8i2QREg8SnQAqH29kQpWtL8EKsJqED1oyNaJvYjdYCX',\n    poolLpTokenAccount: 'GdEyL524epc1SQQKHocrjEq3SbAXczuzZEfw91MfCgoh', // lp vault\n    poolRewardTokenAccount: '2uCm4AEafnRgyLit1gdVmkqtpg1kmJY2dWAgC8TpCCBQ', // reward vault A\n    poolRewardTokenAccountB: 'HKLCdmXYAkPBKG8jE8YE12kyUaovYWSJiyrrqmWNxjqk' // reward vault B\n  },\n  {\n    name: 'SYP-RAY',\n    lp: { ...LP_TOKENS['SYP-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SYP },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'Gf3qFzKnGvMCVMQZERW2Qso5uEYxd9B9kWZZHsrMmmHj',\n    poolAuthority: 'ADuiJjCaDP5rEXQEyLZYvV9WgkRHPmGgsB6hss8WCKtE',\n    poolLpTokenAccount: 'Bqz61QpzmEuvB37QzkPLgnKHW2pRkH8Zcdh54DJicayG', // lp vault\n    poolRewardTokenAccount: '4LXUy3qtHwK3nkgmrSwupdBoS4ybn2FZcZBbazCV9cHV', // reward vault A\n    poolRewardTokenAccountB: 'FJCKa9tpiVV84zT3VQTxP7uNVyghDTTEGKX1jsXvVRBz' // reward vault B\n  },\n  {\n    name: 'SYP-SOL',\n    lp: { ...LP_TOKENS['SYP-SOL-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SYP },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '2pQQnoNpm5LoG6sZs5toNBXi4m1Pj3ExXdggPQYyiP2x',\n    poolAuthority: '4t9yWe9N1tBfTZKkmUdYFRjuY3xJP9AwXNYuStASYx45',\n    poolLpTokenAccount: '81nhtKAVM1yBwUmHQSQHwbkpZGvXrs58Qz7Uj4SLAv5F', // lp vault\n    poolRewardTokenAccount: '9jSMiKksbshsUgpwyMap96yFJ6Hdjvj8uEhw8CZnS49d', // reward vault A\n    poolRewardTokenAccountB: '4jebfTbaZugbkEZwzbX17iiC6d1dzQ3Ho8XCTyTZUSBm' // reward vault B\n  },\n  {\n    name: 'SYP-USDC',\n    lp: { ...LP_TOKENS['SYP-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SYP },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'Byt2kL5qi45pMpdAsNNciKZ8HLp7oU5jizCbyARLtQJy',\n    poolAuthority: 'EGBJV1YpgYhRSuNkz2w6NvhNxdLg1ZqRDaZSg4HysoTF',\n    poolLpTokenAccount: '8EziNww86hPoStUXPsPSvMuPaNxXP34597azYWshi6sx', // lp vault\n    poolRewardTokenAccount: 'Fx69V3iFYHk3Sj87nUbQoZsiuQ62hDucSagX4DPUiraQ', // reward vault A\n    poolRewardTokenAccountB: 'DMy3GrT8atWEV3Lcofv8mG5FsUq1HuqDHfpU3sLTkoJx' // reward vault B\n  },\n  {\n    name: 'WOOF-RAY',\n    lp: { ...LP_TOKENS['WOOF-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.WOOF },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '8W2TqGCiFiqR1JD4sbW8uTRjV2HvFjLhkZ2tAQTYE4Gc',\n    poolAuthority: 'EShmXWydGxetCKmJGCpZbRKYk1bS67JiUjpt9yue5xZN',\n    poolLpTokenAccount: 'BpipxpLsEs5fvzdKmwHsB1o1r6umhXiqeU2RVFSjQ9mA', // lp vault\n    poolRewardTokenAccount: 'AsEty41c54HrxzjXnhDro7GGkVbGRyQQF111wSaUBM88', // reward vault A\n    poolRewardTokenAccountB: 'B7HMR3GXYfqCPqTg85V1dzjQGf3nLccPdj9tBcDcoThf' // reward vault B\n  },\n  {\n    name: 'KIN-RAY',\n    lp: { ...LP_TOKENS['KIN-RAY-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.KIN },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'FgApVk6mASrkuWNxmsFvsaAYkFKqdiwMTvYZK36A2DaC',\n    poolAuthority: '7kEx8qnkZPkRXV6f4ztf27zYjCACBHY3PUMfuiYJsoML',\n    poolLpTokenAccount: '7fgDjhZn9GqRZbbCregr9tpkbWSKjibdCsJNBYbLhLir', // lp vault\n    poolRewardTokenAccount: '5XZjRyEo8Wr2CtSE5bpoKioThT9czK1dUebbK87Lqkaa', // reward vault A\n    poolRewardTokenAccountB: '8jGJ3ST1j9eemfC6N2qQevtUdwxT7TpXW1NmvWyvLLVs' // reward vault B\n  },\n  {\n    name: 'FRKT-SOL',\n    lp: { ...LP_TOKENS['FRKT-SOL-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.FRKT },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '36Rf8dzq5gy4Ew2bLQEgKoCKVTku4EJPLqFYG6mzFrkr',\n    poolAuthority: 'GwXKptwrXvFQ2VjcjXc9JwVzmAeGvPH9ogtq54AaDZcm',\n    poolLpTokenAccount: '46WoMBPtrzD6rJVF8Znu5RGsCpjRvNUKCCe87eaedmQm', // lp vault\n    poolRewardTokenAccount: '6GWBHRbqtT5qsn234yfqhC7zvtHnR5pNq53rDJDAWDn4', // reward vault A\n    poolRewardTokenAccountB: 'CaGvtrQj71GkY9RXHzDerhp7iKdBD8iVr6uWEhVuMcm' // reward vault B\n  },\n  {\n    name: 'whETH-SOL',\n    lp: { ...LP_TOKENS['whETH-SOL-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: true,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'Gi3Z6TXeH1ZhCCbwg6oJL8SE4LcmxmGRNhhfA6NZhwTK',\n    poolAuthority: 'HoUqzaqKTueo1DMcVcTUgnc79uoiF5nRoD2iNGrVhkei',\n    poolLpTokenAccount: '9cTdfPLSkauS8Ys848Wz4pjfFvQjsmJpVTUnYXffkubb', // lp vault\n    poolRewardTokenAccount: '2MMFGZGEjQRovNeNtj1xN9redsVLYTMVcXzFTLQCw6ue', // reward vault A\n    poolRewardTokenAccountB: '6DhjnWKLbxnDSFZApaVJXCY2wbzgt2mYhvW3yBreaYsY' // reward vault B\n  },\n  {\n    name: 'whETH-USDC',\n    lp: { ...LP_TOKENS['whETH-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '8JJSdD1ca5SDtGCEm3yBbQKek2FvJ1EbNt9q2ET3E9Jt',\n    poolAuthority: 'DBoKA7VTfnQDj7knPTrZcg6KKs5WhsKsVRFVjBsjyobs',\n    poolLpTokenAccount: '2ucKrVxYYCfWC6yRk3R7fRbQ5Mjz81ciEgS451TGq2hg', // lp vault\n    poolRewardTokenAccount: '3nhoDqudHBBedE9CuUqnydrWWiMFLKcZf3Ydc9zbAFet', // reward vault A\n    poolRewardTokenAccountB: 'B4LA1grBYY9CE3W8sG9asR7Pi2a6eSt2A8RHcXXKJ1UM' // reward vault B\n  },\n  {\n    name: 'weUNI-USDC',\n    lp: { ...LP_TOKENS['weUNI-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '6X495xkPWkw9SQFYf7yL1K8QooZyaeEQ6u7yMWNNZxNV',\n    poolAuthority: '7fzrABKta6exUaLZPgvmCrMYc81qgAdzVBtQyVa5ia7Y',\n    poolLpTokenAccount: '4wnWp8ywmCD9D1A4BuLLaJKZQx7FMvs2S97gJnyqsU8w', // lp vault\n    poolRewardTokenAccount: 'EDDGwRv5aBFQu9fxK75USg2FD38N5QQPQTMGQLRnf1jA', // reward vault A\n    poolRewardTokenAccountB: '4PvsqG7KkkeqiZYZx6UijATDU7B8FbXxyMNnKmgcQHqH' // reward vault B\n  },\n  {\n    name: 'weSUSHI-USDC',\n    lp: { ...LP_TOKENS['weSUSHI-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'AuyqPBiY6sNUpH6jx415NGcdvNdYbkbYsyVabUqEVdkj',\n    poolAuthority: 'AmgTDN5yBjjbCG5o1CtpxB7hxpaQtHCj1GYMFtQud7TJ',\n    poolLpTokenAccount: 'DoK13McBSoFb9Q37DqVkx5LiJTpYqhM2NUv4go1DJ5RF', // lp vault\n    poolRewardTokenAccount: 'FBbe6XRrXeaQ3XcXWk2tUi711HBrmmi2eLdX2L6DJ8SZ', // reward vault A\n    poolRewardTokenAccountB: '2YsF3Nvw4ZaTUNqbvaGr8UzrvnoWFB343s1tFRjvM1pE' // reward vault B\n  },\n  {\n    name: 'SRM-USDC',\n    lp: { ...LP_TOKENS['SRM-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '27bysJaX5eu5Urb5kftR66otiVc6DKK7TnifKwnpNzYu',\n    poolAuthority: 'HAWwtFc4MFNSXFyQbUZd2GefSwZLntCiumt1D6XM8jfk',\n    poolLpTokenAccount: 'HVEm5BG4jMHtwgrUtuiC9K17bjp9CjFpgqmzVABmzLxr', // lp vault\n    poolRewardTokenAccount: '9gs6XnKs3RMMSSQAZm3VCbRpoNmPMrGaQQGMmRKjPeSU', // reward vault A\n    poolRewardTokenAccountB: 'BsuQ3XCCapopam8byEzHzazyxcRn5dCT3UX9kUzozhw' // reward vault B\n  },\n  {\n    name: 'STARS-USDC',\n    lp: { ...LP_TOKENS['STARS-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.STARS },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'AwUDfg4NYbLQRAcFipoJwyZTpqNvw5v6C7EypryL12Y6',\n    poolAuthority: 'BBsHoRKkRGyyjsQEDqMMjg4vNNbZhWhsjBE9vQc15obQ',\n    poolLpTokenAccount: 'H5VXBm5Es85jhLN5VyePC95KCx4FyUDC9apq7ksvzBgK', // lp vault\n    poolRewardTokenAccount: '5DsNCnLyZm3B8iVACCWPvXs2WXfmfuA4uiRinJJuEZgz', // reward vault A\n    poolRewardTokenAccountB: '2LQWPUn6rxYrzW1oPM48ddXmWLJQTQ8P6UrJnE9ZCSy2' // reward vault B\n  },\n  {\n    name: 'weAXS-USDC',\n    lp: { ...LP_TOKENS['weAXS-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: '7fe8QcJ6W2kHKL1h1HMYYJoGXz2LUcwCjkxX6MX35orK',\n    poolAuthority: 'u83t5Q349zcntifRmWECeAJDoq8kuYwsNFQUcGEnwn1',\n    poolLpTokenAccount: '2QWeQZJMpvcqwNMH1kBrFRjXptk5N2Js6c4tya2Jxtdm', // lp vault\n    poolRewardTokenAccount: 'BFANrk5U8N2Mu3WnacBP453nHm8C9mHy2cZiTpVuiMEj', // reward vault A\n    poolRewardTokenAccountB: '5hEx1CZbzhTuZtWUV2UpCHLDrDgJ4o3BjQqAr2uDYkFo' // reward vault B\n  },\n  {\n    name: 'weDYDX-USDC',\n    lp: { ...LP_TOKENS['weDYDX-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'C8BjS9DGDvC2zS3n6fTvm1rjPbA33uZ7CAvEUZ3tg7aM',\n    poolAuthority: '8sW8go8eeyn9tCJEndchQ4RKfTkZGMDwKdNw9QVCpgys',\n    poolLpTokenAccount: 'vZUipizkaYcEa6fUBjtQU7A1dG8XmBgt6dCDFe16HyU', // lp vault\n    poolRewardTokenAccount: 'ATLtTWi5ongWbMqbHFrAiMD11dRPgDWyJLzc7tZTcnjK', // reward vault A\n    poolRewardTokenAccountB: 'CmW8akq2vGQeDUD1yeZTRbje21p5D61PW2mXK4kMBwo6' // reward vault B\n  },\n  {\n    name: 'weSHIB-USDC',\n    lp: { ...LP_TOKENS['weSHIB-USDC-V4'] },\n    reward: { ...TOKENS.RAY },\n    rewardB: { ...TOKENS.SRM },\n    isStake: false,\n\n    fusion: true,\n    legacy: false,\n    dual: false,\n    version: 5,\n    programId: STAKE_PROGRAM_ID_V5,\n\n    poolId: 'CZZnmfvSgNVUiDBG4wN2NNcaYbsKDN4kLsc3SN8DMw6i',\n    poolAuthority: '8jAuRD88B5arx8FXVRPVQt4oDWSpRHznNZDSnLSu5CWc',\n    poolLpTokenAccount: 'AYMp5MzHBJVZez25tDcrYjPvZkEtFWUc5MSdUZpc84Xh', // lp vault\n    poolRewardTokenAccount: '4MD45PUi8du6kt5m6q2Gfgz43dzCnXoJMpYxJTHQvzQz', // reward vault A\n    poolRewardTokenAccountB: '4FBypcmSNzuTxhRg13aoHKciaDjfkCkR7s2gHLoBF1T5' // reward vault B\n  }\n].sort((a, b) => (a.fusion === true && b.fusion === false ? 1 : -1))\n\n// for solana.tokenlist.json\n// for (const [key, value] of Object.entries(LP_TOKENS)) {\n//   const kk = key.split('-')\n//   let version = 'V2 '\n//   if (kk.length > 2) {\n//     version = kk[2] + ' '\n//   }\n\n//   const { symbol, mintAddress, decimals } = value\n\n//   let islegacy = false\n//   let isfusion = false\n//   for (const farm of FARMS) {\n//     const { lp, legacy, fusion } = farm\n//     if (lp.mintAddress === mintAddress && legacy === true) {\n//       islegacy = true\n//     } else if (lp.mintAddress === mintAddress && fusion === true) {\n//       isfusion = true\n//     }\n//   }\n\n//   console.log(\n//     JSON.stringify({\n//       chainId: 101,\n//       address: mintAddress,\n//       symbol,\n//       name: `Raydium ${islegacy ? 'Legacy ' : ''}${isfusion ? 'Fusion ' : ''}LP Token ${version}(${symbol})`,\n//       decimals,\n//       logoURI:\n//         'https://cdn.jsdelivr.net/gh/solana-labs/token-list/assets/mainnet/RVKd61ztZW9GUwhRbbLoYVRE5Xf1B2tVscKqwZqXgEr/logo.png',\n//       tags: ['lp-token'],\n//       extensions: {\n//         website: 'https://raydium.io/'\n//       }\n//     })\n//   )\n// }","import React from \"react\"\n\n// Convert a number to a string with commas taking into account decimal point\nexport function PretifyCommaNumber(props:any) { // alternatively use \"toLocalString() not browser agnostic\"\n  \n  function autoPrecision(props:any){ // TODO: PortfolioTable replace precision function with this\n    const { tokenFormatValue, defaultFixed } = props;\n    try{\n        switch (true){\n            case (+tokenFormatValue < 0.001):{\n                return tokenFormatValue.toFixed(6)\n            }case (+tokenFormatValue < 0.1):{\n                return tokenFormatValue.toFixed(4)\n            }default:{\n                return tokenFormatValue.toFixed(defaultFixed)\n            }\n        }\n    } catch(e) {\n        return tokenFormatValue;\n    }\n  }\n  \n  var countDecimals = function(value:any) {\n    if (Math.floor(value) !== value)\n        return value.toString().split(\".\")[1].length || 0;\n    return 0;\n}\n\n  function numberWithCommasDecimal(number:any){\n    try{\n        //return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n        //return x.toString().toLocaleString();\n        if (number >= 1){\n          //parseFloat(number).toString().toLocaleString();\n          if (countDecimals(number) < 4)\n            return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n          else \n            return number;\n        }else{  \n          return number;\n        }\n      }catch(e){ return number; }\n  }\n  \n  return numberWithCommasDecimal(props.number);\n\n}"],"sourceRoot":""}